@mixin tickStyles {
  @include size($euiSizeXS);

  background-color: $euiColorDarkShade;
  border-radius: 100%;
  position: absolute;
  top: 0;
}

.euiRangeTicks {
  position: absolute;
  left: 0;
  right: 0;
  top: $euiSizeS;
  display: flex;

  &--isCustom {
    left: ($euiRangeThumbWidth / 8);
    right: ($euiRangeThumbWidth / 8);
  }
}

.euiRangeTick {
  overflow-x: hidden; // Overridden if labels overflow horizontally
  overflow-y: hidden; // Should never scroll vertically
  text-overflow: ellipsis;
  font-size: $euiFontSizeXS;
  position: absolute;
  transform: translateX(-50%);
  padding-top: $euiSize;

  &:not(.euiRangeTick--hasTickMark)::before {
    @include tickStyles;
    content: '';
    left: calc(50% - #{($euiSizeXS/2)});
  }

  .euiRangeTick__pseudo {
    @include tickStyles;
  }

  &--isCustom {
    overflow-x: visible;
  }

  &--isMin,
  &--isMax {
    transform: translateX(0);
  }

  &--isMin {
    .euiRangeTick__pseudo {
      left: 0;
    }
  }

  &--isMax {
    .euiRangeTick__pseudo {
      right: 0;
    }
  }

  &::before {
    background-color: $euiColorLightShade;
    border-radius: $euiBorderRadiusSmall;
  }

  &:enabled:hover,
  &:focus,
  &--selected {
    color: $euiColorPrimary;
  }

  &--selected {
    font-weight: $euiFontWeightMedium;
  }

  &:disabled {
    cursor: not-allowed;
  }
}

.euiRangeTicks:not(.euiRangeTicks--compressed) {
  .euiRangeTick {
    padding-top: 0;
  }

  .euiRangeTick:not(.euiRangeTick--hasTickMark)::before,
  .euiRangeTick__pseudo {
    width: $euiSizeXS;
    height: $euiSizeM / 2;
    background-color: $euiColorLightShade;
    border-radius: $euiBorderRadiusSmall;
  }
}

.euiRangeTicks--compressed {
  top: $euiSizeS - 2px;

  .euiRangeTick {
    padding-top: $euiSize - 2px;

    &::before,
    .euiRangeTick__pseudo {
      background-color: $euiColorLightShade;
      border-radius: $euiBorderRadiusSmall;
    }
  }
}

.euiRangeTick__label {
  pointer-events: none;
}
