// This should only be used for .euiText, therefore it's not included in a separate mixin file
@mixin euiScaleText($baseFontSize, $sizingMethod: 'rem') {
  $baseLineHeightMultiplier: $baseFontSize / 2;

  // headings
  $fontSizeH1: $baseFontSize * nth($euiTextScale, 1);
  $fontSizeH2: $baseFontSize * nth($euiTextScale, 2);
  $fontSizeH3: $baseFontSize * nth($euiTextScale, 3);
  $fontSizeH4: $baseFontSize * nth($euiTextScale, 5); // skip level 4 on purpose
  $fontSizeH5: $baseFontSize * nth($euiTextScale, 6);
  $fontSizeH6: $baseFontSize * nth($euiTextScale, 7);

  $headingMarginBottom: $baseLineHeightMultiplier * 1;
  $headingMarginTop: $baseLineHeightMultiplier * 4;

  h1 {
    font-size: fontSizeToRemOrEm($fontSizeH1, $sizingMethod);
    line-height: ($baseLineHeightMultiplier * 6) / $fontSizeH1;
    margin-bottom: marginToRemOrEm($headingMarginBottom, $fontSizeH1, $sizingMethod);
  }

  h2 {
    font-size: fontSizeToRemOrEm($fontSizeH2, $sizingMethod);
    line-height: ($baseLineHeightMultiplier * 5) / $fontSizeH2;
    margin-bottom: marginToRemOrEm($headingMarginBottom, $fontSizeH2, $sizingMethod);
  }

  h3 {
    font-size: fontSizeToRemOrEm($fontSizeH3, $sizingMethod);
    line-height: ($baseLineHeightMultiplier * 4) / $fontSizeH3;
    margin-bottom: marginToRemOrEm($headingMarginBottom, $fontSizeH3, $sizingMethod);
  }

  h4 {
    font-size: fontSizeToRemOrEm($fontSizeH4, $sizingMethod);
    line-height: ($baseLineHeightMultiplier * 3) / $fontSizeH4;
    margin-bottom: marginToRemOrEm($headingMarginBottom, $fontSizeH4, $sizingMethod);
  }

  h5 {
    font-size: fontSizeToRemOrEm($fontSizeH5, $sizingMethod);
    line-height: ($baseLineHeightMultiplier * 2) / $fontSizeH5;
    margin-bottom: marginToRemOrEm($headingMarginBottom, $fontSizeH5, $sizingMethod);
  }

  h6 {
    font-size: fontSizeToRemOrEm($fontSizeH6, $sizingMethod);
    line-height: ($baseLineHeightMultiplier * 2) / $fontSizeH6;
    margin-bottom: marginToRemOrEm($headingMarginBottom, $fontSizeH6, $sizingMethod);
  }

  * + h2 {
    margin-top: marginToRemOrEm($headingMarginTop, $fontSizeH2, $sizingMethod);
  }

  * + h3 {
    margin-top: marginToRemOrEm($headingMarginTop, $fontSizeH3, $sizingMethod);
  }

  * + h4 {
    margin-top: marginToRemOrEm($headingMarginTop, $fontSizeH4, $sizingMethod);
  }

  * + h5 {
    margin-top: marginToRemOrEm($headingMarginTop, $fontSizeH5, $sizingMethod);
  }

  * + h6 {
    margin-top: marginToRemOrEm($headingMarginTop, $fontSizeH6, $sizingMethod);
  }

  // specific markdown format components that need to scale
  &.euiMarkdownFormat {
    .euiMarkdownFormat__blockquote {
      padding: 0 marginToRemOrEm($baseLineHeightMultiplier * 2, $baseFontSize, $sizingMethod);
      border-left-width:  marginToRemOrEm($baseLineHeightMultiplier / 2, $baseFontSize, $sizingMethod);
      margin-bottom: marginToRemOrEm($baseLineHeightMultiplier * 2, $baseFontSize, $sizingMethod);
    }

    .euiCheckbox + *:not(.euiCheckbox) {
      margin-top: marginToRemOrEm($baseLineHeightMultiplier * 2, $baseFontSize, $sizingMethod);
    }

    .euiCheckbox__label {
      font-size: fontSizeToRemOrEm($baseFontSize, $sizingMethod);
      padding-left: marginToRemOrEm($baseLineHeightMultiplier * 3, $baseFontSize, $sizingMethod);
      line-height: $baseLineHeightMultiplier * 3 / $baseFontSize;
    }

    .euiCheckbox + *:not(.euiCheckbox) {
      margin-top: marginToRemOrEm($baseLineHeightMultiplier * 2, $baseFontSize, $sizingMethod);
    }

    .euiMarkdownFormat__codeblockWrapper {
      margin-bottom: marginToRemOrEm($baseLineHeightMultiplier * 2, $baseFontSize, $sizingMethod);
    }

    .euiMarkdownFormat__table {
      margin-bottom: marginToRemOrEm($baseLineHeightMultiplier * 2, $baseFontSize, $sizingMethod);
    }

    .euiMarkdownFormat__table th,
    .euiMarkdownFormat__table td {
      padding: marginToRemOrEm($baseLineHeightMultiplier / 2, $baseFontSize, $sizingMethod) marginToRemOrEm($baseLineHeightMultiplier * 1, $baseFontSize, $sizingMethod);
    }
  }
}
