// Because of the animations and positioning involved, this code gets pretty
// repetitive. What you generally need to know if you work in here is that
// the positioning of the popovers (and the arrows attached to them)
// is handled through absolute positioning and then animated through the use
// of transforms.

.euiPopover {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  max-width: 100%;
}

.euiPopover__anchor {
  display: inline-block;
}

.euiPopover--displayBlock {
  display: block;

  .euiPopover__anchor {
    display: block;
  }
}

/**
 * 1. Can expand further, but it looks weird if it's smaller than the originating button.
 * 2. Animation happens on the panel. But don't animate when using the attached mode like for inputs
 * 3. Make sure the panel stays within the window.
 */
.euiPopover__panel {
  // Ignore linting for legibility of transition property, and the mixin performs an overwrite
  // sass-lint:disable-block indentation
  // sass-lint:disable-block no-color-literals
  // @include euiBottomShadow;
  filter:
    drop-shadow(0 1px 5px rgba($euiShadowColor, .1))
    drop-shadow(0 3.6px 13px rgba($euiShadowColor, .07))
    drop-shadow(0 8.4px 23px rgba($euiShadowColor, .06))
    drop-shadow(0 23px 35px rgba($euiShadowColor, .05));
  position: absolute;
  min-width: $euiButtonMinWidth; /* 1 */
  max-width: calc(100vw - #{$euiSizeXL}); /* 3 */
  backface-visibility: hidden;
  pointer-events: none;
  opacity: 0; /* 2 */
  transition: opacity $euiAnimSlightBounce $euiAnimSpeedSlow; /* 2 */

  &:focus {
    outline-offset: 0;
  }

  // Don't animate when using the attached mode like for inputs
  &:not(.euiPopover__panel-isAttached) {
    transform: translateY(0) translateX(0) translateZ(0); /* 2 */
    transition: /* 2 */
      opacity $euiAnimSlightBounce $euiAnimSpeedSlow,
      transform $euiAnimSlightBounce ($euiAnimSpeedSlow + 100ms);
  }

  &.euiPopover__panel-isAttached {
    @include euiBottomShadowMedium;

    // Reset border radius to panel's
    // Specificity also helps override default theme
    @each $modifier, $amount in $euiPanelBorderRadiusModifiers {
      &.euiPanel--#{$modifier} {
        border-radius: $amount;
      }
    }
  }

  &.euiPopover__panel-isOpen {
    opacity: 1;
    pointer-events: auto;
  }


  // &.euiPopover__panel-noArrow .euiPopover__panelArrow {
  //   display: none;
  // }

  &.euiPopover__panel-isAttached.euiPopover__panel--bottom {
    border-top-color: transparentize($euiBorderColor, .2);
    border-top-right-radius: 0;
    border-top-left-radius: 0;
  }

  &.euiPopover__panel-isAttached.euiPopover__panel--top {
    @include euiBottomShadowFlat;

    border-bottom-color: transparentize($euiBorderColor, .2);
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.euiPopover__panel.euiPopover__panel-isAttached.euiPopover__panel--top,  /* 2 */
.euiPopover__panel.euiPopover__panel-isOpen.euiPopover__panel--top {
  transform: translateY($euiPopoverTranslateDistance) translateZ(0);
}

.euiPopover__panel.euiPopover__panel-isAttached.euiPopover__panel--bottom,  /* 2 */
.euiPopover__panel.euiPopover__panel-isOpen.euiPopover__panel--bottom {
  transform: translateY(-$euiPopoverTranslateDistance) translateZ(0);
}

.euiPopover__panel.euiPopover__panel-isOpen.euiPopover__panel--left {
  transform: translateX($euiPopoverTranslateDistance) translateZ(0);
}

.euiPopover__panel.euiPopover__panel-isOpen.euiPopover__panel--right {
  transform: translateX(-$euiPopoverTranslateDistance) translateZ(0);
}
