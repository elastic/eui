@import '../variables';
@import '../mixins';

.euiFormControlLayout {
  // Let the height expand as needed
  @include euiFormControlSize($includeAlternates: true);
}

.euiFormControlLayout__childrenWrapper {
  position: relative;
}

/**
 * 1. Account for inner box-shadow style border
 */

.euiFormControlLayout--group {
  // Match just the regular drop shadow of inputs
  @include euiFormControlDefaultShadow;
  display: flex;
  align-items: stretch;
  padding: 1px; /* 1 */

  .euiFormControlLayout__childrenWrapper {
    flex-grow: 1;
  }

  .euiFormControlLayout__prepend,
  .euiFormControlLayout__append {
    flex-shrink: 0;
    height: 100%;
    line-height: $euiFontSize;
    border: none; // remove any border in case it exists
    border-radius: 0;

    &:first-child {
      // 1px less than the outer parent to ensure it stays inside the border box
      border-top-left-radius: 1px;
      border-bottom-left-radius: 1px;
    }

    &:last-child {
      // 1px less than the outer parent to ensure it stays inside the border box
      border-top-right-radius: 1px;
      border-bottom-right-radius: 1px;
    }

    &:disabled {
      background-color: $euiFormBackgroundDisabledColor;
      color: $euiFormControlDisabledColor; // ensures established contrast
    }

    // This is the only way to target specific components to override styling
    &.euiFormLabel,
    &.euiText {
      white-space: nowrap;
      margin-bottom: 0;
      padding: $euiFormControlPadding;
      border: none;
      background-color: $euiFormInputGroupLabelBackground;
      line-height: $euiFontSize;
    }
  }

  //
  // Borders

  .euiFormControlLayout__prepend {
    border-right: 1px solid $euiFormBorderColor;
  }

  .euiFormControlLayout__append {
    border-left: 1px solid $euiFormBorderColor;
  }

  //
  // Compressed alterations

  &.euiFormControlLayout--compressed {
    @include euiFormControlDefaultShadow($borderOnly: true);
    border-radius: $euiBorderRadius / 2;

    .euiFormControlLayout__prepend,
    .euiFormControlLayout__append {
      &:first-child {
        // 1px less than the outer parent to ensure it stays inside the border box
        border-top-left-radius: 1px;
        border-bottom-left-radius: 1px;
      }

      &:last-child {
        // 1px less than the outer parent to ensure it stays inside the border box
        border-top-right-radius: 1px;
        border-bottom-right-radius: 1px;
      }

      &.euiFormLabel,
      &.euiText {
        padding-top: $euiFormControlCompressedPadding;
        padding-bottom: $euiFormControlCompressedPadding;
      }
    }
  }

  > .euiFormControlLayout--compressed {
    height: $euiFormControlLayoutGroupInputCompressedHeight;
  }

  //
  // ReadOnly alterations
  &.euiFormControlLayout--readOnly {
    @include euiFormControlReadOnlyStyle;
    padding: 0; /* 1 */

    input {
      background-color: transparent; // Ensures the input and layout don't double up on background color
    }
  }

  //
  // ReadOnly-Compressed alterations

  &.euiFormControlLayout--compressed.euiFormControlLayout--readOnly {

    .euiFormControlLayout__prepend,
    .euiFormControlLayout__append {
      height: $euiFormControlCompressedHeight;
      border-top-left-radius: $euiBorderRadius / 2;
      border-bottom-left-radius: $euiBorderRadius / 2;
    }
  }
}

.euiFormControlLayout-isDisabled,
.euiFormControlLayout-isDisabled .euiDatePickerRange--inGroup {
  background-color: $euiFormBackgroundDisabledColor;
  color: $euiColorDarkShade;
}
