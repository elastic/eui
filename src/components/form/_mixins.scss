/*
 * 1. Ensure the icon padding remains when in readOnly mode
 */

@mixin euiFormControlSize($height: $euiFormControlHeight) {
  max-width: $euiFormMaxWidth;
  width: 100%;
  height: $height;
}

@mixin euiFormControlWithIcon($isIconOptional: false, $side: "left") {
  @if ($isIconOptional) {
    @at-root {
      #{&}--withIcon,
      #{&}--withIcon[readOnly] /* 1 */ {
        @include euiFormControlLayout__padding(1, $side);
      }
    }
  } @else {
    &,
    &[readOnly] /* 1 */ {
      @include euiFormControlLayout__padding(1, $side);
    }
  }
}

@mixin euiFormControlIsLoading($isNextToIcon: false) {
  @at-root {
    #{&}-isLoading {
      @if ($isNextToIcon) {
        @include euiFormControlLayout__padding(2);
      } @else {
        @include euiFormControlLayout__padding(1);
      }
    }
  }
}

@mixin euiFormControlDefaultShadow {
  box-shadow:
    0 3px 2px -2px rgba($euiShadowColor, 0.2),
    inset 0 0 0 1px transparentize($euiColorFullShade, .9),
    inset #{-$euiFormMaxWidth} 0 0 0 $euiFormBackgroundColor;
}

@mixin euiFormControlInvalidStyle {
  box-shadow:
    0 $euiSizeXS $euiSizeXS (-$euiSizeXS / 2) rgba($euiShadowColor, 0.2),
    inset 0 0 0 1px transparentize($euiColorFullShade, .84),
    inset 0 0 0 0 $euiColorEmptyShade,
    inset 0 (-$euiSizeXS / 2) 0 0 $euiColorDanger;
}

@mixin euiFormControlFocusStyle {
  background: tintOrShade($euiColorEmptyShade, 0%, 20%);
  box-shadow:
    0 4px 4px -2px rgba($euiShadowColor, 0.2),
    inset 0 0 0 1px transparentize($euiColorFullShade, .84),
    inset 0 0 0 0 tintOrShade($euiColorEmptyShade, 0%, 20%),
    inset 0 -2px 0 0 $euiColorPrimary;
}

@mixin euiFormControlDisabledStyle {
  cursor: not-allowed;
  background: darken($euiColorLightestShade, 2%);
  box-shadow: inset 0 0 0 1px transparentize($euiColorFullShade, .92);
  color: $euiFormControlDisabledColor;

  &::placeholder {
    color: $euiFormControlDisabledColor;
  }
}

@mixin euiFormControlReadOnlyStyle {
  cursor: default;
  background: transparent;
  border-color: transparent;
  box-shadow: none;
  padding-left: 0; // line up text with label
}

/**
 * 1. Override invalid state with focus state.
 */
@mixin euiFormControlStyle {
  @include euiFormControlSize;
  @include euiFormControlDefaultShadow;

  border: none;
  font-size: $euiFontSizeS;
  font-family: $euiFontFamily;
  padding: $euiFormControlPadding;
  line-height: 1em; // fixes text alignment in IE
  color: $euiTextColor;
  background: $euiFormBackgroundColor;
  transition: box-shadow $euiAnimSpeedNormal ease-in, background $euiAnimSpeedNormal ease-in;
  border-radius: 0;

  &--fullWidth {
    max-width: 100%;
  }

  &--compressed {
    padding-top: $euiFormControlPadding--compressed;
    padding-bottom: $euiFormControlPadding--compressed;
    height: $euiFormControlHeight--compressed;
  }

  &:invalid { /* 1 */
    @include euiFormControlInvalidStyle;
  }

  &:focus { /* 1 */
    @include euiFormControlFocusStyle;
  }

  &:disabled {
    @include euiFormControlDisabledStyle;
  }

  &[readOnly] {
    @include euiFormControlReadOnlyStyle;
  }
}

//
// Custom styles and states for checkboxes and radios
//

@mixin euiCustomControl($type: null, $size: $euiSize){

  @if $size {
    $size: $size - 2px; // subtract 2px from size to account for border size
    padding: $size/2;
  }

  border: 1px solid shadeOrTint($euiColorLightestShade, 18%, 30%);
  background: $euiColorEmptyShade no-repeat center;
  @include euiSlightShadow;

  @if $type == 'round' {
    border-radius: $size;
  } @else if $type == 'square' {
    border-radius: $euiBorderRadius;
  }

  transition: background-color $euiAnimSpeedFast ease-in,
              border-color $euiAnimSpeedFast ease-in,
              background-image 0s ease-out $euiAnimSpeedFast;
}

@mixin euiCustomControl--selected($type: null){
  border-color: $euiColorPrimary;
  background-color: $euiColorPrimary;

  @if $type != null {
    @include euiIconBackground($type, $euiColorEmptyShade);
  }
}

@mixin euiCustomControl--disabled($type: null){
  border-color: $euiColorLightShade;
  background-color: $euiColorLightShade;
  box-shadow: none;
  @if $type != null {
    @include euiIconBackground($type, $euiFormCustomControlDisabledIconColor);
  }
}

@mixin euiCustomControl--focused(){
  border-color: $euiColorPrimary;
  @include euiFocusRing;
}
