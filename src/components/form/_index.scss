$euiFormMaxWidth: 400px;
$euiFormBackgroundColor: tintOrShade($euiColorLightestShade, 60%, 25%);
$euiFormCustomControlDisabledIconColor: shadeOrTint($euiColorMediumShade, 38%, 48.5%); // exact 508c foreground for $euiColorLightShade

@mixin euiFormControlSize {
  max-width: $euiFormMaxWidth;
  width: 100%;
}

@mixin euiFormControlWithIcon($isIconOptional: false) {
  $iconPadding: $euiSizeXXL;

  @if ($isIconOptional) {
    @at-root {
      #{&}--withIcon {
        padding-left: $iconPadding;
      }
    }
  } @else {
    padding-left: $iconPadding;
  }
}

@mixin euiFormControlIsLoading($isNextToIcon: false) {

  @at-root {
    #{&}-isLoading {
      @if ($isNextToIcon) {
        padding-right: $euiSizeXXL + $euiSize;
      } @else {
        padding-right: $euiSizeXXL;
      }
    }
  }
}

/**
 * 1. Override invalid state with focus state.
 */
@mixin euiFormControlStyle {
  @include euiFormControlSize;

  border: none;
  font-size: $euiFontSizeS;
  font-family: $euiFontFamily;
  padding: $euiSizeM;
  color: $euiTextColor;
  background: $euiFormBackgroundColor;
  box-shadow:
    0 2px 2px -1px rgba(0, 0, 0, 0.1),
    0 0 0 1px transparentize($euiColorFullShade, .92),
    inset #{-$euiFormMaxWidth} 0 0 0 $euiFormBackgroundColor;
  transition: box-shadow $euiAnimSpeedNormal ease-in, background $euiAnimSpeedNormal ease-in;
  border-radius: 0;

  &--fullWidth {
    max-width: 100%;
  }

  &:invalid { /* 1 */
    box-shadow:
      0 $euiSizeXS $euiSizeXS (-$euiSizeXS / 2) rgba(0, 0, 0, 0.1),
      0 0 0 1px transparentize($euiColorFullShade, .84),
      inset 0 0 0 0 $euiColorEmptyShade,
      inset 0 (-$euiSizeXS / 2) 0 0 $euiColorDanger;
  }

  &:focus { /* 1 */
    background: tintOrShade($euiColorEmptyShade, 0%, 20%);
    box-shadow:
      0 4px 4px -2px rgba(0, 0, 0, 0.1),
      0 0 0 1px transparentize($euiColorFullShade, .84),
      inset 0 0 0 0 tintOrShade($euiColorEmptyShade, 0%, 20%),
      inset 0 -2px 0 0 $euiColorPrimary;
  }

  &:disabled {
    cursor: not-allowed;
    background: darken($euiColorLightestShade, 2%);
    box-shadow: 0 0 0 1px transparentize($euiColorFullShade, .92);
  }

  &[readOnly] {
    cursor: default;
    background: transparent;
    border-color: transparent;
    box-shadow: none;
  }
}

// CUSTOM STYLES & STATES
@mixin euiCustomControl($type: null, $size: $euiSize){

  @if $size {
    $size: $size - 2px; // subtract 2px from size to account for border size
    padding: $size/2;
  }

  border: 1px solid shadeOrTint($euiColorLightestShade, 18%, 20%);
  background: $euiColorEmptyShade no-repeat center;
  box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.1);

  @if $type == 'round' {
    border-radius: $size;
  } @else if $type == 'square' {
    border-radius: $euiBorderRadius;
  }

  transition: background-color $euiAnimSpeedFast ease-in,
              border-color $euiAnimSpeedFast ease-in,
              background-image 0s ease-out $euiAnimSpeedFast;
}

@mixin euiCustomControl--selected($type: null){
  border-color: $euiColorPrimary;
  background-color: $euiColorPrimary;

  @if $type == 'check' {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='8' viewBox='0 0 10 8'%3E%3Cpath d='M.375 2.625L3.375 5.625M3.375 5.625L8.625.375' fill='none' fill-rule='evenodd' stroke='#{$euiColorEmptyShade}' stroke-linecap='round' stroke-width='1.5' transform='translate(.5 1)'/%3E%3C/svg%3E");
  } @else if $type == 'dot' {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='6' height='6' viewBox='0 0 6 6'%3E%3Ccircle cx='8' cy='11' r='3' fill='#{$euiColorEmptyShade}' fill-rule='evenodd' transform='translate(-5 -8)'/%3E%3C/svg%3E");
  }
}

@mixin euiCustomControl--disabled($type: null){
  border-color: $euiColorLightShade;
  background-color: $euiColorLightShade;
  box-shadow: none;

  @if $type == 'check' {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='8' viewBox='0 0 10 8'%3E%3Cpath d='M.375 2.625L3.375 5.625M3.375 5.625L8.625.375' fill='none' fill-rule='evenodd' stroke='#{$euiFormCustomControlDisabledIconColor}' stroke-linecap='round' stroke-width='1.5' transform='translate(.5 1)'/%3E%3C/svg%3E");
  } @else if $type == 'dot' {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='6' height='6' viewBox='0 0 6 6'%3E%3Ccircle cx='8' cy='11' r='3' fill='#{$euiFormCustomControlDisabledIconColor}' fill-rule='evenodd' transform='translate(-5 -8)'/%3E%3C/svg%3E");
  }
}

@mixin euiCustomControl--focused(){
  border-color: $euiColorPrimary;
  @include euiFocusRing;
}


@import 'checkbox/index';
@import 'field_number/index';
@import 'field_password/index';
@import 'field_search/index';
@import 'field_text/index';
@import 'form';
@import 'form_control_layout/index';
@import 'form_error_text/index';
@import 'form_help_text/index';
@import 'form_label/index';
@import 'form_row/index';
@import 'radio/index';
@import 'range/index';
@import 'select/index';
@import 'switch/index';
@import 'text_area/index';
