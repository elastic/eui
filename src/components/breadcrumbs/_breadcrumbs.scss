@import '../link/variables';

/**
 * 1. Add vertical space between breadcrumbs,
 *    but make sure the whole breadcrumb set doesn't add space below itself
 */

.euiBreadcrumbs__list {
  @include euiFontSizeS;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  min-width: 0; // Ensure it shrinks if the window is narrow
  margin-bottom: -$euiSizeXS; /* 1 */
}

.euiBreadcrumb {
  margin-bottom: $euiSizeXS; /* 1 */
  display: flex;
  align-items: center;

  &:not(.euiBreadcrumb--last) {
    color: $euiTextSubduedColor;

    &::after {
      content: '';
      margin: $euiSizeXS $euiBreadcrumbSpacing 0;
      width: 1px;
      height: $euiSize;
      transform: translateY(-1px) rotate(15deg);
      background: $euiColorLightShade;
      flex-shrink: 0;
    }
  }
}

.euiBreadcrumb--collapsed {
  flex-shrink: 0;
}

.euiBreadcrumb--last {
  font-weight: $euiFontWeightMedium;
}

.euiBreadcrumbs__inPopover .euiBreadcrumb--last .euiBreadcrumb__content {
  font-weight: $euiFontWeightRegular;
  // Match to subdued EuiLink color
  color: map-get($euiLinkColors, 'subdued');
}

.euiBreadcrumbs--truncate {
  .euiBreadcrumbs__list {
    white-space: nowrap;
    flex-wrap: nowrap;
  }

  .euiBreadcrumb:not(.euiBreadcrumb--collapsed) {
    .euiBreadcrumb__content {
      max-width: $euiBreadcrumbTruncateWidth;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    &.euiBreadcrumb--last .euiBreadcrumb__content {
      max-width: none;
    }
  }

  .euiBreadcrumb {
    overflow: hidden;
  }
}

.euiBreadcrumbs--truncate,
.euiBreadcrumb--truncate {
  .euiBreadcrumb__content {
    @include euiTextTruncate;
    max-width: $euiBreadcrumbTruncateWidth;
    text-align: center;
    vertical-align: baseline;
  }
}
