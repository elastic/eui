.euiColorStops__addTarget,
.euiColorStops__addContainer {
  z-index: 1;
}

.euiColorStops__addTarget {
  border: 1px solid $euiColorDarkShade;
  box-shadow: none;
}

.euiColorStopThumb.euiRangeThumb:not(:disabled) {
  // sass-lint:disable-block no-important no-color-literals 
  @include euiRangeThumbBorder;
  @include euiRangeThumbBoxShadow;;

  &:focus {
    @include euiRangeThumbFocusBoxShadow;
    outline: none;
  }

  // in Chrome/FF/Edge we don't want to focus on click
  &:focus:not(:focus-visible)  {
    @include euiRangeThumbBoxShadow;
    outline: none;
  }
}

.euiColorStops:not(.euiColorStops-isDisabled) {
  // pseudo-element that creates a shadow (focus ring) 
  // initially we set the opacity to 0 
  // on focus the .euiColorStops we transition the opacity to 1
  // this is a higher-performance method. Better than transitioning the box-shadow.
  // https://alligator.io/css/transition-box-shadows/
  .euiRangeTrack::before {
    @include euiRangeTrackSize;
    content: '';
    display: block;
    position: absolute;
    top: calc(50% - #{($euiRangeTrackHeight/2)});
    left: 0;
    background: transparent;
    border-radius: $euiRangeTrackRadius;
    box-shadow: 0 0 0 1px $euiColorEmptyShade,
    0 0 0 3px $euiFocusRingColor;
    opacity: 0;
    transition-property: opacity;
    transition-delay: $euiAnimSpeedExtraFast;
  }

  .euiRangeTrack--compressed::before {
    @include euiRangeTrackSize($compressed: true);
    top: calc(50% - #{($euiRangeTrackCompressedHeight/2)});
  }

  &:focus {
    outline: none;

    .euiRangeTrack::before {
      opacity: 1;
    }
  }

  &:focus:not(:focus-visible) {
    .euiRangeTrack::before {
      opacity: 0;
    }
  }
}

.euiColorStops__highlight {
  color: $euiRangeTrackColor;

  .euiRangeHighlight__progress {
    background-color: $euiRangeTrackColor;
  }
}
