// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EuiQuickSelectPopover is rendered 1`] = `
<EuiPopover
  anchorClassName="euiQuickSelectPopover__anchor"
  anchorPosition="downLeft"
  button={
    <EuiButtonEmpty
      aria-label="Date quick select"
      className="euiFormControlLayout__prepend"
      data-test-subj="superDatePickerToggleQuickMenuButton"
      iconSide="right"
      iconType="arrowDown"
      isDisabled={false}
      onClick={[Function]}
      size="xs"
      textProps={
        Object {
          "className": "euiQuickSelectPopover__buttonText",
        }
      }
    >
      <EuiIcon
        type="calendar"
      />
    </EuiButtonEmpty>
  }
  closePopover={[Function]}
  display="inlineBlock"
  hasArrow={true}
  isOpen={false}
  ownFocus={true}
  panelPaddingSize="m"
>
  <div
    className="euiQuickSelectPopover__content"
    data-test-subj="superDatePickerQuickMenu"
  >
    <EuiQuickSelect
      applyTime={[Function]}
      end="now"
      start="now-15m"
      timeOptions={
        Object {
          "commonDurationRanges": Array [
            Object {
              "end": "now/d",
              "label": "Today",
              "start": "now/d",
            },
            Object {
              "end": "now/w",
              "label": "This week",
              "start": "now/w",
            },
            Object {
              "end": "now/M",
              "label": "This month",
              "start": "now/M",
            },
            Object {
              "end": "now/y",
              "label": "This year",
              "start": "now/y",
            },
            Object {
              "end": "now-1d/d",
              "label": "Yesterday",
              "start": "now-1d/d",
            },
            Object {
              "end": "now",
              "label": "Week to date",
              "start": "now/w",
            },
            Object {
              "end": "now",
              "label": "Month to date",
              "start": "now/M",
            },
            Object {
              "end": "now",
              "label": "Year to date",
              "start": "now/y",
            },
          ],
          "refreshUnitsOptions": Array [
            Object {
              "text": "Seconds",
              "value": "s",
            },
            Object {
              "text": "Minutes",
              "value": "m",
            },
            Object {
              "text": "Hours",
              "value": "h",
            },
          ],
          "relativeOptions": Array [
            Object {
              "text": "Seconds ago",
              "value": "s",
            },
            Object {
              "text": "Minutes ago",
              "value": "m",
            },
            Object {
              "text": "Hours ago",
              "value": "h",
            },
            Object {
              "text": "Days ago",
              "value": "d",
            },
            Object {
              "text": "Weeks ago",
              "value": "w",
            },
            Object {
              "text": "Months ago",
              "value": "M",
            },
            Object {
              "text": "Years ago",
              "value": "y",
            },
            Object {
              "text": "Seconds from now",
              "value": "s+",
            },
            Object {
              "text": "Minutes from now",
              "value": "m+",
            },
            Object {
              "text": "Hours from now",
              "value": "h+",
            },
            Object {
              "text": "Days from now",
              "value": "d+",
            },
            Object {
              "text": "Weeks from now",
              "value": "w+",
            },
            Object {
              "text": "Months from now",
              "value": "M+",
            },
            Object {
              "text": "Years from now",
              "value": "y+",
            },
          ],
          "relativeRoundingLabels": Object {
            "M": "Round to the month",
            "d": "Round to the day",
            "h": "Round to the hour",
            "m": "Round to the minute",
            "s": "Round to the second",
            "w": "Round to the week",
            "y": "Round to the year",
          },
          "timeTenseOptions": Array [
            Object {
              "text": "Last",
              "value": "last",
            },
            Object {
              "text": "Next",
              "value": "next",
            },
          ],
          "timeUnitsOptions": Array [
            Object {
              "text": "Seconds",
              "value": "s",
            },
            Object {
              "text": "Minutes",
              "value": "m",
            },
            Object {
              "text": "Hours",
              "value": "h",
            },
            Object {
              "text": "Days",
              "value": "d",
            },
            Object {
              "text": "Weeks",
              "value": "w",
            },
            Object {
              "text": "Months",
              "value": "M",
            },
            Object {
              "text": "Years",
              "value": "y",
            },
          ],
        }
      }
    />
    <EuiHorizontalRule
      margin="s"
    />
    <EuiCommonlyUsedTimeRanges
      applyTime={[Function]}
      commonlyUsedRanges={
        Array [
          Object {
            "end": "now/d",
            "label": "Today",
            "start": "now/d",
          },
        ]
      }
    />
    <EuiHorizontalRule
      margin="s"
    />
    <EuiRecentlyUsed
      applyTime={[Function]}
      commonlyUsedRanges={
        Array [
          Object {
            "end": "now/d",
            "label": "Today",
            "start": "now/d",
          },
        ]
      }
      dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
      recentlyUsedRanges={
        Array [
          Object {
            "end": "now/d",
            "label": "Today",
            "start": "now/d",
          },
        ]
      }
    />
    <EuiHorizontalRule
      margin="s"
    />
    <EuiRefreshInterval
      isPaused={true}
      onRefreshChange={[Function]}
      refreshInterval={0}
    />
  </div>
</EuiPopover>
`;
