.euiDataGridHeader {
  display: inline-flex;
  min-width: 100%;
}

.euiDataGridHeaderCell {
  @include euiFontSizeS;

  font-weight: $euiFontWeightBold;
  padding: $euiSizeM / 2;
  position: relative;
  flex: 0 0 auto;

  .euiDataGridHeaderCell__content {
    @include euiTextTruncate;
  }
}

// Header alternates

// Extra specificity because the header border trumps having borders off

.euiDataGrid--headerUnderline,
.euiDataGrid--bordersNone.euiDataGrid--headerUnderline {
  .euiDataGridHeaderCell {
    border-bottom: $euiBorderThick;
    border-color: $euiTextColor;
  }
}

.euiDataGrid--headerMinimal {
  .euiDataGridHeaderCell {
    background: $euiColorLightestShade;
  }
}

.euiDataGrid--headerMinimal.euiDataGrid--bordersAll {
  .euiDataGridHeaderCell {
    border: $euiBorderThin;
    border-left: none;

    &:first-of-type {
      border-left: $euiBorderThin;
    }
  }
}

.euiDataGrid--headerMinimal.euiDataGrid--bordersHorizontalOnly {
  .euiDataGridHeaderCell {
    border-bottom: $euiBorderThin;
  }
}

// Border alternates
.euiDataGrid--bordersNone {
  .euiDataGridHeaderCell {
    border: none;
  }
}

.euiDataGrid--bordersHorizontalOnly {
  .euiDataGridHeaderCell {
    border-right: none;
    border-left: none;
  }
}

// Font alternates
.euiDataGrid--fontSizeSmall {
  .euiDataGridHeaderCell {
    @include euiFontSizeXS;
  }
}

.euiDataGrid--fontSizeLarge {
  .euiDataGridHeaderCell {
    @include euiFontSize;
  }
}

// Padding alternates
.euiDataGrid--paddingSmall {
  .euiDataGridHeaderCell {
    padding: $euiSizeXS;
  }
}

.euiDataGrid--paddingLarge {
  .euiDataGridHeaderCell {
    padding: $euiSizeS;
  }
}