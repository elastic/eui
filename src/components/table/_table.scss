/**
 * NOTE: table-layout: fixed causes a bug in IE11 and Edge (see #9929). It also prevents us from
 * specifying a column width, e.g. the checkbox column.
 */
.euiTable {
  @include euiFontSizeS;

  width: 100%;
  table-layout: fixed;
  border: none;
  border-collapse: collapse;
  background-color: $euiColorEmptyShade;
}

// Hide mobile-only elements by default
.euiTableHeaderMobile,
.euiTableHeaderCell--isMobileHeader {
  display: none;
}

// Compressed styles not for mobile
@include screenSmallMediumLarge {
  .euiTable--compressed {
    .euiTableCellContent {
      @include euiFontSizeXS;
      padding: $euiTableCellContentPadding--compressed;
    }
  }
}

.euiTableHeaderCell {
  @include euiTableCell;
  @include euiTitle("xxs");
  font-weight: $euiFontWeightMedium;
  border-top: none;

  .euiTableHeaderButton {
    text-align: left;
    font-weight: $euiFontWeightMedium;
  }

  .euiTableCellContent__text {
    @include euiFontSizeXS;
    color: $euiTitleColor;
    font-weight: $euiFontWeightBold;
  }
}

.euiTableHeaderButton {
  @include euiFontSizeS;
  color: inherit;
  width: 100%;

  &:hover, &:focus {
    .euiTableCellContent__text {
      text-decoration: underline;
      color: $euiColorPrimary;
    }

    .euiTableSortIcon {
      fill: $euiColorPrimary;
    }
  }
}

.euiTableSortIcon {
  margin-left: $euiSizeXS;
  flex-shrink: 0; // makes sure the icon doesn't change size because the text is long

  .euiTableHeaderButton-isSorted & {
    fill: $euiTitleColor;
  }
}

.euiTableHeaderCellCheckbox {
  @include euiTableCellCheckbox;
}

.euiTableRow {
  &:hover {
    background-color: $euiTableHoverColor;
  }

  &.euiTableRow-isExpandedRow {
    .euiTableRowCell {
      background-color: $euiTableHoverColor;
    }

    &.euiTableRow-isSelectable .euiTableCellContent {
      padding-left: $euiTableCellCheckboxWidth + $euiTableCellContentPadding;
    }
  }

  &.euiTableRow-isSelected {
    background-color: $euiTableSelectedColor;

    + .euiTableRow.euiTableRow-isExpandedRow .euiTableRowCell {
      background-color: $euiTableSelectedColor;
    }

    &:hover,
    &:hover + .euiTableRow.euiTableRow-isExpandedRow .euiTableRowCell  {
      background-color: $euiTableHoverSelectedColor;
    }
  }
}

.euiTableRowCell {
  @include euiTableCell;

  color: $euiTextColor;

  &.euiTableRowCell--isMobileHeader {
    display: none; // Hide if not mobile breakpoint
  }
}

.euiTableRowCellCheckbox {
  @include euiTableCellCheckbox;
}

/**
 * 1. Vertically align all children.
 * 2. The padding on this div allows the ellipsis to show if the content is truncated. If
 *    the padding was on the cell, the ellipsis would be cropped.
 * 3. Support wrapping.
 */
.euiTableCellContent {
  display: flex;
  align-items: center; /* 1 */
  padding: $euiTableCellContentPadding; /* 2 */
}

  /**
   * 1. Prevent very long single words (e.g. the name of a field in a document) from overflowing
   *    the cell.
   */
  .euiTableCellContent__text {
    min-width: 0;
    text-overflow: ellipsis;
    word-break: break-word; /* 1 */
  }

.euiTableCellContent--alignRight {
  justify-content: flex-end;
  text-align: right;
}

.euiTableCellContent--alignCenter {
  justify-content: center;
  text-align: center;
}

.euiTableHeaderCell,
.euiTableCellContent--truncateText {
  white-space: nowrap; /* 3 */

  .euiTableCellContent__text {
    overflow: hidden;
  }
}

.euiTableCellContent--overflowingContent {
  overflow: visible;
  white-space: normal;
  word-break: break-word;

  /**
   * 1. Prevent very long single words (e.g. the name of a field in a document) from overflowing
   *    the cell.
   */
  .euiTableCellContent__text {
    overflow: visible; /* 1 */
  }
}

.euiTableCellContent--showOnHover {
  .euiTableCellContent__hoverItem {
    opacity: 0;

    .euiTableRow:hover &,
    &:hover, &:focus {
      opacity: 1;
    }
  }
}

// Animate expanded row must be on the contents div inside

.euiTableRow-isExpandedRow .euiTableCellContent {
  overflow: hidden;
  animation: $euiAnimSpeedNormal $euiAnimSlightResistance 1 normal forwards growExpandedRow;
}

@keyframes growExpandedRow {
  0% {
    max-height: 0;
  }
  100% {
    max-height: 1000px;
  }
}
