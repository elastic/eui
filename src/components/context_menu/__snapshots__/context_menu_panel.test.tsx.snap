// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EuiContextMenuPanel is rendered 1`] = `
<div
  aria-label="aria-label"
  class="euiContextMenuPanel testClass1 testClass2"
  data-test-subj="test subject string"
  tabindex="-1"
>
  <div>
    Hello
  </div>
</div>
`;

exports[`EuiContextMenuPanel props onClose renders a button as a title 1`] = `
<div
  class="euiContextMenuPanel"
  tabindex="-1"
>
  <button
    class="euiContextMenuPanelTitle"
    data-test-subj="contextMenuPanelTitleButton"
    type="button"
  >
    <span
      class="euiContextMenu__itemLayout"
    >
      <span
        class="euiContextMenu__icon"
        data-euiicon-type="arrowLeft"
      />
      <span
        class="euiContextMenu__text"
      >
        Title
      </span>
    </span>
  </button>
  <div />
</div>
`;

exports[`EuiContextMenuPanel props size m is rendered 1`] = `
<div
  class="euiContextMenuPanel"
  tabindex="-1"
>
  <div
    class="euiContextMenuPanelTitle"
  >
    <span
      class="euiContextMenu__itemLayout"
    >
      Title
    </span>
  </div>
  <div />
</div>
`;

exports[`EuiContextMenuPanel props size s is rendered 1`] = `
<div
  class="euiContextMenuPanel"
  tabindex="-1"
>
  <div
    class="euiContextMenuPanelTitle euiContextMenuPanelTitle--small"
  >
    <span
      class="euiContextMenu__itemLayout"
    >
      Title
    </span>
  </div>
  <div />
</div>
`;

exports[`EuiContextMenuPanel props title is rendered 1`] = `
<div
  class="euiContextMenuPanel"
  tabindex="-1"
>
  <div
    class="euiContextMenuPanelTitle"
  >
    <span
      class="euiContextMenu__itemLayout"
    >
      Title
    </span>
  </div>
  <div />
</div>
`;

exports[`EuiContextMenuPanel props transitionDirection next with transitionType in is rendered 1`] = `
<div
  class="euiContextMenuPanel euiContextMenuPanel-txInLeft"
  tabindex="-1"
>
  <div />
</div>
`;

exports[`EuiContextMenuPanel props transitionDirection next with transitionType out is rendered 1`] = `
<div
  class="euiContextMenuPanel euiContextMenuPanel-txOutLeft"
  tabindex="-1"
>
  <div />
</div>
`;

exports[`EuiContextMenuPanel props transitionDirection previous with transitionType in is rendered 1`] = `
<div
  class="euiContextMenuPanel euiContextMenuPanel-txInRight"
  tabindex="-1"
>
  <div />
</div>
`;

exports[`EuiContextMenuPanel props transitionDirection previous with transitionType out is rendered 1`] = `
<div
  class="euiContextMenuPanel euiContextMenuPanel-txOutRight"
  tabindex="-1"
>
  <div />
</div>
`;

exports[`EuiContextMenuPanel updating items and content updates to items should not re-render if any items's watchedItemProps did not change 1`] = `
"<EuiContextMenuPanel items={{...}}>
  <div className=\\"euiContextMenuPanel\\" onKeyDown={[Function]} tabIndex={-1} onAnimationEnd={[Function]}>
    <EuiResizeObserver onResize={[Function: onResize]}>
      <div>
        <EuiContextMenuItem data-counter={0}>
          <button disabled={false} className=\\"euiContextMenuItem\\" type=\\"button\\" data-counter={0}>
            <span className=\\"euiContextMenu__itemLayout\\">
              <span className=\\"euiContextMenuItem__text\\">
                Option A
              </span>
            </span>
          </button>
        </EuiContextMenuItem>
        <EuiContextMenuItem data-counter={1}>
          <button disabled={false} className=\\"euiContextMenuItem\\" type=\\"button\\" data-counter={1}>
            <span className=\\"euiContextMenu__itemLayout\\">
              <span className=\\"euiContextMenuItem__text\\">
                Option B
              </span>
            </span>
          </button>
        </EuiContextMenuItem>
      </div>
    </EuiResizeObserver>
  </div>
</EuiContextMenuPanel>"
`;

exports[`EuiContextMenuPanel updating items and content updates to items should not re-render if any items's watchedItemProps did not change 2`] = `
"<EuiContextMenuPanel items={{...}}>
  <div className=\\"euiContextMenuPanel\\" onKeyDown={[Function]} tabIndex={-1} onAnimationEnd={[Function]}>
    <EuiResizeObserver onResize={[Function: onResize]}>
      <div>
        <EuiContextMenuItem data-counter={0}>
          <button disabled={false} className=\\"euiContextMenuItem\\" type=\\"button\\" data-counter={0}>
            <span className=\\"euiContextMenu__itemLayout\\">
              <span className=\\"euiContextMenuItem__text\\">
                Option A
              </span>
            </span>
          </button>
        </EuiContextMenuItem>
        <EuiContextMenuItem data-counter={1}>
          <button disabled={false} className=\\"euiContextMenuItem\\" type=\\"button\\" data-counter={1}>
            <span className=\\"euiContextMenu__itemLayout\\">
              <span className=\\"euiContextMenuItem__text\\">
                Option B
              </span>
            </span>
          </button>
        </EuiContextMenuItem>
      </div>
    </EuiResizeObserver>
  </div>
</EuiContextMenuPanel>"
`;

exports[`EuiContextMenuPanel updating items and content updates to items should re-render at all times when children exists 1`] = `
"<EuiContextMenuPanel items={{...}}>
  <div className=\\"euiContextMenuPanel\\" onKeyDown={[Function]} tabIndex={-1} onAnimationEnd={[Function]}>
    <EuiResizeObserver onResize={[Function: onResize]}>
      <div>
        Hello World
      </div>
    </EuiResizeObserver>
  </div>
</EuiContextMenuPanel>"
`;

exports[`EuiContextMenuPanel updating items and content updates to items should re-render at all times when children exists 2`] = `
"<EuiContextMenuPanel items={{...}}>
  <div className=\\"euiContextMenuPanel\\" onKeyDown={[Function]} tabIndex={-1} onAnimationEnd={[Function]}>
    <EuiResizeObserver onResize={[Function: onResize]}>
      <div>
        More Salutations
      </div>
    </EuiResizeObserver>
  </div>
</EuiContextMenuPanel>"
`;

exports[`EuiContextMenuPanel updating items and content updates to items should re-render if any items's watchedItemProps did change 1`] = `
"<EuiContextMenuPanel watchedItemProps={{...}} items={{...}}>
  <div className=\\"euiContextMenuPanel\\" onKeyDown={[Function]} tabIndex={-1} onAnimationEnd={[Function]}>
    <EuiResizeObserver onResize={[Function: onResize]}>
      <div>
        <EuiContextMenuItem data-counter={0}>
          <button disabled={false} className=\\"euiContextMenuItem\\" type=\\"button\\" data-counter={0}>
            <span className=\\"euiContextMenu__itemLayout\\">
              <span className=\\"euiContextMenuItem__text\\">
                Option A
              </span>
            </span>
          </button>
        </EuiContextMenuItem>
        <EuiContextMenuItem data-counter={1}>
          <button disabled={false} className=\\"euiContextMenuItem\\" type=\\"button\\" data-counter={1}>
            <span className=\\"euiContextMenu__itemLayout\\">
              <span className=\\"euiContextMenuItem__text\\">
                Option B
              </span>
            </span>
          </button>
        </EuiContextMenuItem>
      </div>
    </EuiResizeObserver>
  </div>
</EuiContextMenuPanel>"
`;

exports[`EuiContextMenuPanel updating items and content updates to items should re-render if any items's watchedItemProps did change 2`] = `
"<EuiContextMenuPanel watchedItemProps={{...}} items={{...}}>
  <div className=\\"euiContextMenuPanel\\" onKeyDown={[Function]} tabIndex={-1} onAnimationEnd={[Function]}>
    <EuiResizeObserver onResize={[Function: onResize]}>
      <div>
        <EuiContextMenuItem data-counter={2}>
          <button disabled={false} className=\\"euiContextMenuItem\\" type=\\"button\\" data-counter={2}>
            <span className=\\"euiContextMenu__itemLayout\\">
              <span className=\\"euiContextMenuItem__text\\">
                Option A
              </span>
            </span>
          </button>
        </EuiContextMenuItem>
        <EuiContextMenuItem data-counter={3}>
          <button disabled={false} className=\\"euiContextMenuItem\\" type=\\"button\\" data-counter={3}>
            <span className=\\"euiContextMenu__itemLayout\\">
              <span className=\\"euiContextMenuItem__text\\">
                Option B
              </span>
            </span>
          </button>
        </EuiContextMenuItem>
      </div>
    </EuiResizeObserver>
  </div>
</EuiContextMenuPanel>"
`;
