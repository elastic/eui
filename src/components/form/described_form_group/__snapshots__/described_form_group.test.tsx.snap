// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EuiDescribedFormGroup is rendered 1`] = `
<EuiDescribedFormGroup
  aria-label="aria-label"
  className="testClass1 testClass2"
  data-test-subj="test subject string"
  description="Test description"
  title={
    <h3>
      Title
    </h3>
  }
>
  <div
    aria-label="aria-label"
    className="euiDescribedFormGroup testClass1 testClass2"
    data-test-subj="test subject string"
    role="group"
  >
    <EuiFlexGroup
      alignItems="baseline"
      gutterSize="l"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--directionRow euiFlexGroup--responsive"
      >
        <EmotionCssPropInternal
          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="EuiDescribedFormGroup"
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
          css={
            Array [
              Object {
                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSXdCIiwiZmlsZSI6ImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZVxuICogMi4wIGFuZCB0aGUgU2VydmVyIFNpZGUgUHVibGljIExpY2Vuc2UsIHYgMTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHRcbiAqIGluIGNvbXBsaWFuY2Ugd2l0aCwgYXQgeW91ciBlbGVjdGlvbiwgdGhlIEVsYXN0aWMgTGljZW5zZSAyLjAgb3IgdGhlIFNlcnZlclxuICogU2lkZSBQdWJsaWMgTGljZW5zZSwgdiAxLlxuICovXG5cbmltcG9ydCBSZWFjdCwgeyBGdW5jdGlvbkNvbXBvbmVudCwgUmVhY3ROb2RlLCBIVE1MQXR0cmlidXRlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCB7IENvbW1vblByb3BzLCBQcm9wc09mIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcblxuaW1wb3J0IHsgRXVpVGl0bGUsIEV1aVRpdGxlU2l6ZSwgRXVpVGl0bGVQcm9wcyB9IGZyb20gJy4uLy4uL3RpdGxlJztcbmltcG9ydCB7IEV1aVRleHQgfSBmcm9tICcuLi8uLi90ZXh0JztcbmltcG9ydCB7XG4gIEV1aUZsZXhHcm91cCxcbiAgRXVpRmxleEl0ZW0sXG4gIEV1aUZsZXhHcm91cEd1dHRlclNpemUsXG4gIEV1aUZsZXhJdGVtUHJvcHMsXG59IGZyb20gJy4uLy4uL2ZsZXgnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG5leHBvcnQgdHlwZSBFdWlEZXNjcmliZWRGb3JtR3JvdXBQcm9wcyA9IENvbW1vblByb3BzICZcbiAgT21pdDxIVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sICd0aXRsZSc+ICYge1xuICAgIC8qKlxuICAgICAqIE9uZSBvciBtb3JlIGBFdWlGb3JtUm93YHMuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogUGFzc2VkIHRvIGBFdWlGbGV4R3JvdXBgLlxuICAgICAqL1xuICAgIGd1dHRlclNpemU/OiBFdWlGbGV4R3JvdXBHdXR0ZXJTaXplO1xuICAgIC8qKlxuICAgICAqIEV4cGFuZCB0byBmaWxsIDEwMCUgb2YgdGhlIHBhcmVudC5cbiAgICAgKiBEZWZhdWx0IG1heC13aWR0aCBpcyA4MDBweC5cbiAgICAgKi9cbiAgICBmdWxsV2lkdGg/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdpZHRoIHJhdGlvIG9mIGRlc2NyaXB0aW9uIGNvbHVtbiBjb21wYXJlZCB0byBmaWVsZCBjb2x1bW4uXG4gICAgICogQ2FuIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgZnVsbFdpZHRoYCBhbmRcbiAgICAgKiBtYXkgcmVxdWlyZSBgZnVsbFdpZHRoYCB0byBiZSBhcHBsaWVkIHRvIGNoaWxkIGVsZW1lbnRzLlxuICAgICAqL1xuICAgIHJhdGlvPzogJ2hhbGYnIHwgJ3RoaXJkJyB8ICdxdWFydGVyJztcbiAgICAvKipcbiAgICAgKiBGb3IgYmV0dGVyIGFjY2Vzc2liaWxpdHksIGl0J3MgcmVjb21tZW5kZWQgdG8gdXNlIGFuIEhUTUwgaGVhZGluZy5cbiAgICAgKi9cbiAgICB0aXRsZTogRXVpVGl0bGVQcm9wc1snY2hpbGRyZW4nXTtcbiAgICAvKipcbiAgICAgKiBBZGp1c3QgdGhlIHZpc3VhbCBgc2l6ZWAgb2YgdGhlIEV1aVRpdGxlIHRoYXQgd3JhcHMgYHRpdGxlYC5cbiAgICAgKi9cbiAgICB0aXRsZVNpemU/OiBFdWlUaXRsZVNpemU7XG4gICAgLyoqXG4gICAgICogQWRkZWQgYXMgYSBjaGlsZCBvZiBgRXVpVGV4dGAuXG4gICAgICovXG4gICAgZGVzY3JpcHRpb24/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBkZXNjcmlwdGlvbiBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBmaWVsZCBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBmaWVsZEZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gIH07XG5cbmV4cG9ydCBjb25zdCBFdWlEZXNjcmliZWRGb3JtR3JvdXA6IEZ1bmN0aW9uQ29tcG9uZW50PEV1aURlc2NyaWJlZEZvcm1Hcm91cFByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGd1dHRlclNpemUgPSAnbCcsXG4gIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICByYXRpbyA9ICdoYWxmJyxcbiAgdGl0bGVTaXplID0gJ3hzJyxcbiAgdGl0bGUsXG4gIGRlc2NyaXB0aW9uLFxuICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHMsXG4gIGZpZWxkRmxleEl0ZW1Qcm9wcyxcbiAgLi4ucmVzdFxufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcbiAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwJyxcbiAgICB7XG4gICAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwLS1mdWxsV2lkdGgnOiBmdWxsV2lkdGgsXG4gICAgfSxcbiAgICBjbGFzc05hbWVcbiAgKTtcblxuICBjb25zdCBmaWVsZENsYXNzZXMgPSBjbGFzc05hbWVzKFxuICAgICdldWlEZXNjcmliZWRGb3JtR3JvdXBfX2ZpZWxkcycsXG4gICAgZmllbGRGbGV4SXRlbVByb3BzICYmIGZpZWxkRmxleEl0ZW1Qcm9wcy5jbGFzc05hbWVcbiAgKTtcblxuICBsZXQgcmVuZGVyZWREZXNjcmlwdGlvbjogUmVhY3ROb2RlO1xuXG4gIGlmIChkZXNjcmlwdGlvbikge1xuICAgIC8vIElmIHRoZSBkZXNjcmlwdGlvbiBpcyBqdXN0IGEgc3RyaW5nLCB3cmFwIGl0IGluIGEgcGFyYWdyYXBoIGVsZW1lbnRcbiAgICBpZiAodHlwZW9mIGRlc2NyaXB0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgZGVzY3JpcHRpb24gPSA8cD57ZGVzY3JpcHRpb259PC9wPjtcbiAgICB9XG5cbiAgICByZW5kZXJlZERlc2NyaXB0aW9uID0gKFxuICAgICAgPEV1aVRleHRcbiAgICAgICAgc2l6ZT1cInNcIlxuICAgICAgICBjb2xvcj1cInN1YmR1ZWRcIlxuICAgICAgICBjbGFzc05hbWU9XCJldWlEZXNjcmliZWRGb3JtR3JvdXBfX2Rlc2NyaXB0aW9uXCJcbiAgICAgID5cbiAgICAgICAge2Rlc2NyaXB0aW9ufVxuICAgICAgPC9FdWlUZXh0PlxuICAgICk7XG4gIH1cblxuICBsZXQgZmllbGRHcm93dGg6IEV1aUZsZXhJdGVtUHJvcHNbJ2dyb3cnXTtcbiAgc3dpdGNoIChyYXRpbykge1xuICAgIGNhc2UgJ2hhbGYnOlxuICAgICAgZmllbGRHcm93dGggPSAxO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndGhpcmQnOlxuICAgICAgZmllbGRHcm93dGggPSAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncXVhcnRlcic6XG4gICAgICBmaWVsZEdyb3d0aCA9IDM7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS53YXJuKCdQbGVhc2UgcHJvdmlkZSBhbiBhbGxvd2VkIHJhdGlvIHRvIEV1aURlc2NyaWJlZEZyb21Sb3cnKTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgY29uc3QgZXVpRGVzY3JpYmVkRm9ybUdyb3VwU3R5bGUgPSB7XG4gICAgZGVzY3JpcHRpb25JdGVtOiBjc3NgXG4gICAgICBtaW4td2lkdGg6IG1pbigyMHJlbSwgNTAlKTtcbiAgICBgLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByb2xlPVwiZ3JvdXBcIiBjbGFzc05hbWU9e2NsYXNzZXN9IHsuLi5yZXN0fT5cbiAgICAgIDxFdWlGbGV4R3JvdXAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIgZ3V0dGVyU2l6ZT17Z3V0dGVyU2l6ZX0+XG4gICAgICAgIDxFdWlGbGV4SXRlbVxuICAgICAgICAgIGNzcz17W2V1aURlc2NyaWJlZEZvcm1Hcm91cFN0eWxlLmRlc2NyaXB0aW9uSXRlbV19XG4gICAgICAgICAgZ3Jvdz17MX1cbiAgICAgICAgICB7Li4uZGVzY3JpcHRpb25GbGV4SXRlbVByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPEV1aVRpdGxlIHNpemU9e3RpdGxlU2l6ZX0gY2xhc3NOYW1lPVwiZXVpRGVzY3JpYmVkRm9ybUdyb3VwX190aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvRXVpVGl0bGU+XG5cbiAgICAgICAgICB7cmVuZGVyZWREZXNjcmlwdGlvbn1cbiAgICAgICAgPC9FdWlGbGV4SXRlbT5cblxuICAgICAgICA8RXVpRmxleEl0ZW1cbiAgICAgICAgICBncm93PXtmaWVsZEdyb3d0aH1cbiAgICAgICAgICB7Li4uZmllbGRGbGV4SXRlbVByb3BzfVxuICAgICAgICAgIGNsYXNzTmFtZT17ZmllbGRDbGFzc2VzfVxuICAgICAgICA+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0V1aUZsZXhJdGVtPlxuICAgICAgPC9FdWlGbGV4R3JvdXA+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19 */",
                "name": "1odp4hc-descriptionItem",
                "styles": "min-width:min(20rem, 50%);label:descriptionItem;",
                "toString": [Function],
              },
              ";label:EuiDescribedFormGroup;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
            ]
          }
          grow={1}
        >
          <Noop />
          <EuiFlexItem
            className="css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            grow={1}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrow1 css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            >
              <EuiTitle
                className="euiDescribedFormGroup__title"
                size="xs"
              >
                <h3
                  className="euiTitle euiTitle--xsmall euiDescribedFormGroup__title"
                >
                  Title
                </h3>
              </EuiTitle>
              <EuiText
                className="euiDescribedFormGroup__description"
                color="subdued"
                size="s"
              >
                <div
                  className="euiText euiText--small euiDescribedFormGroup__description"
                >
                  <EuiTextColor
                    color="subdued"
                    component="div"
                  >
                    <div
                      className="euiTextColor euiTextColor--subdued"
                      style={Object {}}
                    >
                      <p>
                        Test description
                      </p>
                    </div>
                  </EuiTextColor>
                </div>
              </EuiText>
            </div>
          </EuiFlexItem>
        </EmotionCssPropInternal>
        <EuiFlexItem
          className="euiDescribedFormGroup__fields"
          grow={1}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrow1 euiDescribedFormGroup__fields"
          >
            <EuiFormRow
              describedByIds={Array []}
              display="row"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              labelType="label"
            >
              <div
                className="euiFormRow"
                id="generated-id-row"
              >
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <input
                    id="generated-id"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  />
                </div>
              </div>
            </EuiFormRow>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </div>
</EuiDescribedFormGroup>
`;

exports[`EuiDescribedFormGroup props description is not rendered when it's not provided 1`] = `
<EuiDescribedFormGroup
  title={
    <h3>
      Title
    </h3>
  }
>
  <div
    className="euiDescribedFormGroup"
    role="group"
  >
    <EuiFlexGroup
      alignItems="baseline"
      gutterSize="l"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--directionRow euiFlexGroup--responsive"
      >
        <EmotionCssPropInternal
          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="EuiDescribedFormGroup"
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
          css={
            Array [
              Object {
                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSXdCIiwiZmlsZSI6ImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZVxuICogMi4wIGFuZCB0aGUgU2VydmVyIFNpZGUgUHVibGljIExpY2Vuc2UsIHYgMTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHRcbiAqIGluIGNvbXBsaWFuY2Ugd2l0aCwgYXQgeW91ciBlbGVjdGlvbiwgdGhlIEVsYXN0aWMgTGljZW5zZSAyLjAgb3IgdGhlIFNlcnZlclxuICogU2lkZSBQdWJsaWMgTGljZW5zZSwgdiAxLlxuICovXG5cbmltcG9ydCBSZWFjdCwgeyBGdW5jdGlvbkNvbXBvbmVudCwgUmVhY3ROb2RlLCBIVE1MQXR0cmlidXRlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCB7IENvbW1vblByb3BzLCBQcm9wc09mIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcblxuaW1wb3J0IHsgRXVpVGl0bGUsIEV1aVRpdGxlU2l6ZSwgRXVpVGl0bGVQcm9wcyB9IGZyb20gJy4uLy4uL3RpdGxlJztcbmltcG9ydCB7IEV1aVRleHQgfSBmcm9tICcuLi8uLi90ZXh0JztcbmltcG9ydCB7XG4gIEV1aUZsZXhHcm91cCxcbiAgRXVpRmxleEl0ZW0sXG4gIEV1aUZsZXhHcm91cEd1dHRlclNpemUsXG4gIEV1aUZsZXhJdGVtUHJvcHMsXG59IGZyb20gJy4uLy4uL2ZsZXgnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG5leHBvcnQgdHlwZSBFdWlEZXNjcmliZWRGb3JtR3JvdXBQcm9wcyA9IENvbW1vblByb3BzICZcbiAgT21pdDxIVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sICd0aXRsZSc+ICYge1xuICAgIC8qKlxuICAgICAqIE9uZSBvciBtb3JlIGBFdWlGb3JtUm93YHMuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogUGFzc2VkIHRvIGBFdWlGbGV4R3JvdXBgLlxuICAgICAqL1xuICAgIGd1dHRlclNpemU/OiBFdWlGbGV4R3JvdXBHdXR0ZXJTaXplO1xuICAgIC8qKlxuICAgICAqIEV4cGFuZCB0byBmaWxsIDEwMCUgb2YgdGhlIHBhcmVudC5cbiAgICAgKiBEZWZhdWx0IG1heC13aWR0aCBpcyA4MDBweC5cbiAgICAgKi9cbiAgICBmdWxsV2lkdGg/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdpZHRoIHJhdGlvIG9mIGRlc2NyaXB0aW9uIGNvbHVtbiBjb21wYXJlZCB0byBmaWVsZCBjb2x1bW4uXG4gICAgICogQ2FuIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgZnVsbFdpZHRoYCBhbmRcbiAgICAgKiBtYXkgcmVxdWlyZSBgZnVsbFdpZHRoYCB0byBiZSBhcHBsaWVkIHRvIGNoaWxkIGVsZW1lbnRzLlxuICAgICAqL1xuICAgIHJhdGlvPzogJ2hhbGYnIHwgJ3RoaXJkJyB8ICdxdWFydGVyJztcbiAgICAvKipcbiAgICAgKiBGb3IgYmV0dGVyIGFjY2Vzc2liaWxpdHksIGl0J3MgcmVjb21tZW5kZWQgdG8gdXNlIGFuIEhUTUwgaGVhZGluZy5cbiAgICAgKi9cbiAgICB0aXRsZTogRXVpVGl0bGVQcm9wc1snY2hpbGRyZW4nXTtcbiAgICAvKipcbiAgICAgKiBBZGp1c3QgdGhlIHZpc3VhbCBgc2l6ZWAgb2YgdGhlIEV1aVRpdGxlIHRoYXQgd3JhcHMgYHRpdGxlYC5cbiAgICAgKi9cbiAgICB0aXRsZVNpemU/OiBFdWlUaXRsZVNpemU7XG4gICAgLyoqXG4gICAgICogQWRkZWQgYXMgYSBjaGlsZCBvZiBgRXVpVGV4dGAuXG4gICAgICovXG4gICAgZGVzY3JpcHRpb24/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBkZXNjcmlwdGlvbiBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBmaWVsZCBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBmaWVsZEZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gIH07XG5cbmV4cG9ydCBjb25zdCBFdWlEZXNjcmliZWRGb3JtR3JvdXA6IEZ1bmN0aW9uQ29tcG9uZW50PEV1aURlc2NyaWJlZEZvcm1Hcm91cFByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGd1dHRlclNpemUgPSAnbCcsXG4gIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICByYXRpbyA9ICdoYWxmJyxcbiAgdGl0bGVTaXplID0gJ3hzJyxcbiAgdGl0bGUsXG4gIGRlc2NyaXB0aW9uLFxuICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHMsXG4gIGZpZWxkRmxleEl0ZW1Qcm9wcyxcbiAgLi4ucmVzdFxufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcbiAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwJyxcbiAgICB7XG4gICAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwLS1mdWxsV2lkdGgnOiBmdWxsV2lkdGgsXG4gICAgfSxcbiAgICBjbGFzc05hbWVcbiAgKTtcblxuICBjb25zdCBmaWVsZENsYXNzZXMgPSBjbGFzc05hbWVzKFxuICAgICdldWlEZXNjcmliZWRGb3JtR3JvdXBfX2ZpZWxkcycsXG4gICAgZmllbGRGbGV4SXRlbVByb3BzICYmIGZpZWxkRmxleEl0ZW1Qcm9wcy5jbGFzc05hbWVcbiAgKTtcblxuICBsZXQgcmVuZGVyZWREZXNjcmlwdGlvbjogUmVhY3ROb2RlO1xuXG4gIGlmIChkZXNjcmlwdGlvbikge1xuICAgIC8vIElmIHRoZSBkZXNjcmlwdGlvbiBpcyBqdXN0IGEgc3RyaW5nLCB3cmFwIGl0IGluIGEgcGFyYWdyYXBoIGVsZW1lbnRcbiAgICBpZiAodHlwZW9mIGRlc2NyaXB0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgZGVzY3JpcHRpb24gPSA8cD57ZGVzY3JpcHRpb259PC9wPjtcbiAgICB9XG5cbiAgICByZW5kZXJlZERlc2NyaXB0aW9uID0gKFxuICAgICAgPEV1aVRleHRcbiAgICAgICAgc2l6ZT1cInNcIlxuICAgICAgICBjb2xvcj1cInN1YmR1ZWRcIlxuICAgICAgICBjbGFzc05hbWU9XCJldWlEZXNjcmliZWRGb3JtR3JvdXBfX2Rlc2NyaXB0aW9uXCJcbiAgICAgID5cbiAgICAgICAge2Rlc2NyaXB0aW9ufVxuICAgICAgPC9FdWlUZXh0PlxuICAgICk7XG4gIH1cblxuICBsZXQgZmllbGRHcm93dGg6IEV1aUZsZXhJdGVtUHJvcHNbJ2dyb3cnXTtcbiAgc3dpdGNoIChyYXRpbykge1xuICAgIGNhc2UgJ2hhbGYnOlxuICAgICAgZmllbGRHcm93dGggPSAxO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndGhpcmQnOlxuICAgICAgZmllbGRHcm93dGggPSAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncXVhcnRlcic6XG4gICAgICBmaWVsZEdyb3d0aCA9IDM7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS53YXJuKCdQbGVhc2UgcHJvdmlkZSBhbiBhbGxvd2VkIHJhdGlvIHRvIEV1aURlc2NyaWJlZEZyb21Sb3cnKTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgY29uc3QgZXVpRGVzY3JpYmVkRm9ybUdyb3VwU3R5bGUgPSB7XG4gICAgZGVzY3JpcHRpb25JdGVtOiBjc3NgXG4gICAgICBtaW4td2lkdGg6IG1pbigyMHJlbSwgNTAlKTtcbiAgICBgLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByb2xlPVwiZ3JvdXBcIiBjbGFzc05hbWU9e2NsYXNzZXN9IHsuLi5yZXN0fT5cbiAgICAgIDxFdWlGbGV4R3JvdXAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIgZ3V0dGVyU2l6ZT17Z3V0dGVyU2l6ZX0+XG4gICAgICAgIDxFdWlGbGV4SXRlbVxuICAgICAgICAgIGNzcz17W2V1aURlc2NyaWJlZEZvcm1Hcm91cFN0eWxlLmRlc2NyaXB0aW9uSXRlbV19XG4gICAgICAgICAgZ3Jvdz17MX1cbiAgICAgICAgICB7Li4uZGVzY3JpcHRpb25GbGV4SXRlbVByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPEV1aVRpdGxlIHNpemU9e3RpdGxlU2l6ZX0gY2xhc3NOYW1lPVwiZXVpRGVzY3JpYmVkRm9ybUdyb3VwX190aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvRXVpVGl0bGU+XG5cbiAgICAgICAgICB7cmVuZGVyZWREZXNjcmlwdGlvbn1cbiAgICAgICAgPC9FdWlGbGV4SXRlbT5cblxuICAgICAgICA8RXVpRmxleEl0ZW1cbiAgICAgICAgICBncm93PXtmaWVsZEdyb3d0aH1cbiAgICAgICAgICB7Li4uZmllbGRGbGV4SXRlbVByb3BzfVxuICAgICAgICAgIGNsYXNzTmFtZT17ZmllbGRDbGFzc2VzfVxuICAgICAgICA+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0V1aUZsZXhJdGVtPlxuICAgICAgPC9FdWlGbGV4R3JvdXA+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19 */",
                "name": "1odp4hc-descriptionItem",
                "styles": "min-width:min(20rem, 50%);label:descriptionItem;",
                "toString": [Function],
              },
              ";label:EuiDescribedFormGroup;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
            ]
          }
          grow={1}
        >
          <Noop />
          <EuiFlexItem
            className="css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            grow={1}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrow1 css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            >
              <EuiTitle
                className="euiDescribedFormGroup__title"
                size="xs"
              >
                <h3
                  className="euiTitle euiTitle--xsmall euiDescribedFormGroup__title"
                >
                  Title
                </h3>
              </EuiTitle>
            </div>
          </EuiFlexItem>
        </EmotionCssPropInternal>
        <EuiFlexItem
          className="euiDescribedFormGroup__fields"
          grow={1}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrow1 euiDescribedFormGroup__fields"
          >
            <EuiFormRow
              describedByIds={Array []}
              display="row"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              labelType="label"
            >
              <div
                className="euiFormRow"
                id="generated-id-row"
              >
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <input
                    id="generated-id"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  />
                </div>
              </div>
            </EuiFormRow>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </div>
</EuiDescribedFormGroup>
`;

exports[`EuiDescribedFormGroup props fullWidth is rendered 1`] = `
<EuiDescribedFormGroup
  description="Test description"
  fullWidth={true}
  title={
    <h3>
      Title
    </h3>
  }
>
  <div
    className="euiDescribedFormGroup euiDescribedFormGroup--fullWidth"
    role="group"
  >
    <EuiFlexGroup
      alignItems="baseline"
      gutterSize="l"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--directionRow euiFlexGroup--responsive"
      >
        <EmotionCssPropInternal
          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="EuiDescribedFormGroup"
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
          css={
            Array [
              Object {
                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSXdCIiwiZmlsZSI6ImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZVxuICogMi4wIGFuZCB0aGUgU2VydmVyIFNpZGUgUHVibGljIExpY2Vuc2UsIHYgMTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHRcbiAqIGluIGNvbXBsaWFuY2Ugd2l0aCwgYXQgeW91ciBlbGVjdGlvbiwgdGhlIEVsYXN0aWMgTGljZW5zZSAyLjAgb3IgdGhlIFNlcnZlclxuICogU2lkZSBQdWJsaWMgTGljZW5zZSwgdiAxLlxuICovXG5cbmltcG9ydCBSZWFjdCwgeyBGdW5jdGlvbkNvbXBvbmVudCwgUmVhY3ROb2RlLCBIVE1MQXR0cmlidXRlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCB7IENvbW1vblByb3BzLCBQcm9wc09mIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcblxuaW1wb3J0IHsgRXVpVGl0bGUsIEV1aVRpdGxlU2l6ZSwgRXVpVGl0bGVQcm9wcyB9IGZyb20gJy4uLy4uL3RpdGxlJztcbmltcG9ydCB7IEV1aVRleHQgfSBmcm9tICcuLi8uLi90ZXh0JztcbmltcG9ydCB7XG4gIEV1aUZsZXhHcm91cCxcbiAgRXVpRmxleEl0ZW0sXG4gIEV1aUZsZXhHcm91cEd1dHRlclNpemUsXG4gIEV1aUZsZXhJdGVtUHJvcHMsXG59IGZyb20gJy4uLy4uL2ZsZXgnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG5leHBvcnQgdHlwZSBFdWlEZXNjcmliZWRGb3JtR3JvdXBQcm9wcyA9IENvbW1vblByb3BzICZcbiAgT21pdDxIVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sICd0aXRsZSc+ICYge1xuICAgIC8qKlxuICAgICAqIE9uZSBvciBtb3JlIGBFdWlGb3JtUm93YHMuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogUGFzc2VkIHRvIGBFdWlGbGV4R3JvdXBgLlxuICAgICAqL1xuICAgIGd1dHRlclNpemU/OiBFdWlGbGV4R3JvdXBHdXR0ZXJTaXplO1xuICAgIC8qKlxuICAgICAqIEV4cGFuZCB0byBmaWxsIDEwMCUgb2YgdGhlIHBhcmVudC5cbiAgICAgKiBEZWZhdWx0IG1heC13aWR0aCBpcyA4MDBweC5cbiAgICAgKi9cbiAgICBmdWxsV2lkdGg/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdpZHRoIHJhdGlvIG9mIGRlc2NyaXB0aW9uIGNvbHVtbiBjb21wYXJlZCB0byBmaWVsZCBjb2x1bW4uXG4gICAgICogQ2FuIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgZnVsbFdpZHRoYCBhbmRcbiAgICAgKiBtYXkgcmVxdWlyZSBgZnVsbFdpZHRoYCB0byBiZSBhcHBsaWVkIHRvIGNoaWxkIGVsZW1lbnRzLlxuICAgICAqL1xuICAgIHJhdGlvPzogJ2hhbGYnIHwgJ3RoaXJkJyB8ICdxdWFydGVyJztcbiAgICAvKipcbiAgICAgKiBGb3IgYmV0dGVyIGFjY2Vzc2liaWxpdHksIGl0J3MgcmVjb21tZW5kZWQgdG8gdXNlIGFuIEhUTUwgaGVhZGluZy5cbiAgICAgKi9cbiAgICB0aXRsZTogRXVpVGl0bGVQcm9wc1snY2hpbGRyZW4nXTtcbiAgICAvKipcbiAgICAgKiBBZGp1c3QgdGhlIHZpc3VhbCBgc2l6ZWAgb2YgdGhlIEV1aVRpdGxlIHRoYXQgd3JhcHMgYHRpdGxlYC5cbiAgICAgKi9cbiAgICB0aXRsZVNpemU/OiBFdWlUaXRsZVNpemU7XG4gICAgLyoqXG4gICAgICogQWRkZWQgYXMgYSBjaGlsZCBvZiBgRXVpVGV4dGAuXG4gICAgICovXG4gICAgZGVzY3JpcHRpb24/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBkZXNjcmlwdGlvbiBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBmaWVsZCBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBmaWVsZEZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gIH07XG5cbmV4cG9ydCBjb25zdCBFdWlEZXNjcmliZWRGb3JtR3JvdXA6IEZ1bmN0aW9uQ29tcG9uZW50PEV1aURlc2NyaWJlZEZvcm1Hcm91cFByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGd1dHRlclNpemUgPSAnbCcsXG4gIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICByYXRpbyA9ICdoYWxmJyxcbiAgdGl0bGVTaXplID0gJ3hzJyxcbiAgdGl0bGUsXG4gIGRlc2NyaXB0aW9uLFxuICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHMsXG4gIGZpZWxkRmxleEl0ZW1Qcm9wcyxcbiAgLi4ucmVzdFxufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcbiAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwJyxcbiAgICB7XG4gICAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwLS1mdWxsV2lkdGgnOiBmdWxsV2lkdGgsXG4gICAgfSxcbiAgICBjbGFzc05hbWVcbiAgKTtcblxuICBjb25zdCBmaWVsZENsYXNzZXMgPSBjbGFzc05hbWVzKFxuICAgICdldWlEZXNjcmliZWRGb3JtR3JvdXBfX2ZpZWxkcycsXG4gICAgZmllbGRGbGV4SXRlbVByb3BzICYmIGZpZWxkRmxleEl0ZW1Qcm9wcy5jbGFzc05hbWVcbiAgKTtcblxuICBsZXQgcmVuZGVyZWREZXNjcmlwdGlvbjogUmVhY3ROb2RlO1xuXG4gIGlmIChkZXNjcmlwdGlvbikge1xuICAgIC8vIElmIHRoZSBkZXNjcmlwdGlvbiBpcyBqdXN0IGEgc3RyaW5nLCB3cmFwIGl0IGluIGEgcGFyYWdyYXBoIGVsZW1lbnRcbiAgICBpZiAodHlwZW9mIGRlc2NyaXB0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgZGVzY3JpcHRpb24gPSA8cD57ZGVzY3JpcHRpb259PC9wPjtcbiAgICB9XG5cbiAgICByZW5kZXJlZERlc2NyaXB0aW9uID0gKFxuICAgICAgPEV1aVRleHRcbiAgICAgICAgc2l6ZT1cInNcIlxuICAgICAgICBjb2xvcj1cInN1YmR1ZWRcIlxuICAgICAgICBjbGFzc05hbWU9XCJldWlEZXNjcmliZWRGb3JtR3JvdXBfX2Rlc2NyaXB0aW9uXCJcbiAgICAgID5cbiAgICAgICAge2Rlc2NyaXB0aW9ufVxuICAgICAgPC9FdWlUZXh0PlxuICAgICk7XG4gIH1cblxuICBsZXQgZmllbGRHcm93dGg6IEV1aUZsZXhJdGVtUHJvcHNbJ2dyb3cnXTtcbiAgc3dpdGNoIChyYXRpbykge1xuICAgIGNhc2UgJ2hhbGYnOlxuICAgICAgZmllbGRHcm93dGggPSAxO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndGhpcmQnOlxuICAgICAgZmllbGRHcm93dGggPSAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncXVhcnRlcic6XG4gICAgICBmaWVsZEdyb3d0aCA9IDM7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS53YXJuKCdQbGVhc2UgcHJvdmlkZSBhbiBhbGxvd2VkIHJhdGlvIHRvIEV1aURlc2NyaWJlZEZyb21Sb3cnKTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgY29uc3QgZXVpRGVzY3JpYmVkRm9ybUdyb3VwU3R5bGUgPSB7XG4gICAgZGVzY3JpcHRpb25JdGVtOiBjc3NgXG4gICAgICBtaW4td2lkdGg6IG1pbigyMHJlbSwgNTAlKTtcbiAgICBgLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByb2xlPVwiZ3JvdXBcIiBjbGFzc05hbWU9e2NsYXNzZXN9IHsuLi5yZXN0fT5cbiAgICAgIDxFdWlGbGV4R3JvdXAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIgZ3V0dGVyU2l6ZT17Z3V0dGVyU2l6ZX0+XG4gICAgICAgIDxFdWlGbGV4SXRlbVxuICAgICAgICAgIGNzcz17W2V1aURlc2NyaWJlZEZvcm1Hcm91cFN0eWxlLmRlc2NyaXB0aW9uSXRlbV19XG4gICAgICAgICAgZ3Jvdz17MX1cbiAgICAgICAgICB7Li4uZGVzY3JpcHRpb25GbGV4SXRlbVByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPEV1aVRpdGxlIHNpemU9e3RpdGxlU2l6ZX0gY2xhc3NOYW1lPVwiZXVpRGVzY3JpYmVkRm9ybUdyb3VwX190aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvRXVpVGl0bGU+XG5cbiAgICAgICAgICB7cmVuZGVyZWREZXNjcmlwdGlvbn1cbiAgICAgICAgPC9FdWlGbGV4SXRlbT5cblxuICAgICAgICA8RXVpRmxleEl0ZW1cbiAgICAgICAgICBncm93PXtmaWVsZEdyb3d0aH1cbiAgICAgICAgICB7Li4uZmllbGRGbGV4SXRlbVByb3BzfVxuICAgICAgICAgIGNsYXNzTmFtZT17ZmllbGRDbGFzc2VzfVxuICAgICAgICA+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0V1aUZsZXhJdGVtPlxuICAgICAgPC9FdWlGbGV4R3JvdXA+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19 */",
                "name": "1odp4hc-descriptionItem",
                "styles": "min-width:min(20rem, 50%);label:descriptionItem;",
                "toString": [Function],
              },
              ";label:EuiDescribedFormGroup;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
            ]
          }
          grow={1}
        >
          <Noop />
          <EuiFlexItem
            className="css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            grow={1}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrow1 css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            >
              <EuiTitle
                className="euiDescribedFormGroup__title"
                size="xs"
              >
                <h3
                  className="euiTitle euiTitle--xsmall euiDescribedFormGroup__title"
                >
                  Title
                </h3>
              </EuiTitle>
              <EuiText
                className="euiDescribedFormGroup__description"
                color="subdued"
                size="s"
              >
                <div
                  className="euiText euiText--small euiDescribedFormGroup__description"
                >
                  <EuiTextColor
                    color="subdued"
                    component="div"
                  >
                    <div
                      className="euiTextColor euiTextColor--subdued"
                      style={Object {}}
                    >
                      <p>
                        Test description
                      </p>
                    </div>
                  </EuiTextColor>
                </div>
              </EuiText>
            </div>
          </EuiFlexItem>
        </EmotionCssPropInternal>
        <EuiFlexItem
          className="euiDescribedFormGroup__fields"
          grow={1}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrow1 euiDescribedFormGroup__fields"
          >
            <EuiFormRow
              describedByIds={Array []}
              display="row"
              fullWidth={true}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              labelType="label"
            >
              <div
                className="euiFormRow euiFormRow--fullWidth"
                id="generated-id-row"
              >
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <input
                    id="generated-id"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  />
                </div>
              </div>
            </EuiFormRow>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </div>
</EuiDescribedFormGroup>
`;

exports[`EuiDescribedFormGroup props gutterSize is rendered 1`] = `
<EuiDescribedFormGroup
  description="Test description"
  gutterSize="s"
  title={
    <h3>
      Title
    </h3>
  }
>
  <div
    className="euiDescribedFormGroup"
    role="group"
  >
    <EuiFlexGroup
      alignItems="baseline"
      gutterSize="s"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsBaseline euiFlexGroup--directionRow euiFlexGroup--responsive"
      >
        <EmotionCssPropInternal
          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="EuiDescribedFormGroup"
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
          css={
            Array [
              Object {
                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSXdCIiwiZmlsZSI6ImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZVxuICogMi4wIGFuZCB0aGUgU2VydmVyIFNpZGUgUHVibGljIExpY2Vuc2UsIHYgMTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHRcbiAqIGluIGNvbXBsaWFuY2Ugd2l0aCwgYXQgeW91ciBlbGVjdGlvbiwgdGhlIEVsYXN0aWMgTGljZW5zZSAyLjAgb3IgdGhlIFNlcnZlclxuICogU2lkZSBQdWJsaWMgTGljZW5zZSwgdiAxLlxuICovXG5cbmltcG9ydCBSZWFjdCwgeyBGdW5jdGlvbkNvbXBvbmVudCwgUmVhY3ROb2RlLCBIVE1MQXR0cmlidXRlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCB7IENvbW1vblByb3BzLCBQcm9wc09mIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcblxuaW1wb3J0IHsgRXVpVGl0bGUsIEV1aVRpdGxlU2l6ZSwgRXVpVGl0bGVQcm9wcyB9IGZyb20gJy4uLy4uL3RpdGxlJztcbmltcG9ydCB7IEV1aVRleHQgfSBmcm9tICcuLi8uLi90ZXh0JztcbmltcG9ydCB7XG4gIEV1aUZsZXhHcm91cCxcbiAgRXVpRmxleEl0ZW0sXG4gIEV1aUZsZXhHcm91cEd1dHRlclNpemUsXG4gIEV1aUZsZXhJdGVtUHJvcHMsXG59IGZyb20gJy4uLy4uL2ZsZXgnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG5leHBvcnQgdHlwZSBFdWlEZXNjcmliZWRGb3JtR3JvdXBQcm9wcyA9IENvbW1vblByb3BzICZcbiAgT21pdDxIVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sICd0aXRsZSc+ICYge1xuICAgIC8qKlxuICAgICAqIE9uZSBvciBtb3JlIGBFdWlGb3JtUm93YHMuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogUGFzc2VkIHRvIGBFdWlGbGV4R3JvdXBgLlxuICAgICAqL1xuICAgIGd1dHRlclNpemU/OiBFdWlGbGV4R3JvdXBHdXR0ZXJTaXplO1xuICAgIC8qKlxuICAgICAqIEV4cGFuZCB0byBmaWxsIDEwMCUgb2YgdGhlIHBhcmVudC5cbiAgICAgKiBEZWZhdWx0IG1heC13aWR0aCBpcyA4MDBweC5cbiAgICAgKi9cbiAgICBmdWxsV2lkdGg/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdpZHRoIHJhdGlvIG9mIGRlc2NyaXB0aW9uIGNvbHVtbiBjb21wYXJlZCB0byBmaWVsZCBjb2x1bW4uXG4gICAgICogQ2FuIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgZnVsbFdpZHRoYCBhbmRcbiAgICAgKiBtYXkgcmVxdWlyZSBgZnVsbFdpZHRoYCB0byBiZSBhcHBsaWVkIHRvIGNoaWxkIGVsZW1lbnRzLlxuICAgICAqL1xuICAgIHJhdGlvPzogJ2hhbGYnIHwgJ3RoaXJkJyB8ICdxdWFydGVyJztcbiAgICAvKipcbiAgICAgKiBGb3IgYmV0dGVyIGFjY2Vzc2liaWxpdHksIGl0J3MgcmVjb21tZW5kZWQgdG8gdXNlIGFuIEhUTUwgaGVhZGluZy5cbiAgICAgKi9cbiAgICB0aXRsZTogRXVpVGl0bGVQcm9wc1snY2hpbGRyZW4nXTtcbiAgICAvKipcbiAgICAgKiBBZGp1c3QgdGhlIHZpc3VhbCBgc2l6ZWAgb2YgdGhlIEV1aVRpdGxlIHRoYXQgd3JhcHMgYHRpdGxlYC5cbiAgICAgKi9cbiAgICB0aXRsZVNpemU/OiBFdWlUaXRsZVNpemU7XG4gICAgLyoqXG4gICAgICogQWRkZWQgYXMgYSBjaGlsZCBvZiBgRXVpVGV4dGAuXG4gICAgICovXG4gICAgZGVzY3JpcHRpb24/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBkZXNjcmlwdGlvbiBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBmaWVsZCBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBmaWVsZEZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gIH07XG5cbmV4cG9ydCBjb25zdCBFdWlEZXNjcmliZWRGb3JtR3JvdXA6IEZ1bmN0aW9uQ29tcG9uZW50PEV1aURlc2NyaWJlZEZvcm1Hcm91cFByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGd1dHRlclNpemUgPSAnbCcsXG4gIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICByYXRpbyA9ICdoYWxmJyxcbiAgdGl0bGVTaXplID0gJ3hzJyxcbiAgdGl0bGUsXG4gIGRlc2NyaXB0aW9uLFxuICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHMsXG4gIGZpZWxkRmxleEl0ZW1Qcm9wcyxcbiAgLi4ucmVzdFxufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcbiAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwJyxcbiAgICB7XG4gICAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwLS1mdWxsV2lkdGgnOiBmdWxsV2lkdGgsXG4gICAgfSxcbiAgICBjbGFzc05hbWVcbiAgKTtcblxuICBjb25zdCBmaWVsZENsYXNzZXMgPSBjbGFzc05hbWVzKFxuICAgICdldWlEZXNjcmliZWRGb3JtR3JvdXBfX2ZpZWxkcycsXG4gICAgZmllbGRGbGV4SXRlbVByb3BzICYmIGZpZWxkRmxleEl0ZW1Qcm9wcy5jbGFzc05hbWVcbiAgKTtcblxuICBsZXQgcmVuZGVyZWREZXNjcmlwdGlvbjogUmVhY3ROb2RlO1xuXG4gIGlmIChkZXNjcmlwdGlvbikge1xuICAgIC8vIElmIHRoZSBkZXNjcmlwdGlvbiBpcyBqdXN0IGEgc3RyaW5nLCB3cmFwIGl0IGluIGEgcGFyYWdyYXBoIGVsZW1lbnRcbiAgICBpZiAodHlwZW9mIGRlc2NyaXB0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgZGVzY3JpcHRpb24gPSA8cD57ZGVzY3JpcHRpb259PC9wPjtcbiAgICB9XG5cbiAgICByZW5kZXJlZERlc2NyaXB0aW9uID0gKFxuICAgICAgPEV1aVRleHRcbiAgICAgICAgc2l6ZT1cInNcIlxuICAgICAgICBjb2xvcj1cInN1YmR1ZWRcIlxuICAgICAgICBjbGFzc05hbWU9XCJldWlEZXNjcmliZWRGb3JtR3JvdXBfX2Rlc2NyaXB0aW9uXCJcbiAgICAgID5cbiAgICAgICAge2Rlc2NyaXB0aW9ufVxuICAgICAgPC9FdWlUZXh0PlxuICAgICk7XG4gIH1cblxuICBsZXQgZmllbGRHcm93dGg6IEV1aUZsZXhJdGVtUHJvcHNbJ2dyb3cnXTtcbiAgc3dpdGNoIChyYXRpbykge1xuICAgIGNhc2UgJ2hhbGYnOlxuICAgICAgZmllbGRHcm93dGggPSAxO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndGhpcmQnOlxuICAgICAgZmllbGRHcm93dGggPSAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncXVhcnRlcic6XG4gICAgICBmaWVsZEdyb3d0aCA9IDM7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS53YXJuKCdQbGVhc2UgcHJvdmlkZSBhbiBhbGxvd2VkIHJhdGlvIHRvIEV1aURlc2NyaWJlZEZyb21Sb3cnKTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgY29uc3QgZXVpRGVzY3JpYmVkRm9ybUdyb3VwU3R5bGUgPSB7XG4gICAgZGVzY3JpcHRpb25JdGVtOiBjc3NgXG4gICAgICBtaW4td2lkdGg6IG1pbigyMHJlbSwgNTAlKTtcbiAgICBgLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByb2xlPVwiZ3JvdXBcIiBjbGFzc05hbWU9e2NsYXNzZXN9IHsuLi5yZXN0fT5cbiAgICAgIDxFdWlGbGV4R3JvdXAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIgZ3V0dGVyU2l6ZT17Z3V0dGVyU2l6ZX0+XG4gICAgICAgIDxFdWlGbGV4SXRlbVxuICAgICAgICAgIGNzcz17W2V1aURlc2NyaWJlZEZvcm1Hcm91cFN0eWxlLmRlc2NyaXB0aW9uSXRlbV19XG4gICAgICAgICAgZ3Jvdz17MX1cbiAgICAgICAgICB7Li4uZGVzY3JpcHRpb25GbGV4SXRlbVByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPEV1aVRpdGxlIHNpemU9e3RpdGxlU2l6ZX0gY2xhc3NOYW1lPVwiZXVpRGVzY3JpYmVkRm9ybUdyb3VwX190aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvRXVpVGl0bGU+XG5cbiAgICAgICAgICB7cmVuZGVyZWREZXNjcmlwdGlvbn1cbiAgICAgICAgPC9FdWlGbGV4SXRlbT5cblxuICAgICAgICA8RXVpRmxleEl0ZW1cbiAgICAgICAgICBncm93PXtmaWVsZEdyb3d0aH1cbiAgICAgICAgICB7Li4uZmllbGRGbGV4SXRlbVByb3BzfVxuICAgICAgICAgIGNsYXNzTmFtZT17ZmllbGRDbGFzc2VzfVxuICAgICAgICA+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0V1aUZsZXhJdGVtPlxuICAgICAgPC9FdWlGbGV4R3JvdXA+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19 */",
                "name": "1odp4hc-descriptionItem",
                "styles": "min-width:min(20rem, 50%);label:descriptionItem;",
                "toString": [Function],
              },
              ";label:EuiDescribedFormGroup;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
            ]
          }
          grow={1}
        >
          <Noop />
          <EuiFlexItem
            className="css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            grow={1}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrow1 css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            >
              <EuiTitle
                className="euiDescribedFormGroup__title"
                size="xs"
              >
                <h3
                  className="euiTitle euiTitle--xsmall euiDescribedFormGroup__title"
                >
                  Title
                </h3>
              </EuiTitle>
              <EuiText
                className="euiDescribedFormGroup__description"
                color="subdued"
                size="s"
              >
                <div
                  className="euiText euiText--small euiDescribedFormGroup__description"
                >
                  <EuiTextColor
                    color="subdued"
                    component="div"
                  >
                    <div
                      className="euiTextColor euiTextColor--subdued"
                      style={Object {}}
                    >
                      <p>
                        Test description
                      </p>
                    </div>
                  </EuiTextColor>
                </div>
              </EuiText>
            </div>
          </EuiFlexItem>
        </EmotionCssPropInternal>
        <EuiFlexItem
          className="euiDescribedFormGroup__fields"
          grow={1}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrow1 euiDescribedFormGroup__fields"
          >
            <EuiFormRow
              describedByIds={Array []}
              display="row"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              labelType="label"
            >
              <div
                className="euiFormRow"
                id="generated-id-row"
              >
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <input
                    id="generated-id"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  />
                </div>
              </div>
            </EuiFormRow>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </div>
</EuiDescribedFormGroup>
`;

exports[`EuiDescribedFormGroup props props for the flex item containers are passed down 1`] = `
<EuiDescribedFormGroup
  description="Test description"
  descriptionFlexItemProps={
    Object {
      "grow": 2,
    }
  }
  fieldFlexItemProps={
    Object {
      "component": "section",
    }
  }
  title={
    <h3>
      Title
    </h3>
  }
>
  <div
    className="euiDescribedFormGroup"
    role="group"
  >
    <EuiFlexGroup
      alignItems="baseline"
      gutterSize="l"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--directionRow euiFlexGroup--responsive"
      >
        <EmotionCssPropInternal
          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="EuiDescribedFormGroup"
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
          css={
            Array [
              Object {
                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSXdCIiwiZmlsZSI6ImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZVxuICogMi4wIGFuZCB0aGUgU2VydmVyIFNpZGUgUHVibGljIExpY2Vuc2UsIHYgMTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHRcbiAqIGluIGNvbXBsaWFuY2Ugd2l0aCwgYXQgeW91ciBlbGVjdGlvbiwgdGhlIEVsYXN0aWMgTGljZW5zZSAyLjAgb3IgdGhlIFNlcnZlclxuICogU2lkZSBQdWJsaWMgTGljZW5zZSwgdiAxLlxuICovXG5cbmltcG9ydCBSZWFjdCwgeyBGdW5jdGlvbkNvbXBvbmVudCwgUmVhY3ROb2RlLCBIVE1MQXR0cmlidXRlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCB7IENvbW1vblByb3BzLCBQcm9wc09mIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcblxuaW1wb3J0IHsgRXVpVGl0bGUsIEV1aVRpdGxlU2l6ZSwgRXVpVGl0bGVQcm9wcyB9IGZyb20gJy4uLy4uL3RpdGxlJztcbmltcG9ydCB7IEV1aVRleHQgfSBmcm9tICcuLi8uLi90ZXh0JztcbmltcG9ydCB7XG4gIEV1aUZsZXhHcm91cCxcbiAgRXVpRmxleEl0ZW0sXG4gIEV1aUZsZXhHcm91cEd1dHRlclNpemUsXG4gIEV1aUZsZXhJdGVtUHJvcHMsXG59IGZyb20gJy4uLy4uL2ZsZXgnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG5leHBvcnQgdHlwZSBFdWlEZXNjcmliZWRGb3JtR3JvdXBQcm9wcyA9IENvbW1vblByb3BzICZcbiAgT21pdDxIVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sICd0aXRsZSc+ICYge1xuICAgIC8qKlxuICAgICAqIE9uZSBvciBtb3JlIGBFdWlGb3JtUm93YHMuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogUGFzc2VkIHRvIGBFdWlGbGV4R3JvdXBgLlxuICAgICAqL1xuICAgIGd1dHRlclNpemU/OiBFdWlGbGV4R3JvdXBHdXR0ZXJTaXplO1xuICAgIC8qKlxuICAgICAqIEV4cGFuZCB0byBmaWxsIDEwMCUgb2YgdGhlIHBhcmVudC5cbiAgICAgKiBEZWZhdWx0IG1heC13aWR0aCBpcyA4MDBweC5cbiAgICAgKi9cbiAgICBmdWxsV2lkdGg/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdpZHRoIHJhdGlvIG9mIGRlc2NyaXB0aW9uIGNvbHVtbiBjb21wYXJlZCB0byBmaWVsZCBjb2x1bW4uXG4gICAgICogQ2FuIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgZnVsbFdpZHRoYCBhbmRcbiAgICAgKiBtYXkgcmVxdWlyZSBgZnVsbFdpZHRoYCB0byBiZSBhcHBsaWVkIHRvIGNoaWxkIGVsZW1lbnRzLlxuICAgICAqL1xuICAgIHJhdGlvPzogJ2hhbGYnIHwgJ3RoaXJkJyB8ICdxdWFydGVyJztcbiAgICAvKipcbiAgICAgKiBGb3IgYmV0dGVyIGFjY2Vzc2liaWxpdHksIGl0J3MgcmVjb21tZW5kZWQgdG8gdXNlIGFuIEhUTUwgaGVhZGluZy5cbiAgICAgKi9cbiAgICB0aXRsZTogRXVpVGl0bGVQcm9wc1snY2hpbGRyZW4nXTtcbiAgICAvKipcbiAgICAgKiBBZGp1c3QgdGhlIHZpc3VhbCBgc2l6ZWAgb2YgdGhlIEV1aVRpdGxlIHRoYXQgd3JhcHMgYHRpdGxlYC5cbiAgICAgKi9cbiAgICB0aXRsZVNpemU/OiBFdWlUaXRsZVNpemU7XG4gICAgLyoqXG4gICAgICogQWRkZWQgYXMgYSBjaGlsZCBvZiBgRXVpVGV4dGAuXG4gICAgICovXG4gICAgZGVzY3JpcHRpb24/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBkZXNjcmlwdGlvbiBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBmaWVsZCBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBmaWVsZEZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gIH07XG5cbmV4cG9ydCBjb25zdCBFdWlEZXNjcmliZWRGb3JtR3JvdXA6IEZ1bmN0aW9uQ29tcG9uZW50PEV1aURlc2NyaWJlZEZvcm1Hcm91cFByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGd1dHRlclNpemUgPSAnbCcsXG4gIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICByYXRpbyA9ICdoYWxmJyxcbiAgdGl0bGVTaXplID0gJ3hzJyxcbiAgdGl0bGUsXG4gIGRlc2NyaXB0aW9uLFxuICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHMsXG4gIGZpZWxkRmxleEl0ZW1Qcm9wcyxcbiAgLi4ucmVzdFxufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcbiAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwJyxcbiAgICB7XG4gICAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwLS1mdWxsV2lkdGgnOiBmdWxsV2lkdGgsXG4gICAgfSxcbiAgICBjbGFzc05hbWVcbiAgKTtcblxuICBjb25zdCBmaWVsZENsYXNzZXMgPSBjbGFzc05hbWVzKFxuICAgICdldWlEZXNjcmliZWRGb3JtR3JvdXBfX2ZpZWxkcycsXG4gICAgZmllbGRGbGV4SXRlbVByb3BzICYmIGZpZWxkRmxleEl0ZW1Qcm9wcy5jbGFzc05hbWVcbiAgKTtcblxuICBsZXQgcmVuZGVyZWREZXNjcmlwdGlvbjogUmVhY3ROb2RlO1xuXG4gIGlmIChkZXNjcmlwdGlvbikge1xuICAgIC8vIElmIHRoZSBkZXNjcmlwdGlvbiBpcyBqdXN0IGEgc3RyaW5nLCB3cmFwIGl0IGluIGEgcGFyYWdyYXBoIGVsZW1lbnRcbiAgICBpZiAodHlwZW9mIGRlc2NyaXB0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgZGVzY3JpcHRpb24gPSA8cD57ZGVzY3JpcHRpb259PC9wPjtcbiAgICB9XG5cbiAgICByZW5kZXJlZERlc2NyaXB0aW9uID0gKFxuICAgICAgPEV1aVRleHRcbiAgICAgICAgc2l6ZT1cInNcIlxuICAgICAgICBjb2xvcj1cInN1YmR1ZWRcIlxuICAgICAgICBjbGFzc05hbWU9XCJldWlEZXNjcmliZWRGb3JtR3JvdXBfX2Rlc2NyaXB0aW9uXCJcbiAgICAgID5cbiAgICAgICAge2Rlc2NyaXB0aW9ufVxuICAgICAgPC9FdWlUZXh0PlxuICAgICk7XG4gIH1cblxuICBsZXQgZmllbGRHcm93dGg6IEV1aUZsZXhJdGVtUHJvcHNbJ2dyb3cnXTtcbiAgc3dpdGNoIChyYXRpbykge1xuICAgIGNhc2UgJ2hhbGYnOlxuICAgICAgZmllbGRHcm93dGggPSAxO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndGhpcmQnOlxuICAgICAgZmllbGRHcm93dGggPSAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncXVhcnRlcic6XG4gICAgICBmaWVsZEdyb3d0aCA9IDM7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS53YXJuKCdQbGVhc2UgcHJvdmlkZSBhbiBhbGxvd2VkIHJhdGlvIHRvIEV1aURlc2NyaWJlZEZyb21Sb3cnKTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgY29uc3QgZXVpRGVzY3JpYmVkRm9ybUdyb3VwU3R5bGUgPSB7XG4gICAgZGVzY3JpcHRpb25JdGVtOiBjc3NgXG4gICAgICBtaW4td2lkdGg6IG1pbigyMHJlbSwgNTAlKTtcbiAgICBgLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByb2xlPVwiZ3JvdXBcIiBjbGFzc05hbWU9e2NsYXNzZXN9IHsuLi5yZXN0fT5cbiAgICAgIDxFdWlGbGV4R3JvdXAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIgZ3V0dGVyU2l6ZT17Z3V0dGVyU2l6ZX0+XG4gICAgICAgIDxFdWlGbGV4SXRlbVxuICAgICAgICAgIGNzcz17W2V1aURlc2NyaWJlZEZvcm1Hcm91cFN0eWxlLmRlc2NyaXB0aW9uSXRlbV19XG4gICAgICAgICAgZ3Jvdz17MX1cbiAgICAgICAgICB7Li4uZGVzY3JpcHRpb25GbGV4SXRlbVByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPEV1aVRpdGxlIHNpemU9e3RpdGxlU2l6ZX0gY2xhc3NOYW1lPVwiZXVpRGVzY3JpYmVkRm9ybUdyb3VwX190aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvRXVpVGl0bGU+XG5cbiAgICAgICAgICB7cmVuZGVyZWREZXNjcmlwdGlvbn1cbiAgICAgICAgPC9FdWlGbGV4SXRlbT5cblxuICAgICAgICA8RXVpRmxleEl0ZW1cbiAgICAgICAgICBncm93PXtmaWVsZEdyb3d0aH1cbiAgICAgICAgICB7Li4uZmllbGRGbGV4SXRlbVByb3BzfVxuICAgICAgICAgIGNsYXNzTmFtZT17ZmllbGRDbGFzc2VzfVxuICAgICAgICA+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0V1aUZsZXhJdGVtPlxuICAgICAgPC9FdWlGbGV4R3JvdXA+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19 */",
                "name": "1odp4hc-descriptionItem",
                "styles": "min-width:min(20rem, 50%);label:descriptionItem;",
                "toString": [Function],
              },
              ";label:EuiDescribedFormGroup;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
            ]
          }
          grow={2}
        >
          <Noop />
          <EuiFlexItem
            className="css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            grow={2}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrow2 css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            >
              <EuiTitle
                className="euiDescribedFormGroup__title"
                size="xs"
              >
                <h3
                  className="euiTitle euiTitle--xsmall euiDescribedFormGroup__title"
                >
                  Title
                </h3>
              </EuiTitle>
              <EuiText
                className="euiDescribedFormGroup__description"
                color="subdued"
                size="s"
              >
                <div
                  className="euiText euiText--small euiDescribedFormGroup__description"
                >
                  <EuiTextColor
                    color="subdued"
                    component="div"
                  >
                    <div
                      className="euiTextColor euiTextColor--subdued"
                      style={Object {}}
                    >
                      <p>
                        Test description
                      </p>
                    </div>
                  </EuiTextColor>
                </div>
              </EuiText>
            </div>
          </EuiFlexItem>
        </EmotionCssPropInternal>
        <EuiFlexItem
          className="euiDescribedFormGroup__fields"
          component="section"
          grow={1}
        >
          <section
            className="euiFlexItem euiFlexItem--flexGrow1 euiDescribedFormGroup__fields"
          >
            <EuiFormRow
              describedByIds={Array []}
              display="row"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              labelType="label"
            >
              <div
                className="euiFormRow"
                id="generated-id-row"
              >
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <input
                    id="generated-id"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  />
                </div>
              </div>
            </EuiFormRow>
          </section>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </div>
</EuiDescribedFormGroup>
`;

exports[`EuiDescribedFormGroup props third is rendered 1`] = `
<EuiDescribedFormGroup
  description="Test description"
  ratio="third"
  title={
    <h3>
      Title
    </h3>
  }
>
  <div
    className="euiDescribedFormGroup"
    role="group"
  >
    <EuiFlexGroup
      alignItems="baseline"
      gutterSize="l"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--directionRow euiFlexGroup--responsive"
      >
        <EmotionCssPropInternal
          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="EuiDescribedFormGroup"
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
          css={
            Array [
              Object {
                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSXdCIiwiZmlsZSI6ImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZVxuICogMi4wIGFuZCB0aGUgU2VydmVyIFNpZGUgUHVibGljIExpY2Vuc2UsIHYgMTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHRcbiAqIGluIGNvbXBsaWFuY2Ugd2l0aCwgYXQgeW91ciBlbGVjdGlvbiwgdGhlIEVsYXN0aWMgTGljZW5zZSAyLjAgb3IgdGhlIFNlcnZlclxuICogU2lkZSBQdWJsaWMgTGljZW5zZSwgdiAxLlxuICovXG5cbmltcG9ydCBSZWFjdCwgeyBGdW5jdGlvbkNvbXBvbmVudCwgUmVhY3ROb2RlLCBIVE1MQXR0cmlidXRlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCB7IENvbW1vblByb3BzLCBQcm9wc09mIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcblxuaW1wb3J0IHsgRXVpVGl0bGUsIEV1aVRpdGxlU2l6ZSwgRXVpVGl0bGVQcm9wcyB9IGZyb20gJy4uLy4uL3RpdGxlJztcbmltcG9ydCB7IEV1aVRleHQgfSBmcm9tICcuLi8uLi90ZXh0JztcbmltcG9ydCB7XG4gIEV1aUZsZXhHcm91cCxcbiAgRXVpRmxleEl0ZW0sXG4gIEV1aUZsZXhHcm91cEd1dHRlclNpemUsXG4gIEV1aUZsZXhJdGVtUHJvcHMsXG59IGZyb20gJy4uLy4uL2ZsZXgnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG5leHBvcnQgdHlwZSBFdWlEZXNjcmliZWRGb3JtR3JvdXBQcm9wcyA9IENvbW1vblByb3BzICZcbiAgT21pdDxIVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sICd0aXRsZSc+ICYge1xuICAgIC8qKlxuICAgICAqIE9uZSBvciBtb3JlIGBFdWlGb3JtUm93YHMuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogUGFzc2VkIHRvIGBFdWlGbGV4R3JvdXBgLlxuICAgICAqL1xuICAgIGd1dHRlclNpemU/OiBFdWlGbGV4R3JvdXBHdXR0ZXJTaXplO1xuICAgIC8qKlxuICAgICAqIEV4cGFuZCB0byBmaWxsIDEwMCUgb2YgdGhlIHBhcmVudC5cbiAgICAgKiBEZWZhdWx0IG1heC13aWR0aCBpcyA4MDBweC5cbiAgICAgKi9cbiAgICBmdWxsV2lkdGg/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdpZHRoIHJhdGlvIG9mIGRlc2NyaXB0aW9uIGNvbHVtbiBjb21wYXJlZCB0byBmaWVsZCBjb2x1bW4uXG4gICAgICogQ2FuIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgZnVsbFdpZHRoYCBhbmRcbiAgICAgKiBtYXkgcmVxdWlyZSBgZnVsbFdpZHRoYCB0byBiZSBhcHBsaWVkIHRvIGNoaWxkIGVsZW1lbnRzLlxuICAgICAqL1xuICAgIHJhdGlvPzogJ2hhbGYnIHwgJ3RoaXJkJyB8ICdxdWFydGVyJztcbiAgICAvKipcbiAgICAgKiBGb3IgYmV0dGVyIGFjY2Vzc2liaWxpdHksIGl0J3MgcmVjb21tZW5kZWQgdG8gdXNlIGFuIEhUTUwgaGVhZGluZy5cbiAgICAgKi9cbiAgICB0aXRsZTogRXVpVGl0bGVQcm9wc1snY2hpbGRyZW4nXTtcbiAgICAvKipcbiAgICAgKiBBZGp1c3QgdGhlIHZpc3VhbCBgc2l6ZWAgb2YgdGhlIEV1aVRpdGxlIHRoYXQgd3JhcHMgYHRpdGxlYC5cbiAgICAgKi9cbiAgICB0aXRsZVNpemU/OiBFdWlUaXRsZVNpemU7XG4gICAgLyoqXG4gICAgICogQWRkZWQgYXMgYSBjaGlsZCBvZiBgRXVpVGV4dGAuXG4gICAgICovXG4gICAgZGVzY3JpcHRpb24/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBkZXNjcmlwdGlvbiBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBmaWVsZCBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBmaWVsZEZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gIH07XG5cbmV4cG9ydCBjb25zdCBFdWlEZXNjcmliZWRGb3JtR3JvdXA6IEZ1bmN0aW9uQ29tcG9uZW50PEV1aURlc2NyaWJlZEZvcm1Hcm91cFByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGd1dHRlclNpemUgPSAnbCcsXG4gIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICByYXRpbyA9ICdoYWxmJyxcbiAgdGl0bGVTaXplID0gJ3hzJyxcbiAgdGl0bGUsXG4gIGRlc2NyaXB0aW9uLFxuICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHMsXG4gIGZpZWxkRmxleEl0ZW1Qcm9wcyxcbiAgLi4ucmVzdFxufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcbiAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwJyxcbiAgICB7XG4gICAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwLS1mdWxsV2lkdGgnOiBmdWxsV2lkdGgsXG4gICAgfSxcbiAgICBjbGFzc05hbWVcbiAgKTtcblxuICBjb25zdCBmaWVsZENsYXNzZXMgPSBjbGFzc05hbWVzKFxuICAgICdldWlEZXNjcmliZWRGb3JtR3JvdXBfX2ZpZWxkcycsXG4gICAgZmllbGRGbGV4SXRlbVByb3BzICYmIGZpZWxkRmxleEl0ZW1Qcm9wcy5jbGFzc05hbWVcbiAgKTtcblxuICBsZXQgcmVuZGVyZWREZXNjcmlwdGlvbjogUmVhY3ROb2RlO1xuXG4gIGlmIChkZXNjcmlwdGlvbikge1xuICAgIC8vIElmIHRoZSBkZXNjcmlwdGlvbiBpcyBqdXN0IGEgc3RyaW5nLCB3cmFwIGl0IGluIGEgcGFyYWdyYXBoIGVsZW1lbnRcbiAgICBpZiAodHlwZW9mIGRlc2NyaXB0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgZGVzY3JpcHRpb24gPSA8cD57ZGVzY3JpcHRpb259PC9wPjtcbiAgICB9XG5cbiAgICByZW5kZXJlZERlc2NyaXB0aW9uID0gKFxuICAgICAgPEV1aVRleHRcbiAgICAgICAgc2l6ZT1cInNcIlxuICAgICAgICBjb2xvcj1cInN1YmR1ZWRcIlxuICAgICAgICBjbGFzc05hbWU9XCJldWlEZXNjcmliZWRGb3JtR3JvdXBfX2Rlc2NyaXB0aW9uXCJcbiAgICAgID5cbiAgICAgICAge2Rlc2NyaXB0aW9ufVxuICAgICAgPC9FdWlUZXh0PlxuICAgICk7XG4gIH1cblxuICBsZXQgZmllbGRHcm93dGg6IEV1aUZsZXhJdGVtUHJvcHNbJ2dyb3cnXTtcbiAgc3dpdGNoIChyYXRpbykge1xuICAgIGNhc2UgJ2hhbGYnOlxuICAgICAgZmllbGRHcm93dGggPSAxO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndGhpcmQnOlxuICAgICAgZmllbGRHcm93dGggPSAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncXVhcnRlcic6XG4gICAgICBmaWVsZEdyb3d0aCA9IDM7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS53YXJuKCdQbGVhc2UgcHJvdmlkZSBhbiBhbGxvd2VkIHJhdGlvIHRvIEV1aURlc2NyaWJlZEZyb21Sb3cnKTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgY29uc3QgZXVpRGVzY3JpYmVkRm9ybUdyb3VwU3R5bGUgPSB7XG4gICAgZGVzY3JpcHRpb25JdGVtOiBjc3NgXG4gICAgICBtaW4td2lkdGg6IG1pbigyMHJlbSwgNTAlKTtcbiAgICBgLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByb2xlPVwiZ3JvdXBcIiBjbGFzc05hbWU9e2NsYXNzZXN9IHsuLi5yZXN0fT5cbiAgICAgIDxFdWlGbGV4R3JvdXAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIgZ3V0dGVyU2l6ZT17Z3V0dGVyU2l6ZX0+XG4gICAgICAgIDxFdWlGbGV4SXRlbVxuICAgICAgICAgIGNzcz17W2V1aURlc2NyaWJlZEZvcm1Hcm91cFN0eWxlLmRlc2NyaXB0aW9uSXRlbV19XG4gICAgICAgICAgZ3Jvdz17MX1cbiAgICAgICAgICB7Li4uZGVzY3JpcHRpb25GbGV4SXRlbVByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPEV1aVRpdGxlIHNpemU9e3RpdGxlU2l6ZX0gY2xhc3NOYW1lPVwiZXVpRGVzY3JpYmVkRm9ybUdyb3VwX190aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvRXVpVGl0bGU+XG5cbiAgICAgICAgICB7cmVuZGVyZWREZXNjcmlwdGlvbn1cbiAgICAgICAgPC9FdWlGbGV4SXRlbT5cblxuICAgICAgICA8RXVpRmxleEl0ZW1cbiAgICAgICAgICBncm93PXtmaWVsZEdyb3d0aH1cbiAgICAgICAgICB7Li4uZmllbGRGbGV4SXRlbVByb3BzfVxuICAgICAgICAgIGNsYXNzTmFtZT17ZmllbGRDbGFzc2VzfVxuICAgICAgICA+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0V1aUZsZXhJdGVtPlxuICAgICAgPC9FdWlGbGV4R3JvdXA+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19 */",
                "name": "1odp4hc-descriptionItem",
                "styles": "min-width:min(20rem, 50%);label:descriptionItem;",
                "toString": [Function],
              },
              ";label:EuiDescribedFormGroup;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
            ]
          }
          grow={1}
        >
          <Noop />
          <EuiFlexItem
            className="css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            grow={1}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrow1 css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            >
              <EuiTitle
                className="euiDescribedFormGroup__title"
                size="xs"
              >
                <h3
                  className="euiTitle euiTitle--xsmall euiDescribedFormGroup__title"
                >
                  Title
                </h3>
              </EuiTitle>
              <EuiText
                className="euiDescribedFormGroup__description"
                color="subdued"
                size="s"
              >
                <div
                  className="euiText euiText--small euiDescribedFormGroup__description"
                >
                  <EuiTextColor
                    color="subdued"
                    component="div"
                  >
                    <div
                      className="euiTextColor euiTextColor--subdued"
                      style={Object {}}
                    >
                      <p>
                        Test description
                      </p>
                    </div>
                  </EuiTextColor>
                </div>
              </EuiText>
            </div>
          </EuiFlexItem>
        </EmotionCssPropInternal>
        <EuiFlexItem
          className="euiDescribedFormGroup__fields"
          grow={2}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrow2 euiDescribedFormGroup__fields"
          >
            <EuiFormRow
              describedByIds={Array []}
              display="row"
              fullWidth={true}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              labelType="label"
            >
              <div
                className="euiFormRow euiFormRow--fullWidth"
                id="generated-id-row"
              >
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <input
                    id="generated-id"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  />
                </div>
              </div>
            </EuiFormRow>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </div>
</EuiDescribedFormGroup>
`;

exports[`EuiDescribedFormGroup props titleSize is rendered 1`] = `
<EuiDescribedFormGroup
  description="Test description"
  title={
    <h3>
      Title
    </h3>
  }
  titleSize="l"
>
  <div
    className="euiDescribedFormGroup"
    role="group"
  >
    <EuiFlexGroup
      alignItems="baseline"
      gutterSize="l"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--directionRow euiFlexGroup--responsive"
      >
        <EmotionCssPropInternal
          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="EuiDescribedFormGroup"
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
          css={
            Array [
              Object {
                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSXdCIiwiZmlsZSI6ImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZVxuICogMi4wIGFuZCB0aGUgU2VydmVyIFNpZGUgUHVibGljIExpY2Vuc2UsIHYgMTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHRcbiAqIGluIGNvbXBsaWFuY2Ugd2l0aCwgYXQgeW91ciBlbGVjdGlvbiwgdGhlIEVsYXN0aWMgTGljZW5zZSAyLjAgb3IgdGhlIFNlcnZlclxuICogU2lkZSBQdWJsaWMgTGljZW5zZSwgdiAxLlxuICovXG5cbmltcG9ydCBSZWFjdCwgeyBGdW5jdGlvbkNvbXBvbmVudCwgUmVhY3ROb2RlLCBIVE1MQXR0cmlidXRlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCB7IENvbW1vblByb3BzLCBQcm9wc09mIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcblxuaW1wb3J0IHsgRXVpVGl0bGUsIEV1aVRpdGxlU2l6ZSwgRXVpVGl0bGVQcm9wcyB9IGZyb20gJy4uLy4uL3RpdGxlJztcbmltcG9ydCB7IEV1aVRleHQgfSBmcm9tICcuLi8uLi90ZXh0JztcbmltcG9ydCB7XG4gIEV1aUZsZXhHcm91cCxcbiAgRXVpRmxleEl0ZW0sXG4gIEV1aUZsZXhHcm91cEd1dHRlclNpemUsXG4gIEV1aUZsZXhJdGVtUHJvcHMsXG59IGZyb20gJy4uLy4uL2ZsZXgnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG5leHBvcnQgdHlwZSBFdWlEZXNjcmliZWRGb3JtR3JvdXBQcm9wcyA9IENvbW1vblByb3BzICZcbiAgT21pdDxIVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sICd0aXRsZSc+ICYge1xuICAgIC8qKlxuICAgICAqIE9uZSBvciBtb3JlIGBFdWlGb3JtUm93YHMuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogUGFzc2VkIHRvIGBFdWlGbGV4R3JvdXBgLlxuICAgICAqL1xuICAgIGd1dHRlclNpemU/OiBFdWlGbGV4R3JvdXBHdXR0ZXJTaXplO1xuICAgIC8qKlxuICAgICAqIEV4cGFuZCB0byBmaWxsIDEwMCUgb2YgdGhlIHBhcmVudC5cbiAgICAgKiBEZWZhdWx0IG1heC13aWR0aCBpcyA4MDBweC5cbiAgICAgKi9cbiAgICBmdWxsV2lkdGg/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdpZHRoIHJhdGlvIG9mIGRlc2NyaXB0aW9uIGNvbHVtbiBjb21wYXJlZCB0byBmaWVsZCBjb2x1bW4uXG4gICAgICogQ2FuIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgZnVsbFdpZHRoYCBhbmRcbiAgICAgKiBtYXkgcmVxdWlyZSBgZnVsbFdpZHRoYCB0byBiZSBhcHBsaWVkIHRvIGNoaWxkIGVsZW1lbnRzLlxuICAgICAqL1xuICAgIHJhdGlvPzogJ2hhbGYnIHwgJ3RoaXJkJyB8ICdxdWFydGVyJztcbiAgICAvKipcbiAgICAgKiBGb3IgYmV0dGVyIGFjY2Vzc2liaWxpdHksIGl0J3MgcmVjb21tZW5kZWQgdG8gdXNlIGFuIEhUTUwgaGVhZGluZy5cbiAgICAgKi9cbiAgICB0aXRsZTogRXVpVGl0bGVQcm9wc1snY2hpbGRyZW4nXTtcbiAgICAvKipcbiAgICAgKiBBZGp1c3QgdGhlIHZpc3VhbCBgc2l6ZWAgb2YgdGhlIEV1aVRpdGxlIHRoYXQgd3JhcHMgYHRpdGxlYC5cbiAgICAgKi9cbiAgICB0aXRsZVNpemU/OiBFdWlUaXRsZVNpemU7XG4gICAgLyoqXG4gICAgICogQWRkZWQgYXMgYSBjaGlsZCBvZiBgRXVpVGV4dGAuXG4gICAgICovXG4gICAgZGVzY3JpcHRpb24/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBkZXNjcmlwdGlvbiBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBmaWVsZCBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBmaWVsZEZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gIH07XG5cbmV4cG9ydCBjb25zdCBFdWlEZXNjcmliZWRGb3JtR3JvdXA6IEZ1bmN0aW9uQ29tcG9uZW50PEV1aURlc2NyaWJlZEZvcm1Hcm91cFByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGd1dHRlclNpemUgPSAnbCcsXG4gIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICByYXRpbyA9ICdoYWxmJyxcbiAgdGl0bGVTaXplID0gJ3hzJyxcbiAgdGl0bGUsXG4gIGRlc2NyaXB0aW9uLFxuICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHMsXG4gIGZpZWxkRmxleEl0ZW1Qcm9wcyxcbiAgLi4ucmVzdFxufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcbiAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwJyxcbiAgICB7XG4gICAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwLS1mdWxsV2lkdGgnOiBmdWxsV2lkdGgsXG4gICAgfSxcbiAgICBjbGFzc05hbWVcbiAgKTtcblxuICBjb25zdCBmaWVsZENsYXNzZXMgPSBjbGFzc05hbWVzKFxuICAgICdldWlEZXNjcmliZWRGb3JtR3JvdXBfX2ZpZWxkcycsXG4gICAgZmllbGRGbGV4SXRlbVByb3BzICYmIGZpZWxkRmxleEl0ZW1Qcm9wcy5jbGFzc05hbWVcbiAgKTtcblxuICBsZXQgcmVuZGVyZWREZXNjcmlwdGlvbjogUmVhY3ROb2RlO1xuXG4gIGlmIChkZXNjcmlwdGlvbikge1xuICAgIC8vIElmIHRoZSBkZXNjcmlwdGlvbiBpcyBqdXN0IGEgc3RyaW5nLCB3cmFwIGl0IGluIGEgcGFyYWdyYXBoIGVsZW1lbnRcbiAgICBpZiAodHlwZW9mIGRlc2NyaXB0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgZGVzY3JpcHRpb24gPSA8cD57ZGVzY3JpcHRpb259PC9wPjtcbiAgICB9XG5cbiAgICByZW5kZXJlZERlc2NyaXB0aW9uID0gKFxuICAgICAgPEV1aVRleHRcbiAgICAgICAgc2l6ZT1cInNcIlxuICAgICAgICBjb2xvcj1cInN1YmR1ZWRcIlxuICAgICAgICBjbGFzc05hbWU9XCJldWlEZXNjcmliZWRGb3JtR3JvdXBfX2Rlc2NyaXB0aW9uXCJcbiAgICAgID5cbiAgICAgICAge2Rlc2NyaXB0aW9ufVxuICAgICAgPC9FdWlUZXh0PlxuICAgICk7XG4gIH1cblxuICBsZXQgZmllbGRHcm93dGg6IEV1aUZsZXhJdGVtUHJvcHNbJ2dyb3cnXTtcbiAgc3dpdGNoIChyYXRpbykge1xuICAgIGNhc2UgJ2hhbGYnOlxuICAgICAgZmllbGRHcm93dGggPSAxO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndGhpcmQnOlxuICAgICAgZmllbGRHcm93dGggPSAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncXVhcnRlcic6XG4gICAgICBmaWVsZEdyb3d0aCA9IDM7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS53YXJuKCdQbGVhc2UgcHJvdmlkZSBhbiBhbGxvd2VkIHJhdGlvIHRvIEV1aURlc2NyaWJlZEZyb21Sb3cnKTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgY29uc3QgZXVpRGVzY3JpYmVkRm9ybUdyb3VwU3R5bGUgPSB7XG4gICAgZGVzY3JpcHRpb25JdGVtOiBjc3NgXG4gICAgICBtaW4td2lkdGg6IG1pbigyMHJlbSwgNTAlKTtcbiAgICBgLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByb2xlPVwiZ3JvdXBcIiBjbGFzc05hbWU9e2NsYXNzZXN9IHsuLi5yZXN0fT5cbiAgICAgIDxFdWlGbGV4R3JvdXAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIgZ3V0dGVyU2l6ZT17Z3V0dGVyU2l6ZX0+XG4gICAgICAgIDxFdWlGbGV4SXRlbVxuICAgICAgICAgIGNzcz17W2V1aURlc2NyaWJlZEZvcm1Hcm91cFN0eWxlLmRlc2NyaXB0aW9uSXRlbV19XG4gICAgICAgICAgZ3Jvdz17MX1cbiAgICAgICAgICB7Li4uZGVzY3JpcHRpb25GbGV4SXRlbVByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPEV1aVRpdGxlIHNpemU9e3RpdGxlU2l6ZX0gY2xhc3NOYW1lPVwiZXVpRGVzY3JpYmVkRm9ybUdyb3VwX190aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvRXVpVGl0bGU+XG5cbiAgICAgICAgICB7cmVuZGVyZWREZXNjcmlwdGlvbn1cbiAgICAgICAgPC9FdWlGbGV4SXRlbT5cblxuICAgICAgICA8RXVpRmxleEl0ZW1cbiAgICAgICAgICBncm93PXtmaWVsZEdyb3d0aH1cbiAgICAgICAgICB7Li4uZmllbGRGbGV4SXRlbVByb3BzfVxuICAgICAgICAgIGNsYXNzTmFtZT17ZmllbGRDbGFzc2VzfVxuICAgICAgICA+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0V1aUZsZXhJdGVtPlxuICAgICAgPC9FdWlGbGV4R3JvdXA+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19 */",
                "name": "1odp4hc-descriptionItem",
                "styles": "min-width:min(20rem, 50%);label:descriptionItem;",
                "toString": [Function],
              },
              ";label:EuiDescribedFormGroup;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
            ]
          }
          grow={1}
        >
          <Noop />
          <EuiFlexItem
            className="css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            grow={1}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrow1 css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            >
              <EuiTitle
                className="euiDescribedFormGroup__title"
                size="l"
              >
                <h3
                  className="euiTitle euiTitle--large euiDescribedFormGroup__title"
                >
                  Title
                </h3>
              </EuiTitle>
              <EuiText
                className="euiDescribedFormGroup__description"
                color="subdued"
                size="s"
              >
                <div
                  className="euiText euiText--small euiDescribedFormGroup__description"
                >
                  <EuiTextColor
                    color="subdued"
                    component="div"
                  >
                    <div
                      className="euiTextColor euiTextColor--subdued"
                      style={Object {}}
                    >
                      <p>
                        Test description
                      </p>
                    </div>
                  </EuiTextColor>
                </div>
              </EuiText>
            </div>
          </EuiFlexItem>
        </EmotionCssPropInternal>
        <EuiFlexItem
          className="euiDescribedFormGroup__fields"
          grow={1}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrow1 euiDescribedFormGroup__fields"
          >
            <EuiFormRow
              describedByIds={Array []}
              display="row"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              labelType="label"
            >
              <div
                className="euiFormRow"
                id="generated-id-row"
              >
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <input
                    id="generated-id"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  />
                </div>
              </div>
            </EuiFormRow>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </div>
</EuiDescribedFormGroup>
`;

exports[`EuiDescribedFormGroup ties together parts for accessibility 1`] = `
<EuiDescribedFormGroup
  description="Test description"
  title={
    <h3>
      Title
    </h3>
  }
>
  <div
    className="euiDescribedFormGroup"
    role="group"
  >
    <EuiFlexGroup
      alignItems="baseline"
      gutterSize="l"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--directionRow euiFlexGroup--responsive"
      >
        <EmotionCssPropInternal
          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="EuiDescribedFormGroup"
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
          css={
            Array [
              Object {
                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSXdCIiwiZmlsZSI6ImRlc2NyaWJlZF9mb3JtX2dyb3VwLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZVxuICogMi4wIGFuZCB0aGUgU2VydmVyIFNpZGUgUHVibGljIExpY2Vuc2UsIHYgMTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHRcbiAqIGluIGNvbXBsaWFuY2Ugd2l0aCwgYXQgeW91ciBlbGVjdGlvbiwgdGhlIEVsYXN0aWMgTGljZW5zZSAyLjAgb3IgdGhlIFNlcnZlclxuICogU2lkZSBQdWJsaWMgTGljZW5zZSwgdiAxLlxuICovXG5cbmltcG9ydCBSZWFjdCwgeyBGdW5jdGlvbkNvbXBvbmVudCwgUmVhY3ROb2RlLCBIVE1MQXR0cmlidXRlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCB7IENvbW1vblByb3BzLCBQcm9wc09mIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcblxuaW1wb3J0IHsgRXVpVGl0bGUsIEV1aVRpdGxlU2l6ZSwgRXVpVGl0bGVQcm9wcyB9IGZyb20gJy4uLy4uL3RpdGxlJztcbmltcG9ydCB7IEV1aVRleHQgfSBmcm9tICcuLi8uLi90ZXh0JztcbmltcG9ydCB7XG4gIEV1aUZsZXhHcm91cCxcbiAgRXVpRmxleEl0ZW0sXG4gIEV1aUZsZXhHcm91cEd1dHRlclNpemUsXG4gIEV1aUZsZXhJdGVtUHJvcHMsXG59IGZyb20gJy4uLy4uL2ZsZXgnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG5leHBvcnQgdHlwZSBFdWlEZXNjcmliZWRGb3JtR3JvdXBQcm9wcyA9IENvbW1vblByb3BzICZcbiAgT21pdDxIVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sICd0aXRsZSc+ICYge1xuICAgIC8qKlxuICAgICAqIE9uZSBvciBtb3JlIGBFdWlGb3JtUm93YHMuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogUGFzc2VkIHRvIGBFdWlGbGV4R3JvdXBgLlxuICAgICAqL1xuICAgIGd1dHRlclNpemU/OiBFdWlGbGV4R3JvdXBHdXR0ZXJTaXplO1xuICAgIC8qKlxuICAgICAqIEV4cGFuZCB0byBmaWxsIDEwMCUgb2YgdGhlIHBhcmVudC5cbiAgICAgKiBEZWZhdWx0IG1heC13aWR0aCBpcyA4MDBweC5cbiAgICAgKi9cbiAgICBmdWxsV2lkdGg/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdpZHRoIHJhdGlvIG9mIGRlc2NyaXB0aW9uIGNvbHVtbiBjb21wYXJlZCB0byBmaWVsZCBjb2x1bW4uXG4gICAgICogQ2FuIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgZnVsbFdpZHRoYCBhbmRcbiAgICAgKiBtYXkgcmVxdWlyZSBgZnVsbFdpZHRoYCB0byBiZSBhcHBsaWVkIHRvIGNoaWxkIGVsZW1lbnRzLlxuICAgICAqL1xuICAgIHJhdGlvPzogJ2hhbGYnIHwgJ3RoaXJkJyB8ICdxdWFydGVyJztcbiAgICAvKipcbiAgICAgKiBGb3IgYmV0dGVyIGFjY2Vzc2liaWxpdHksIGl0J3MgcmVjb21tZW5kZWQgdG8gdXNlIGFuIEhUTUwgaGVhZGluZy5cbiAgICAgKi9cbiAgICB0aXRsZTogRXVpVGl0bGVQcm9wc1snY2hpbGRyZW4nXTtcbiAgICAvKipcbiAgICAgKiBBZGp1c3QgdGhlIHZpc3VhbCBgc2l6ZWAgb2YgdGhlIEV1aVRpdGxlIHRoYXQgd3JhcHMgYHRpdGxlYC5cbiAgICAgKi9cbiAgICB0aXRsZVNpemU/OiBFdWlUaXRsZVNpemU7XG4gICAgLyoqXG4gICAgICogQWRkZWQgYXMgYSBjaGlsZCBvZiBgRXVpVGV4dGAuXG4gICAgICovXG4gICAgZGVzY3JpcHRpb24/OiBSZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBkZXNjcmlwdGlvbiBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gICAgLyoqXG4gICAgICogRm9yIGN1c3RvbWl6aW5nIHRoZSBmaWVsZCBjb250YWluZXIuIEV4dGVuZGVkIGZyb20gYEV1aUZsZXhJdGVtYC5cbiAgICAgKi9cbiAgICBmaWVsZEZsZXhJdGVtUHJvcHM/OiBQcm9wc09mPHR5cGVvZiBFdWlGbGV4SXRlbT47XG4gIH07XG5cbmV4cG9ydCBjb25zdCBFdWlEZXNjcmliZWRGb3JtR3JvdXA6IEZ1bmN0aW9uQ29tcG9uZW50PEV1aURlc2NyaWJlZEZvcm1Hcm91cFByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUsXG4gIGd1dHRlclNpemUgPSAnbCcsXG4gIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICByYXRpbyA9ICdoYWxmJyxcbiAgdGl0bGVTaXplID0gJ3hzJyxcbiAgdGl0bGUsXG4gIGRlc2NyaXB0aW9uLFxuICBkZXNjcmlwdGlvbkZsZXhJdGVtUHJvcHMsXG4gIGZpZWxkRmxleEl0ZW1Qcm9wcyxcbiAgLi4ucmVzdFxufSkgPT4ge1xuICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyhcbiAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwJyxcbiAgICB7XG4gICAgICAnZXVpRGVzY3JpYmVkRm9ybUdyb3VwLS1mdWxsV2lkdGgnOiBmdWxsV2lkdGgsXG4gICAgfSxcbiAgICBjbGFzc05hbWVcbiAgKTtcblxuICBjb25zdCBmaWVsZENsYXNzZXMgPSBjbGFzc05hbWVzKFxuICAgICdldWlEZXNjcmliZWRGb3JtR3JvdXBfX2ZpZWxkcycsXG4gICAgZmllbGRGbGV4SXRlbVByb3BzICYmIGZpZWxkRmxleEl0ZW1Qcm9wcy5jbGFzc05hbWVcbiAgKTtcblxuICBsZXQgcmVuZGVyZWREZXNjcmlwdGlvbjogUmVhY3ROb2RlO1xuXG4gIGlmIChkZXNjcmlwdGlvbikge1xuICAgIC8vIElmIHRoZSBkZXNjcmlwdGlvbiBpcyBqdXN0IGEgc3RyaW5nLCB3cmFwIGl0IGluIGEgcGFyYWdyYXBoIGVsZW1lbnRcbiAgICBpZiAodHlwZW9mIGRlc2NyaXB0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgZGVzY3JpcHRpb24gPSA8cD57ZGVzY3JpcHRpb259PC9wPjtcbiAgICB9XG5cbiAgICByZW5kZXJlZERlc2NyaXB0aW9uID0gKFxuICAgICAgPEV1aVRleHRcbiAgICAgICAgc2l6ZT1cInNcIlxuICAgICAgICBjb2xvcj1cInN1YmR1ZWRcIlxuICAgICAgICBjbGFzc05hbWU9XCJldWlEZXNjcmliZWRGb3JtR3JvdXBfX2Rlc2NyaXB0aW9uXCJcbiAgICAgID5cbiAgICAgICAge2Rlc2NyaXB0aW9ufVxuICAgICAgPC9FdWlUZXh0PlxuICAgICk7XG4gIH1cblxuICBsZXQgZmllbGRHcm93dGg6IEV1aUZsZXhJdGVtUHJvcHNbJ2dyb3cnXTtcbiAgc3dpdGNoIChyYXRpbykge1xuICAgIGNhc2UgJ2hhbGYnOlxuICAgICAgZmllbGRHcm93dGggPSAxO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndGhpcmQnOlxuICAgICAgZmllbGRHcm93dGggPSAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncXVhcnRlcic6XG4gICAgICBmaWVsZEdyb3d0aCA9IDM7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS53YXJuKCdQbGVhc2UgcHJvdmlkZSBhbiBhbGxvd2VkIHJhdGlvIHRvIEV1aURlc2NyaWJlZEZyb21Sb3cnKTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgY29uc3QgZXVpRGVzY3JpYmVkRm9ybUdyb3VwU3R5bGUgPSB7XG4gICAgZGVzY3JpcHRpb25JdGVtOiBjc3NgXG4gICAgICBtaW4td2lkdGg6IG1pbigyMHJlbSwgNTAlKTtcbiAgICBgLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByb2xlPVwiZ3JvdXBcIiBjbGFzc05hbWU9e2NsYXNzZXN9IHsuLi5yZXN0fT5cbiAgICAgIDxFdWlGbGV4R3JvdXAgYWxpZ25JdGVtcz1cImJhc2VsaW5lXCIgZ3V0dGVyU2l6ZT17Z3V0dGVyU2l6ZX0+XG4gICAgICAgIDxFdWlGbGV4SXRlbVxuICAgICAgICAgIGNzcz17W2V1aURlc2NyaWJlZEZvcm1Hcm91cFN0eWxlLmRlc2NyaXB0aW9uSXRlbV19XG4gICAgICAgICAgZ3Jvdz17MX1cbiAgICAgICAgICB7Li4uZGVzY3JpcHRpb25GbGV4SXRlbVByb3BzfVxuICAgICAgICA+XG4gICAgICAgICAgPEV1aVRpdGxlIHNpemU9e3RpdGxlU2l6ZX0gY2xhc3NOYW1lPVwiZXVpRGVzY3JpYmVkRm9ybUdyb3VwX190aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvRXVpVGl0bGU+XG5cbiAgICAgICAgICB7cmVuZGVyZWREZXNjcmlwdGlvbn1cbiAgICAgICAgPC9FdWlGbGV4SXRlbT5cblxuICAgICAgICA8RXVpRmxleEl0ZW1cbiAgICAgICAgICBncm93PXtmaWVsZEdyb3d0aH1cbiAgICAgICAgICB7Li4uZmllbGRGbGV4SXRlbVByb3BzfVxuICAgICAgICAgIGNsYXNzTmFtZT17ZmllbGRDbGFzc2VzfVxuICAgICAgICA+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0V1aUZsZXhJdGVtPlxuICAgICAgPC9FdWlGbGV4R3JvdXA+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19 */",
                "name": "1odp4hc-descriptionItem",
                "styles": "min-width:min(20rem, 50%);label:descriptionItem;",
                "toString": [Function],
              },
              ";label:EuiDescribedFormGroup;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
            ]
          }
          grow={1}
        >
          <Noop />
          <EuiFlexItem
            className="css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            grow={1}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrow1 css-wgncb6-descriptionItem-EuiDescribedFormGroup"
            >
              <EuiTitle
                className="euiDescribedFormGroup__title"
                size="xs"
              >
                <h3
                  className="euiTitle euiTitle--xsmall euiDescribedFormGroup__title"
                >
                  Title
                </h3>
              </EuiTitle>
              <EuiText
                className="euiDescribedFormGroup__description"
                color="subdued"
                size="s"
              >
                <div
                  className="euiText euiText--small euiDescribedFormGroup__description"
                >
                  <EuiTextColor
                    color="subdued"
                    component="div"
                  >
                    <div
                      className="euiTextColor euiTextColor--subdued"
                      style={Object {}}
                    >
                      <p>
                        Test description
                      </p>
                    </div>
                  </EuiTextColor>
                </div>
              </EuiText>
            </div>
          </EuiFlexItem>
        </EmotionCssPropInternal>
        <EuiFlexItem
          className="euiDescribedFormGroup__fields"
          grow={1}
        >
          <div
            className="euiFlexItem euiFlexItem--flexGrow1 euiDescribedFormGroup__fields"
          >
            <EuiFormRow
              describedByIds={Array []}
              display="row"
              error={
                Array [
                  "Error one",
                  "Error two",
                ]
              }
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              helpText="Help text"
              isInvalid={true}
              label="Label"
              labelType="label"
            >
              <div
                className="euiFormRow euiFormRow--hasLabel"
                id="generated-id-row"
              >
                <div
                  className="euiFormRow__labelWrapper"
                >
                  <EuiFormLabel
                    aria-invalid={true}
                    className="euiFormRow__label"
                    htmlFor="generated-id"
                    id="generated-id-label"
                    isFocused={false}
                    isInvalid={true}
                    type="label"
                  >
                    <label
                      aria-invalid={true}
                      className="euiFormLabel euiFormRow__label euiFormLabel-isInvalid"
                      htmlFor="generated-id"
                      id="generated-id-label"
                    >
                      Label
                    </label>
                  </EuiFormLabel>
                </div>
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <input
                    aria-describedby="generated-id-help-0 generated-id-error-0 generated-id-error-1"
                    id="generated-id"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  />
                  <EuiFormErrorText
                    className="euiFormRow__text"
                    id="generated-id-error-0"
                    key="Error one"
                  >
                    <div
                      aria-live="polite"
                      className="euiFormErrorText euiFormRow__text"
                      id="generated-id-error-0"
                    >
                      Error one
                    </div>
                  </EuiFormErrorText>
                  <EuiFormErrorText
                    className="euiFormRow__text"
                    id="generated-id-error-1"
                    key="Error two"
                  >
                    <div
                      aria-live="polite"
                      className="euiFormErrorText euiFormRow__text"
                      id="generated-id-error-1"
                    >
                      Error two
                    </div>
                  </EuiFormErrorText>
                  <EuiFormHelpText
                    className="euiFormRow__text"
                    id="generated-id-help-0"
                    key="Help text"
                  >
                    <div
                      className="euiFormHelpText euiFormRow__text"
                      id="generated-id-help-0"
                    >
                      Help text
                    </div>
                  </EuiFormHelpText>
                </div>
              </div>
            </EuiFormRow>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </div>
</EuiDescribedFormGroup>
`;
