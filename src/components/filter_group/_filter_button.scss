@import '../form/variables';
@import '../form/mixins';

/**
 * 1. Only add the border style drop shadow
 */

.euiFilterButton {
  flex-grow: 0; // Shrink by default

  .euiFilterButton__content {
    @include euiFormControlStyle();
    width: auto;
    max-width: none;
    box-shadow: inset 0 0 0 1px $euiFormBorderColor; /* 1 */
  }

  &:focus .euiFilterButton__content {
    @include euiFormControlFocusStyle;
    background-color: $euiFormBackgroundColor;
    box-shadow: inset 0 0 0 1px $euiFormBorderColor; /* 1 */
  }

  &:disabled .euiFilterButton__content {
    @include euiFormControlDisabledStyle;
    box-shadow: inset 0 0 0 1px $euiFormBorderColor--disabled; /* 1 */
    font-style: italic;
  }

  .euiFilterButton__textShift {
    display: inline-block;
    text-align: center;
    vertical-align: middle;

    &::after {
      display: block;
      content: attr(data-text);
      font-weight: $euiFontWeightBold;
      height: 0;
      overflow: hidden;
      visibility: hidden;
    }
  }

  .euiFilterButton__notification {
    margin-left: $euiSizeS;
    vertical-align: text-bottom;
  }

  &.euiFilterButton-isSelected,
  &:hover:not(:disabled) {
    .euiFilterButton__textShift {
      text-decoration: underline;
    }
  }

  &.euiFilterButton-grow {
    flex-grow: 1;
    width: 100%;

    .euiFilterButton__content {
      width: 100%;
      text-align: left;
    }
  }

  &.euiFilterButton-hasActiveFilters {
    font-weight: $euiFontWeightBold;
  }
}

// Modifier naming and colors.
$buttonTypes: (
  primary: $euiColorPrimary,
  danger: $euiColorDanger,
  disabled: tintOrShade($euiTextColor, 70%, 80%),
  ghost: $euiColorGhost,
  text: $euiTextColor,
);

// Create button modifiders based upon the map.
@each $name, $color in $buttonTypes {
  .euiFilterButton--#{$name} {
    color: $color;
  }
}
