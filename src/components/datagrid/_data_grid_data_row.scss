.euiDataGridRow {
  background-color: $euiColorEmptyShade;
}

@include euiDataGridRowCell {
  position: relative; // Needed for .euiDataGridRowCell__actions
  border-right: $euiDataGridVerticalBorder;
  border-bottom: $euiBorderThin;

  .euiDataGridRowCell__content {
    @include euiFontSizeS;
    padding: $euiDataGridCellPaddingM;
    height: 100%;
    overflow: hidden;

    &--autoHeight {
      height: auto;
    }
  }

  // Hack to allow focus trap to still stretch to full row height on defined heights
  > [data-focus-lock-disabled] {
    height: 100%;
  }

  &.euiDataGridRowCell--firstColumn {
    border-left: $euiBorderThin;
  }

  &.euiDataGridRowCell--lastColumn {
    border-right-color: $euiBorderColor;
  }

  &:focus {
    position: relative;
    @include euiDataGridCellFocus;
  }

  // Only add the transition effect on hover, so that it is instantaneous on focus
  // Long delays on hover to mitigate the accordion effect
  &:hover {
    .euiDataGridRowCell__actionButtonIcon {
      animation-duration: $euiAnimSpeedExtraFast;
      animation-name: euiDataGridCellActionsSlideIn;
      animation-iteration-count: 1;
      animation-delay: $euiAnimSpeedNormal;
      animation-fill-mode: forwards;
    }
  }

  // On focus, directly show action buttons (without animation)
  &:focus,
  // Prevent the animation from flickering after cell popover close when focus is restored the expansion button
  &:focus-within,
  // Always make the cell actions visible when the cell popover is open
  &.euiDataGridRowCell--open {
    .euiDataGridRowCell__actionButtonIcon {
      animation: none;
      margin-left: $euiDataGridCellPaddingM;
      width: $euiSizeM;
    }
  }

  // if a cell is not hovered nor focused nor open via popover, don't show buttons in general
  &:not(:hover):not(:focus):not(.euiDataGridRowCell--open) {
    .euiDataGridRowCell__actions {
      display: none;
    }
  }

  &.euiDataGridRowCell--numeric {
    text-align: right;
  }

  &.euiDataGridRowCell--currency {
    text-align: right;
  }

  &.euiDataGridRowCell--uppercase {
    text-transform: uppercase;
  }

  &.euiDataGridRowCell--lowercase {
    text-transform: lowercase;
  }

  &.euiDataGridRowCell--capitalize {
    text-transform: capitalize;
  }
}

.euiDataGridRowCell__popover {
  @include euiScrollBar;
  overflow: auto;
  // stylelint-disable declaration-no-important
  max-width: 400px !important;
  max-height: 400px !important;
  z-index: $euiZDataGridCellPopover !important;
  // stylelint-enable declaration-no-important
  // Workaround for a Safari CSS bug when using both `overflow: auto` & `filter: drop-shadow`
  // (see https://github.com/elastic/eui/issues/6151)
  // Disables the default EuiPopover filter drop-shadow and uses box-shadow instead,
  // since we don't use the popover arrow in any case for cell popovers
  filter: none;
  @include euiBottomShadow; // TODO: Convert to euiShadowMedium() in Emotion
}

.euiDataGridRowCell--controlColumn .euiDataGridRowCell__content {
  max-height: 100%;
  height: auto;
  display: flex;
  align-items: center;
}

// Cell actions
.euiDataGridRowCell__actions {
  z-index: $euiZDataGridCellPopover;
  position: absolute;
  left: 0;
  bottom: 100%;
  margin-bottom: -$euiBorderWidthThin; // Vertical alignment
  display: flex;
  gap: $euiSizeXS / 2;
  padding-inline: $euiSizeXS / 2;
  background-color: $euiColorPrimary;
  color: $euiColorEmptyShade;
  border: $euiBorderWidthThin solid $euiColorPrimary;
  border-top-left-radius: $euiBorderRadius / 2;
  border-top-right-radius: $euiBorderRadius / 2;

  .euiDataGridRowCell--numeric &,
  .euiDataGridRowCell--currency & {
    left: auto;
    right: 0;
  }
}

.euiDataGridRowCell__actionButtonIcon {
  height: $euiSize + $euiSizeXS;
  width: $euiSize;
  border-radius: 0;

  /* Force all cell action buttons to match EUI colors */
  &,
  svg {
    // stylelint-disable declaration-no-important
    background-color: transparent !important;
    color: currentColor !important;
    fill: currentColor !important;
    // stylelint-enable declaration-no-important
  }

  /* Manually increase the size of the expand cell icon - it's a bit small by default */
  &.euiDataGridRowCell__expandCell .euiIcon {
    width: 120%;
    height: 100%;
  }
}

// Row stripes
@include euiDataGridStyles(stripes) {
  .euiDataGridRow--striped {
    background-color: $euiColorLightestShade;
  }
}

// Row highlights
@include euiDataGridStyles(rowHoverHighlight) {
  .euiDataGridRow:hover {
    background-color: $euiColorHighlight;
  }
}

// Border alternates
@include euiDataGridStyles(bordersNone) {
  @include euiDataGridRowCell {
    border-color: transparent !important; // stylelint-disable-line declaration-no-important
  }
}

@include euiDataGridStyles(bordersHorizontal) {
  @include euiDataGridRowCell {
    border-right-color: transparent;
    border-left-color: transparent;
  }
}

// Font alternates
@include euiDataGridStyles(fontSizeSmall) {
  @include euiDataGridRowCell {
    .euiDataGridRowCell__content {
      @include euiFontSizeXS;
    }
  }
}

@include euiDataGridStyles(fontSizeLarge) {
  @include euiDataGridRowCell {
    .euiDataGridRowCell__content {
      @include euiFontSize;
    }
  }
}

// Padding alternates
@include euiDataGridStyles(paddingSmall) {
  @include euiDataGridRowCell {
    .euiDataGridRowCell__content {
      padding: $euiDataGridCellPaddingS;
    }
  }
}

@include euiDataGridStyles(paddingLarge) {
  @include euiDataGridRowCell {
    .euiDataGridRowCell__content {
      padding: $euiDataGridCellPaddingL;
    }
  }
}

@keyframes euiDataGridCellActionsSlideIn {
  from {
    margin-left: 0;
    width: 0;
  }

  to {
    margin-left: $euiDataGridCellPaddingM;
    width: $euiSizeM;
  }
}
