# This action updates the "Closed Date" field on items in the EUI project when their status is set to "Done".
#
# It runs every hour, but can also be triggered manually from the Actions tab.
# 

name: Add closed date to Done issues

on:
  push:
    branches:
      - JasonStoltz-closed-date
  schedule:
    - cron: "0 * * * *"  # runs every hour
  workflow_dispatch:      # allows manual triggering from the Actions tab

jobs:
  set-closed-dates:
    runs-on: ubuntu-latest
    env:
      GH_PAT: ${{ secrets.EUI_PROJECTS }}
    steps:
      - name: Set Closed Dates
        uses: actions/github-script@v7
        with:
          script: |
            const { Octokit } = require("@octokit/core");
            const github = new Octokit({ auth: process.env.GH_PAT });
            
            const projectId = 'PVT_kwDOAGc3Zs4AIkji';
            const closedDateFieldId = 'PVTF_lADOAGc3Zs4AIkjizgq6ywg';
            const statusFieldId = 'PVTSSF_lADOAGc3Zs4AIkjizgFVX3s';
            const doneStatusValueId = '98236657';


            const closedDate = new Date().toISOString().split('T')[0];
            const allItems = [];
            let hasNextPage = true;
            let endCursor = null;

            while (hasNextPage) {
              const response = await github.graphql(`
              query($projectId: ID!, $after: String) {
                  node(id: $projectId) {
                    ... on ProjectV2 {
                      items(first: 50, after: $after) {
                        nodes {
                          id
                          content {
                            ... on Issue {
                              title
                              number
                            }
                          }
                          fieldValues(first: 20) {
                            nodes {
                              __typename
                              ... on ProjectV2ItemFieldSingleSelectValue {
                                field {
                                  __typename
                                  ... on ProjectV2Field {
                                    id
                                    name
                                  }
                                }
                                name
                                optionId
                              }
                              ... on ProjectV2ItemFieldDateValue {
                                field {
                                  __typename
                                  ... on ProjectV2Field {
                                    id
                                    name
                                  }
                                }
                                date
                              }
                            }
                          }
                        }
                        pageInfo {
                          hasNextPage
                          endCursor
                        }
                      }
                    }
                  }
                }
              `, {
                projectId,
                after: endCursor,
              });

              const items = response.node.items.nodes;
              allItems.push(...items);
              hasNextPage = response.node.items.pageInfo.hasNextPage;
              endCursor = response.node.items.pageInfo.endCursor;
            }

            for (const item of allItems) {
              const fieldValues = item.fieldValues.nodes;

              const statusValue = fieldValues.find(f => f.__typename === "ProjectV2ItemFieldSingleSelectValue" && f.field.id === statusFieldId);
              const closedDateValue = fieldValues.find(f => f.__typename === "ProjectV2ItemFieldDateValue" && f.field.id === closedDateFieldId);

              if (!statusValue) {
                console.log(`⚠️ Skipping item (no status field): ${item.content?.title ?? '(no title)'}`);
                continue;
              }

              if (statusValue.optionId !== doneStatusValueId) {
                continue;
              }

              if (closedDateValue?.date) {
                continue; // already has a Closed Date
              }

              await github.graphql(`
                mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: Date!) {
                  updateProjectV2ItemFieldValue(input: {
                    projectId: $projectId,
                    itemId: $itemId,
                    fieldId: $fieldId,
                    value: { date: $value }
                  }) {
                    projectV2Item {
                      id
                    }
                  }
                }
              `, {
                projectId,
                itemId: item.id,
                fieldId: closedDateFieldId,
                value: closedDate,
              });

              console.log(`✅ Set Closed Date on item: ${item.content?.title ?? '(no title)'}`);
            }
