// TODO: Address nesting during Emotion conversion, if possible
// stylelint-disable max-nesting-depth

.euiSwitch {
      // When input is not checked, we shift around the positioning of the thumb and the icon
      .euiSwitch__thumb { // move the thumb left
        left: 0;
      }

      .euiSwitch__icon { // move the icon right
        right: -$euiSizeS;

        &.euiSwitch__icon--checked {
          right: auto;
          left: -($euiSwitchWidth - ($euiSwitchThumbSize / 2));
        }
      }
    }

    &:disabled {
      .euiSwitch__thumb {
        background-color: rgba(0,0,0,0);
        border-color: $euiSwitchDisabledThumbColor;
        box-shadow: none;
      }

      .euiSwitch__icon {
        fill: $euiColorDarkShade;
      }
    }
  }

  .euiSwitch__thumb {
    @include euiCustomControl($type: 'round', $size: $euiSwitchThumbSize);

    position: absolute;
    display: inline-block;
    left: $euiSwitchWidth - $euiSwitchThumbSize;
    transition: border-color $euiAnimSpeedNormal $euiAnimSlightBounce, background-color $euiAnimSpeedNormal $euiAnimSlightBounce, left $euiAnimSpeedNormal $euiAnimSlightBounce, transform $euiAnimSpeedNormal $euiAnimSlightBounce;
  }

  .euiSwitch__track {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    border-radius: $euiSwitchHeight;
  }

  .euiSwitch__icon {
    position: absolute;
    right: -($euiSwitchWidth - ($euiSwitchThumbSize / 2));
    top: ($euiSwitchHeight - $euiSwitchIconHeight) / 2;
    bottom: 0;
    width: $euiSwitchWidth - ($euiSwitchThumbSize / 2) + $euiSizeS;
    height: $euiSwitchIconHeight;
    transition: left $euiAnimSpeedNormal $euiAnimSlightBounce, right $euiAnimSpeedNormal $euiAnimSlightBounce;
    fill: $euiColorEmptyShade;
  }

  .euiSwitch__icon--checked {
    right: auto;
    left: -$euiSizeS;
    fill: $euiColorEmptyShade;
  }

  &:hover .euiSwitch__button {
    &:not(:disabled) .euiSwitch__thumb {
      transform: scale(1.05);
    }

    &:active .euiSwitch__thumb {
      transform: scale(.95);
    }
  }

  // Compressed switches operate very similar to the normal versions, but are smaller, contain no icon signifiers
  &.euiSwitch--compressed {
    .euiSwitch__thumb {
      @include euiCustomControl($type: 'round', $size: ($euiSwitchThumbSizeCompressed) - 2px);

      left: ($euiSwitchWidthCompressed) - (($euiSwitchThumbSizeCompressed) - 2px) - 1px;
      top: 1px;
      transition: border-color $euiAnimSpeedNormal $euiAnimSlightBounce, background-color $euiAnimSpeedNormal $euiAnimSlightBounce, left $euiAnimSpeedNormal $euiAnimSlightBounce, transform $euiAnimSpeedNormal $euiAnimSlightBounce;
    }

    .euiSwitch__track {
      border-radius: $euiSwitchHeightCompressed;
    }
  }

  // Mini styling is similar to compressed, but even smaller. It's undocumented because it has very specific uses.
  &.euiSwitch--mini {
    .euiSwitch__thumb {
      @include euiCustomControl($type: 'round', $size: ($euiSwitchThumbSizeMini) - 2px);

      left: ($euiSwitchWidthMini) - (($euiSwitchThumbSizeMini) - 2px) - 1px;
      top: 1px;
      transition: border-color $euiAnimSpeedNormal $euiAnimSlightBounce, background-color $euiAnimSpeedNormal $euiAnimSlightBounce, left $euiAnimSpeedNormal $euiAnimSlightBounce, transform $euiAnimSpeedNormal $euiAnimSlightBounce;
    }

    .euiSwitch__track {
      border-radius: $euiSwitchHeightMini;
    }
  }

  // Compressed and mini switches have some style overlap
  &.euiSwitch--compressed,
  &.euiSwitch--mini {
    .euiSwitch__button[aria-checked='false'] {
      .euiSwitch__thumb {
        left: 1px;
      }
    }

    // Compressed and mini switches need slightly darker borders since they don't have icons
    .euiSwitch__button[aria-checked='false'],
    .euiSwitch__button[aria-checked='true']:disabled {
      .euiSwitch__thumb {
        border-color: $euiSwitchDisabledThumbColor;
      }
    }

    // Similar additional treatment needed while checked
    .euiSwitch__button[aria-checked='true'] {
      .euiSwitch__thumb {
        border-color: $euiColorPrimary;
      }
    }
  }
}
