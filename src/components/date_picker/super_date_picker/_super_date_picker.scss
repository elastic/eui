.euiSuperDatePicker__flexWrapper {
  max-width: 100%;
  // Set a sensible min-width for when width is auto
  min-width: MIN(($euiFormMaxWidth / 2) + $euiSuperDatePickerButtonWidth + $euiSizeS, 100%);
  width: $euiSuperDatePickerWidth + $euiSuperDatePickerButtonWidth + $euiSizeS;

  @include euiBreakpoint('xs', 's') {
    width: 100%;
  }

  &.euiSuperDatePicker__flexWrapper--fullWidth {
    width: 100%;
  }

  &.euiSuperDatePicker__flexWrapper--isQuickSelectOnly {
    min-width: 0;
  }

  &.euiSuperDatePicker__flexWrapper--autoWidth {
    display: inline-flex;
    width: auto;
  }
}

.euiSuperDatePicker__flexWrapper--isAutoRefreshOnly {
  min-width: MIN($euiFormMaxWidth / 2, 100%);
  width: $euiFormMaxWidth;
}

.euiSuperDatePicker__flexWrapper--noUpdateButton {
  min-width: MIN($euiFormMaxWidth / 2, 100%);
  width: $euiSuperDatePickerWidth;
}

.euiSuperDatePicker {
  // Allow it to always grow to fit the container since the default form max width is too small
  // stylelint-disable-next-line declaration-no-important
  max-width: 100% !important;

  > .euiFormControlLayout__childrenWrapper {
    display: flex;
    align-items: center;
    overflow: hidden;
    background-color: $euiFormBackgroundColor;

    &:last-child {
      border-radius: 0 $euiFormControlBorderRadius $euiFormControlBorderRadius 0;
    }

    & > .euiFormControlLayoutDelimited__input {
      flex-grow: 1;
    }
  }
}

.euiSuperDatePicker__prettyFormat {
  @include euiSuperDatePickerText;
  display: flex;
  justify-content: space-between;
  text-align: left;

  &:not(:disabled):hover,
  &:focus {
    text-decoration: none;
  }

  &:disabled {
    background-color: $euiFormBackgroundDisabledColor;
    color: $euiColorDarkShade;
    cursor: not-allowed;
  }
}

/**
* Make the arrow delimiter match the colors of `.euiDatePopoverButton-needsUpdating`
*/
.euiSuperDatePicker--needsUpdating.euiFormControlLayoutDelimited { // Extra specificity needed to override default delimited styles
  .euiFormControlLayout__childrenWrapper {
    background-color: $euiSuperDatePickerNeedsUpdatingBackgroundColor;
  }

  .euiFormControlLayoutDelimited__delimiter {
    color: $euiSuperDatePickerNeedsUpdatingTextColor;
  }
}

.euiSuperDatePicker .euiFormControlLayout__childrenWrapper {
  transition: background $euiAnimSpeedFast ease-in; // Match @mixin euiSuperDatePickerText / .euiDatePopoverButton
}
