@import '../form/variables';
@import '../form/mixins';

/**
 * 1. Only add the border style drop shadow
 */

.euiFilterButton {

  @include euiFormControlStyle();
  width: auto;
  max-width: none;
  box-shadow: inset 0 0 0 1px $euiFormBorderColor; /* 1 */
  text-align: center;

  &:hover:not(:disabled) {
    .euiFilterButton__textShift {
      text-decoration: underline;
    }
  }

  &:focus {
    background-color: $euiFormBackgroundColor;
    box-shadow: inset 0 0 0 1px $euiFormBorderColor; /* 1 */
  }

  &:disabled {
    box-shadow: inset 0 0 0 1px $euiFormBorderColor--disabled; /* 1 */
  }

  &.euiFilterButton--wide {
    width: 100%;
    text-align: left;
  }

  .euiFilterButton__content {
    @include euiButtonContent;
  }

  &.euiFilterButton--iconRight {
    .euiFilterButton__content {
      @include euiButtonContent($isReverse: true);
      justify-content: space-between;
    }
  }

  .euiFilterButton__textShift {
    display: inline-block;

    &::after {
      display: block;
      content: attr(data-text);
      font-weight: $euiFontWeightBold;
      height: 0;
      overflow: hidden;
      visibility: hidden;
    }
  }

  &.euiFilterButton-isSelected {
    text-decoration: underline;
  }

  &.euiFilterButton-hasActiveFilters {
    font-weight: $euiFontWeightBold;
  }
}

// Modifier naming and colors.
$buttonTypes: (
  primary: $euiColorPrimary,
  danger: $euiColorDanger,
  disabled: tintOrShade($euiTextColor, 70%, 80%),
  ghost: $euiColorGhost,
  text: $euiTextColor,
);

// Create button modifiders based upon the map.
@each $name, $color in $buttonTypes {
  .euiFilterButton--#{$name} {
    color: $color;
  }
}
