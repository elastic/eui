// TODO: Address nesting during Emotion conversion, if possible
// stylelint-disable max-nesting-depth

@include euiBreakpoint('xs', 's') {
  .euiTable.euiTable--responsive {
    .euiTableRowCell__mobileHeader {
      // Always truncate
      @include euiTextTruncate;
      @include fontSize($euiFontSize * .6875);

      color: $euiColorDarkShade;
      padding: $euiSizeS;
      padding-bottom: 0;
      margin-bottom: -$euiSizeS; // pull up cell content closer
      min-height: $euiSizeL; // aligns contents of cells if header doesn't exist

      // Remove min-height of cell header if it's the only cell
      .euiTableRowCell:only-child & {
        min-height: 0;
      }
    }

    .euiTableRowCell--enlargeForMobile {
      @include euiFontSizeM;
    }

    .euiTableRow {
      // Custom actions
      &:not(.euiTableRow-hasActions) .euiTableRowCell--hasActions:last-child {
        width: 100%;

        &::before {
          content: '';
          position: absolute;
          left: 0;
          right: 0;
          height: $euiBorderWidthThin;
          background-color: $euiBorderColor;
        }

        .euiTableCellContent {
          position: relative;
          top: $euiSizeXS;
        }
      }

      &.euiTableRow-isExpandedRow {
        margin-top: -$euiTableCellContentPadding * 2;
        position: relative;
        z-index: 2; // on top of its parent/previous row
        border-top: none;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        padding-left: $euiSizeS; // override selectable as the padding is already applied via the contents

        &:hover {
          background-color: $euiColorEmptyShade; // keep white background to cover triggering row's border
        }

        .euiTableRowCell {
          width: calc(100% - #{$euiSizeXXL});

          &::before {
            display: none;
          }
        }
      }
    }

    .euiTableRowCell {
      min-width: 50%;
      border: none;
    }

    .euiTableRowCellCheckbox {
      border: none;
    }

    // never show hidden items and always show hover items on mobile,
    .euiTableRow-hasActions .euiTableCellContent--showOnHover {
      > * {
        margin-left: 0;
      }

      .expandedItemActions__completelyHide {
        display: none;
      }

      .euiTableCellContent__hoverItem {
        opacity: 1;
        filter: none;
        margin-left: 0;
        margin-bottom: $euiSizeS;
      }
    }

    // force all content back to left side
    .euiTableCellContent--alignRight {
      justify-content: flex-start;
    }

    .euiTableCellContent--alignCenter {
      justify-content: flex-start;
    }
  }
}
