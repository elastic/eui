// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EuiSuperDatePicker is rendered 1`] = `
<EuiFlexGroup
  className="euiSuperDatePicker__flexWrapper"
  gutterSize="s"
  responsive={false}
>
  <EuiFlexItem>
    <EuiFormControlLayout
      className="euiSuperDatePicker"
      isDisabled={false}
      prepend={
        <EuiQuickSelectPopover
          applyTime={[Function]}
          commonlyUsedRanges={
            Array [
              Object {
                "end": "now/d",
                "label": "Today",
                "start": "now/d",
              },
              Object {
                "end": "now/w",
                "label": "This week",
                "start": "now/w",
              },
              Object {
                "end": "now/M",
                "label": "This month",
                "start": "now/M",
              },
              Object {
                "end": "now/y",
                "label": "This year",
                "start": "now/y",
              },
              Object {
                "end": "now-1d/d",
                "label": "Yesterday",
                "start": "now-1d/d",
              },
              Object {
                "end": "now",
                "label": "Week to date",
                "start": "now/w",
              },
              Object {
                "end": "now",
                "label": "Month to date",
                "start": "now/M",
              },
              Object {
                "end": "now",
                "label": "Year to date",
                "start": "now/y",
              },
            ]
          }
          dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
          end="now"
          isDisabled={false}
          isPaused={true}
          recentlyUsedRanges={Array []}
          refreshInterval={1000}
          start="now-15m"
        />
      }
    >
      <EuiDatePickerRange
        className="euiDatePickerRange--inGroup"
        endDateControl={<div />}
        iconType={false}
        isCustom={true}
        startDateControl={<div />}
      >
        <button
          className="euiSuperDatePicker__prettyFormat"
          data-test-subj="superDatePickerShowDatesButton"
          disabled={false}
          onClick={[Function]}
        >
          Last 15 minutes
        </button>
      </EuiDatePickerRange>
    </EuiFormControlLayout>
  </EuiFlexItem>
  <EuiFlexItem
    grow={false}
  >
    <EuiSuperUpdateButton
      data-test-subj="superDatePickerApplyTimeButton"
      fill={true}
      iconOnly={false}
      isDisabled={false}
      isLoading={false}
      needsUpdate={false}
      onClick={[Function]}
      responsive={
        Array [
          "xs",
          "s",
        ]
      }
      showTooltip={true}
      size="m"
    />
  </EuiFlexItem>
</EuiFlexGroup>
`;

exports[`EuiSuperDatePicker props accepts data-test-subj and passes to EuiFormControlLayout 1`] = `
<EuiFlexGroup
  className="euiSuperDatePicker__flexWrapper"
  gutterSize="s"
  responsive={false}
>
  <EuiFlexItem>
    <EuiFormControlLayout
      className="euiSuperDatePicker"
      data-test-subj="mySuperDatePicker"
      isDisabled={false}
      prepend={
        <EuiQuickSelectPopover
          applyTime={[Function]}
          commonlyUsedRanges={
            Array [
              Object {
                "end": "now/d",
                "label": "Today",
                "start": "now/d",
              },
              Object {
                "end": "now/w",
                "label": "This week",
                "start": "now/w",
              },
              Object {
                "end": "now/M",
                "label": "This month",
                "start": "now/M",
              },
              Object {
                "end": "now/y",
                "label": "This year",
                "start": "now/y",
              },
              Object {
                "end": "now-1d/d",
                "label": "Yesterday",
                "start": "now-1d/d",
              },
              Object {
                "end": "now",
                "label": "Week to date",
                "start": "now/w",
              },
              Object {
                "end": "now",
                "label": "Month to date",
                "start": "now/M",
              },
              Object {
                "end": "now",
                "label": "Year to date",
                "start": "now/y",
              },
            ]
          }
          dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
          end="now"
          isDisabled={false}
          isPaused={true}
          recentlyUsedRanges={Array []}
          refreshInterval={1000}
          start="now-15m"
        />
      }
    >
      <EuiDatePickerRange
        className="euiDatePickerRange--inGroup"
        endDateControl={<div />}
        iconType={false}
        isCustom={true}
        startDateControl={<div />}
      >
        <button
          className="euiSuperDatePicker__prettyFormat"
          data-test-subj="superDatePickerShowDatesButton"
          disabled={false}
          onClick={[Function]}
        >
          Last 15 minutes
        </button>
      </EuiDatePickerRange>
    </EuiFormControlLayout>
  </EuiFlexItem>
  <EuiFlexItem
    grow={false}
  >
    <EuiSuperUpdateButton
      data-test-subj="superDatePickerApplyTimeButton"
      fill={true}
      iconOnly={false}
      isDisabled={false}
      isLoading={false}
      needsUpdate={false}
      onClick={[Function]}
      responsive={
        Array [
          "xs",
          "s",
        ]
      }
      showTooltip={true}
      size="m"
    />
  </EuiFlexItem>
</EuiFlexGroup>
`;

exports[`EuiSuperDatePicker props compressed is rendered 1`] = `
<EuiFlexGroup
  className="euiSuperDatePicker__flexWrapper"
  gutterSize="s"
  responsive={false}
>
  <EuiFlexItem>
    <EuiFormControlLayout
      className="euiSuperDatePicker"
      compressed={true}
      isDisabled={false}
      prepend={
        <EuiQuickSelectPopover
          applyTime={[Function]}
          commonlyUsedRanges={
            Array [
              Object {
                "end": "now/d",
                "label": "Today",
                "start": "now/d",
              },
              Object {
                "end": "now/w",
                "label": "This week",
                "start": "now/w",
              },
              Object {
                "end": "now/M",
                "label": "This month",
                "start": "now/M",
              },
              Object {
                "end": "now/y",
                "label": "This year",
                "start": "now/y",
              },
              Object {
                "end": "now-1d/d",
                "label": "Yesterday",
                "start": "now-1d/d",
              },
              Object {
                "end": "now",
                "label": "Week to date",
                "start": "now/w",
              },
              Object {
                "end": "now",
                "label": "Month to date",
                "start": "now/M",
              },
              Object {
                "end": "now",
                "label": "Year to date",
                "start": "now/y",
              },
            ]
          }
          dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
          end="now"
          isDisabled={false}
          isPaused={true}
          recentlyUsedRanges={Array []}
          refreshInterval={1000}
          start="now-15m"
        />
      }
    >
      <EuiDatePickerRange
        className="euiDatePickerRange--inGroup"
        endDateControl={<div />}
        iconType={false}
        isCustom={true}
        startDateControl={<div />}
      >
        <button
          className="euiSuperDatePicker__prettyFormat"
          data-test-subj="superDatePickerShowDatesButton"
          disabled={false}
          onClick={[Function]}
        >
          Last 15 minutes
        </button>
      </EuiDatePickerRange>
    </EuiFormControlLayout>
  </EuiFlexItem>
  <EuiFlexItem
    grow={false}
  >
    <EuiSuperUpdateButton
      data-test-subj="superDatePickerApplyTimeButton"
      fill={true}
      iconOnly={false}
      isDisabled={false}
      isLoading={false}
      needsUpdate={false}
      onClick={[Function]}
      responsive={
        Array [
          "xs",
          "s",
        ]
      }
      showTooltip={true}
      size="s"
    />
  </EuiFlexItem>
</EuiFlexGroup>
`;

exports[`EuiSuperDatePicker props isAutoRefreshOnly is rendered 1`] = `
<EuiFlexGroup
  className="euiSuperDatePicker__flexWrapper euiSuperDatePicker__flexWrapper--isAutoRefreshOnly"
  gutterSize="s"
  responsive={false}
>
  <EuiFlexItem>
    <EuiAutoRefresh
      fullWidth={false}
      isDisabled={false}
      isPaused={true}
      onRefreshChange={[Function]}
      refreshInterval={1000}
    />
  </EuiFlexItem>
</EuiFlexGroup>
`;

exports[`EuiSuperDatePicker props isAutoRefreshOnly passes required props 1`] = `
<EuiFlexGroup
  className="euiSuperDatePicker__flexWrapper euiSuperDatePicker__flexWrapper--isAutoRefreshOnly"
  gutterSize="s"
  responsive={false}
>
  <EuiFlexItem>
    <EuiAutoRefresh
      data-test-subj="autoRefreshOnly"
      fullWidth={false}
      isDisabled={true}
      isPaused={true}
      onRefreshChange={[Function]}
      refreshInterval={1000}
    />
  </EuiFlexItem>
</EuiFlexGroup>
`;

exports[`EuiSuperDatePicker props isQuickSelectOnly is rendered 1`] = `
<EuiFlexGroup
  className="euiSuperDatePicker__flexWrapper euiSuperDatePicker__flexWrapper--isQuickSelectOnly euiSuperDatePicker__flexWrapper--autoWidth"
  gutterSize="s"
  responsive={false}
>
  <EuiFlexItem>
    <EuiFormControlLayout
      className="euiSuperDatePicker"
      isDisabled={false}
      prepend={
        <EuiQuickSelectPopover
          applyTime={[Function]}
          commonlyUsedRanges={
            Array [
              Object {
                "end": "now/d",
                "label": "Today",
                "start": "now/d",
              },
              Object {
                "end": "now/w",
                "label": "This week",
                "start": "now/w",
              },
              Object {
                "end": "now/M",
                "label": "This month",
                "start": "now/M",
              },
              Object {
                "end": "now/y",
                "label": "This year",
                "start": "now/y",
              },
              Object {
                "end": "now-1d/d",
                "label": "Yesterday",
                "start": "now-1d/d",
              },
              Object {
                "end": "now",
                "label": "Week to date",
                "start": "now/w",
              },
              Object {
                "end": "now",
                "label": "Month to date",
                "start": "now/M",
              },
              Object {
                "end": "now",
                "label": "Year to date",
                "start": "now/y",
              },
            ]
          }
          dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
          end="now"
          isDisabled={false}
          isPaused={true}
          recentlyUsedRanges={Array []}
          refreshInterval={1000}
          start="now-15m"
        />
      }
    />
  </EuiFlexItem>
  <EuiFlexItem
    grow={false}
  >
    <EuiSuperUpdateButton
      data-test-subj="superDatePickerApplyTimeButton"
      fill={true}
      iconOnly={false}
      isDisabled={false}
      isLoading={false}
      needsUpdate={false}
      onClick={[Function]}
      responsive={
        Array [
          "xs",
          "s",
        ]
      }
      showTooltip={true}
      size="m"
    />
  </EuiFlexItem>
</EuiFlexGroup>
`;

exports[`EuiSuperDatePicker props showUpdateButton can be false 1`] = `
<EuiFlexGroup
  className="euiSuperDatePicker__flexWrapper euiSuperDatePicker__flexWrapper--noUpdateButton"
  gutterSize="s"
  responsive={false}
>
  <EuiFlexItem>
    <EuiFormControlLayout
      className="euiSuperDatePicker"
      isDisabled={false}
      prepend={
        <EuiQuickSelectPopover
          applyTime={[Function]}
          commonlyUsedRanges={
            Array [
              Object {
                "end": "now/d",
                "label": "Today",
                "start": "now/d",
              },
              Object {
                "end": "now/w",
                "label": "This week",
                "start": "now/w",
              },
              Object {
                "end": "now/M",
                "label": "This month",
                "start": "now/M",
              },
              Object {
                "end": "now/y",
                "label": "This year",
                "start": "now/y",
              },
              Object {
                "end": "now-1d/d",
                "label": "Yesterday",
                "start": "now-1d/d",
              },
              Object {
                "end": "now",
                "label": "Week to date",
                "start": "now/w",
              },
              Object {
                "end": "now",
                "label": "Month to date",
                "start": "now/M",
              },
              Object {
                "end": "now",
                "label": "Year to date",
                "start": "now/y",
              },
            ]
          }
          dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
          end="now"
          isDisabled={false}
          isPaused={true}
          recentlyUsedRanges={Array []}
          refreshInterval={1000}
          start="now-15m"
        />
      }
    >
      <EuiDatePickerRange
        className="euiDatePickerRange--inGroup"
        endDateControl={<div />}
        iconType={false}
        isCustom={true}
        startDateControl={<div />}
      >
        <button
          className="euiSuperDatePicker__prettyFormat"
          data-test-subj="superDatePickerShowDatesButton"
          disabled={false}
          onClick={[Function]}
        >
          Last 15 minutes
        </button>
      </EuiDatePickerRange>
    </EuiFormControlLayout>
  </EuiFlexItem>
</EuiFlexGroup>
`;

exports[`EuiSuperDatePicker props showUpdateButton can be iconOnly 1`] = `
<EuiFlexGroup
  className="euiSuperDatePicker__flexWrapper"
  gutterSize="s"
  responsive={false}
>
  <EuiFlexItem>
    <EuiFormControlLayout
      className="euiSuperDatePicker"
      isDisabled={false}
      prepend={
        <EuiQuickSelectPopover
          applyTime={[Function]}
          commonlyUsedRanges={
            Array [
              Object {
                "end": "now/d",
                "label": "Today",
                "start": "now/d",
              },
              Object {
                "end": "now/w",
                "label": "This week",
                "start": "now/w",
              },
              Object {
                "end": "now/M",
                "label": "This month",
                "start": "now/M",
              },
              Object {
                "end": "now/y",
                "label": "This year",
                "start": "now/y",
              },
              Object {
                "end": "now-1d/d",
                "label": "Yesterday",
                "start": "now-1d/d",
              },
              Object {
                "end": "now",
                "label": "Week to date",
                "start": "now/w",
              },
              Object {
                "end": "now",
                "label": "Month to date",
                "start": "now/M",
              },
              Object {
                "end": "now",
                "label": "Year to date",
                "start": "now/y",
              },
            ]
          }
          dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
          end="now"
          isDisabled={false}
          isPaused={true}
          recentlyUsedRanges={Array []}
          refreshInterval={1000}
          start="now-15m"
        />
      }
    >
      <EuiDatePickerRange
        className="euiDatePickerRange--inGroup"
        endDateControl={<div />}
        iconType={false}
        isCustom={true}
        startDateControl={<div />}
      >
        <button
          className="euiSuperDatePicker__prettyFormat"
          data-test-subj="superDatePickerShowDatesButton"
          disabled={false}
          onClick={[Function]}
        >
          Last 15 minutes
        </button>
      </EuiDatePickerRange>
    </EuiFormControlLayout>
  </EuiFlexItem>
  <EuiFlexItem
    grow={false}
  >
    <EuiSuperUpdateButton
      data-test-subj="superDatePickerApplyTimeButton"
      fill={true}
      iconOnly={true}
      isDisabled={false}
      isLoading={false}
      needsUpdate={false}
      onClick={[Function]}
      responsive={
        Array [
          "xs",
          "s",
        ]
      }
      showTooltip={true}
      size="m"
    />
  </EuiFlexItem>
</EuiFlexGroup>
`;

exports[`EuiSuperDatePicker props width can be auto 1`] = `
<EuiFlexGroup
  className="euiSuperDatePicker__flexWrapper euiSuperDatePicker__flexWrapper--autoWidth"
  gutterSize="s"
  responsive={false}
>
  <EuiFlexItem>
    <EuiFormControlLayout
      className="euiSuperDatePicker"
      isDisabled={false}
      prepend={
        <EuiQuickSelectPopover
          applyTime={[Function]}
          commonlyUsedRanges={
            Array [
              Object {
                "end": "now/d",
                "label": "Today",
                "start": "now/d",
              },
              Object {
                "end": "now/w",
                "label": "This week",
                "start": "now/w",
              },
              Object {
                "end": "now/M",
                "label": "This month",
                "start": "now/M",
              },
              Object {
                "end": "now/y",
                "label": "This year",
                "start": "now/y",
              },
              Object {
                "end": "now-1d/d",
                "label": "Yesterday",
                "start": "now-1d/d",
              },
              Object {
                "end": "now",
                "label": "Week to date",
                "start": "now/w",
              },
              Object {
                "end": "now",
                "label": "Month to date",
                "start": "now/M",
              },
              Object {
                "end": "now",
                "label": "Year to date",
                "start": "now/y",
              },
            ]
          }
          dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
          end="now"
          isDisabled={false}
          isPaused={true}
          recentlyUsedRanges={Array []}
          refreshInterval={1000}
          start="now-15m"
        />
      }
    >
      <EuiDatePickerRange
        className="euiDatePickerRange--inGroup"
        endDateControl={<div />}
        iconType={false}
        isCustom={true}
        startDateControl={<div />}
      >
        <button
          className="euiSuperDatePicker__prettyFormat"
          data-test-subj="superDatePickerShowDatesButton"
          disabled={false}
          onClick={[Function]}
        >
          Last 15 minutes
        </button>
      </EuiDatePickerRange>
    </EuiFormControlLayout>
  </EuiFlexItem>
  <EuiFlexItem
    grow={false}
  >
    <EuiSuperUpdateButton
      data-test-subj="superDatePickerApplyTimeButton"
      fill={true}
      iconOnly={false}
      isDisabled={false}
      isLoading={false}
      needsUpdate={false}
      onClick={[Function]}
      responsive={
        Array [
          "xs",
          "s",
        ]
      }
      showTooltip={true}
      size="m"
    />
  </EuiFlexItem>
</EuiFlexGroup>
`;

exports[`EuiSuperDatePicker props width can be full 1`] = `
<EuiFlexGroup
  className="euiSuperDatePicker__flexWrapper euiSuperDatePicker__flexWrapper--fullWidth"
  gutterSize="s"
  responsive={false}
>
  <EuiFlexItem>
    <EuiFormControlLayout
      className="euiSuperDatePicker"
      isDisabled={false}
      prepend={
        <EuiQuickSelectPopover
          applyTime={[Function]}
          commonlyUsedRanges={
            Array [
              Object {
                "end": "now/d",
                "label": "Today",
                "start": "now/d",
              },
              Object {
                "end": "now/w",
                "label": "This week",
                "start": "now/w",
              },
              Object {
                "end": "now/M",
                "label": "This month",
                "start": "now/M",
              },
              Object {
                "end": "now/y",
                "label": "This year",
                "start": "now/y",
              },
              Object {
                "end": "now-1d/d",
                "label": "Yesterday",
                "start": "now-1d/d",
              },
              Object {
                "end": "now",
                "label": "Week to date",
                "start": "now/w",
              },
              Object {
                "end": "now",
                "label": "Month to date",
                "start": "now/M",
              },
              Object {
                "end": "now",
                "label": "Year to date",
                "start": "now/y",
              },
            ]
          }
          dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
          end="now"
          isDisabled={false}
          isPaused={true}
          recentlyUsedRanges={Array []}
          refreshInterval={1000}
          start="now-15m"
        />
      }
    >
      <EuiDatePickerRange
        className="euiDatePickerRange--inGroup"
        endDateControl={<div />}
        iconType={false}
        isCustom={true}
        startDateControl={<div />}
      >
        <button
          className="euiSuperDatePicker__prettyFormat"
          data-test-subj="superDatePickerShowDatesButton"
          disabled={false}
          onClick={[Function]}
        >
          Last 15 minutes
        </button>
      </EuiDatePickerRange>
    </EuiFormControlLayout>
  </EuiFlexItem>
  <EuiFlexItem
    grow={false}
  >
    <EuiSuperUpdateButton
      data-test-subj="superDatePickerApplyTimeButton"
      fill={true}
      iconOnly={false}
      isDisabled={false}
      isLoading={false}
      needsUpdate={false}
      onClick={[Function]}
      responsive={
        Array [
          "xs",
          "s",
        ]
      }
      showTooltip={true}
      size="m"
    />
  </EuiFlexItem>
</EuiFlexGroup>
`;
