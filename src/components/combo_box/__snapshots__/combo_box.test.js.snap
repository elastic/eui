// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EuiComboBox is rendered 1`] = `
<div
  aria-label="aria-label"
  class="euiComboBox testClass1 testClass2"
  data-test-subj="test subject string"
>
  <div
    class="euiFormControlLayout"
  >
    <div
      class="euiFormControlLayout__childrenWrapper"
    >
      <div
        class="euiComboBox__inputWrap"
        data-test-subj="comboBoxInput"
      >
        <div
          class="euiComboBox__input"
          style="font-size:14px;display:inline-block"
        >
          <input
            aria-hidden="true"
            data-test-subj="comboBoxSearchInput"
            style="box-sizing:content-box;width:1px"
            value=""
          />
          <div
            style="position:absolute;top:0;left:0;visibility:hidden;height:0;overflow:scroll;white-space:pre"
          />
        </div>
      </div>
      <div
        class="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
      >
        <button
          aria-label="Open list of options"
          class="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
          data-test-subj="comboBoxToggleListButton"
        >
          <svg
            aria-hidden="true"
            class="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
            focusable="false"
            height="16"
            viewBox="0 0 16 16"
            width="16"
            xlink="http://www.w3.org/1999/xlink"
            xmlns="http://www.w3.org/2000/svg"
          >
            <defs>
              <path
                d="M13.069 5.157L8.384 9.768a.546.546 0 0 1-.768 0L2.93 5.158a.552.552 0 0 0-.771 0 .53.53 0 0 0 0 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 0 0 0-.76.552.552 0 0 0-.771 0z"
                id="arrow_down-a"
              />
            </defs>
            <use
              fill-rule="nonzero"
              href="#arrow_down-a"
            />
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`props isClearable=false disallows user from clearing input when no options are selected 1`] = `
<div
  className="euiComboBox"
  onFocus={[Function]}
  onKeyDown={[Function]}
>
  <EuiComboBoxInput
    autoSizeInputRef={[Function]}
    hasSelectedOptions={false}
    inputRef={[Function]}
    isListOpen={false}
    onChange={[Function]}
    onClick={[Function]}
    onCloseListClick={[Function]}
    onFocus={[Function]}
    onOpenListClick={[Function]}
    onRemoveOption={[Function]}
    searchValue=""
    selectedOptions={Array []}
    singleSelection={false}
    toggleButtonRef={[Function]}
    updatePosition={[Function]}
    value=""
  />
</div>
`;

exports[`props isClearable=false disallows user from clearing input when options are selected 1`] = `
<div
  className="euiComboBox"
  onFocus={[Function]}
  onKeyDown={[Function]}
>
  <EuiComboBoxInput
    autoSizeInputRef={[Function]}
    hasSelectedOptions={true}
    inputRef={[Function]}
    isListOpen={false}
    onChange={[Function]}
    onClick={[Function]}
    onCloseListClick={[Function]}
    onFocus={[Function]}
    onOpenListClick={[Function]}
    onRemoveOption={[Function]}
    searchValue=""
    selectedOptions={
      Array [
        Object {
          "label": "Mimas",
        },
        Object {
          "label": "Iapetus",
        },
      ]
    }
    singleSelection={false}
    toggleButtonRef={[Function]}
    updatePosition={[Function]}
    value="Mimas, Iapetus"
  />
</div>
`;

exports[`props isDisabled is rendered 1`] = `
<div
  className="euiComboBox euiComboBox-isDisabled"
  onFocus={[Function]}
  onKeyDown={[Function]}
>
  <EuiComboBoxInput
    autoSizeInputRef={[Function]}
    hasSelectedOptions={true}
    inputRef={[Function]}
    isDisabled={true}
    isListOpen={false}
    onChange={[Function]}
    onClick={[Function]}
    onCloseListClick={[Function]}
    onFocus={[Function]}
    onOpenListClick={[Function]}
    onRemoveOption={[Function]}
    searchValue=""
    selectedOptions={
      Array [
        Object {
          "label": "Mimas",
        },
      ]
    }
    singleSelection={false}
    toggleButtonRef={[Function]}
    updatePosition={[Function]}
    value="Mimas"
  />
</div>
`;

exports[`props options are rendered 1`] = `
<div
  className="euiComboBox"
  onFocus={[Function]}
  onKeyDown={[Function]}
>
  <EuiComboBoxInput
    autoSizeInputRef={[Function]}
    hasSelectedOptions={false}
    inputRef={[Function]}
    isListOpen={false}
    onChange={[Function]}
    onClear={[Function]}
    onClick={[Function]}
    onCloseListClick={[Function]}
    onFocus={[Function]}
    onOpenListClick={[Function]}
    onRemoveOption={[Function]}
    searchValue=""
    selectedOptions={Array []}
    singleSelection={false}
    toggleButtonRef={[Function]}
    updatePosition={[Function]}
    value=""
  />
</div>
`;

exports[`props selectedOptions are rendered 1`] = `
<div
  className="euiComboBox"
  onFocus={[Function]}
  onKeyDown={[Function]}
>
  <EuiComboBoxInput
    autoSizeInputRef={[Function]}
    hasSelectedOptions={true}
    inputRef={[Function]}
    isListOpen={false}
    onChange={[Function]}
    onClear={[Function]}
    onClick={[Function]}
    onCloseListClick={[Function]}
    onFocus={[Function]}
    onOpenListClick={[Function]}
    onRemoveOption={[Function]}
    searchValue=""
    selectedOptions={
      Array [
        Object {
          "label": "Mimas",
        },
        Object {
          "label": "Iapetus",
        },
      ]
    }
    singleSelection={false}
    toggleButtonRef={[Function]}
    updatePosition={[Function]}
    value="Mimas, Iapetus"
  />
</div>
`;

exports[`props singleSelection is rendered 1`] = `
<div
  className="euiComboBox"
  onFocus={[Function]}
  onKeyDown={[Function]}
>
  <EuiComboBoxInput
    autoSizeInputRef={[Function]}
    hasSelectedOptions={true}
    inputRef={[Function]}
    isListOpen={false}
    onChange={[Function]}
    onClear={[Function]}
    onClick={[Function]}
    onCloseListClick={[Function]}
    onFocus={[Function]}
    onOpenListClick={[Function]}
    onRemoveOption={[Function]}
    searchValue=""
    selectedOptions={
      Array [
        Object {
          "label": "Mimas",
        },
      ]
    }
    singleSelection={true}
    toggleButtonRef={[Function]}
    updatePosition={[Function]}
    value="Mimas"
  />
</div>
`;
