.euiCodeBlock {
  max-width: 100%;
  display: block;
  position: relative;
  background: $euiCodeBlockBackgroundColor;

  .euiCodeBlock__pre {
    @include euiScrollBar;
    height: 100%;
    overflow: auto;
    display: block;
  }

  .euiCodeBlock__pre--whiteSpacePre {
    white-space: pre;
  }

  .euiCodeBlock__pre--whiteSpacePreWrap {
    white-space: pre-wrap;
  }

  // Necessary for virtualized code blocks to have appropriate padding
  .euiCodeBlock__pre--isVirtualized {
    .euiCodeBlock__code {
      position: relative;
    }
  }

  .euiCodeBlock__line {
    display: block;
  }

  &--hasLineNumbers {
    .euiCodeBlock__line {
      position: relative;
      user-select: none;
    }
  }

  .euiCodeBlock__lineText,
  .euiCodeBlock__lineNumber {
    display: inline-block;
  }

  .euiCodeBlock__lineText {
    padding-left: $euiSizeS;
    border-left: $euiBorderThin;
    user-select: text;
  }

  .euiCodeBlock__lineNumber {
    position: absolute;
    height: 100%;
    user-select: none;
    padding-right: $euiSizeS;
    // Width is calculated in JS and padding needs to be added on to that value.
    box-sizing: content-box;

    &:before {
      content: attr(data-line-number);
      color: $euiTextSubduedColor;
      text-align: right;
      display: block;
    }
  }

  .euiCodeBlock__line--isHighlighted {
    .euiCodeBlock__lineText {
      background: $euiFocusBackgroundColor;
      border-left: $euiBorderWidthThick solid $euiFocusRingColor;
    }
  }

  .euiCodeBlock__code {
    @include euiCodeFont;
    line-height: $euiLineHeight;
    font-weight: $euiCodeFontWeightRegular;
    font-size: inherit;
    color: $euiCodeBlockColor;
    display: block;
  }

  .euiCodeBlock__controls {
    position: absolute;
    top: 0;
    right: 0;
  }

  .euiCodeBlock__fullScreenButton + .euiCodeBlock__copyButton {
    margin-top: $euiSizeXS;
  }

  &.euiCodeBlock-isFullScreen {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    .euiCodeBlock__pre {
      // sass-lint:disable-block no-important
      padding: $euiSizeXL !important;
    }

    .euiCodeBlock__controls {
      top: $euiSizeXS;
      right: $euiSizeXS;
    }
  }

  &.euiCodeBlock--fontSmall {
    font-size: $euiFontSizeXS;
  }

  &.euiCodeBlock--fontMedium {
    font-size: $euiFontSizeS;
  }

  &.euiCodeBlock--fontLarge {
    font-size: $euiFontSize;
  }

  // Storing for re-use the sizing of controls plus extra padding
  $controlsPadding: $euiSizeL + $euiSizeXS;
  $bothControlsHeight: ($euiSizeL * 2) + $euiSizeXS;

  &.euiCodeBlock--hasControl {
    min-height: $euiSizeL;
  }

  &.euiCodeBlock--hasBothControls {
    min-height: $bothControlsHeight;
  }

  &.euiCodeBlock--hasControl .euiCodeBlock__pre--whiteSpacePreWrap {
    padding-right: $controlsPadding;
  }

  &.euiCodeBlock--hasControl .euiCodeBlock__pre--whiteSpacePre {
    margin-right: $controlsPadding;
  }

  @each $modifier, $amount in $euiCodeBlockPaddingModifiers {
    &.euiCodeBlock--#{$modifier} {
      .euiCodeBlock__pre {
        padding: $amount;
      }

      &.euiCodeBlock--hasControl {
        min-height: $euiSizeL + ($amount * 2);
      }

      &.euiCodeBlock--hasBothControls {
        min-height: $bothControlsHeight + ($amount * 2);
      }

      .euiCodeBlock__controls {
        top: $amount;
        right: $amount;
      }

      &.euiCodeBlock--hasControl .euiCodeBlock__pre--whiteSpacePreWrap {
        padding-right: $amount + $controlsPadding;
      }

      &.euiCodeBlock--hasControl .euiCodeBlock__pre--whiteSpacePre {
        margin-right: $amount + $controlsPadding;
      }
    }
  }

  &.euiCodeBlock--transparentBackground {
    background: transparent;
  }

  @include euiCodeSyntaxTokens;
}
