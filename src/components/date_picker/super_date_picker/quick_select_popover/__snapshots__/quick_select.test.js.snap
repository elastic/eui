// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EuiQuickSelect is rendered 1`] = `
<fieldset>
  <EuiTitle
    className="euiQuickSelect__legend"
    size="xxxs"
  >
    <legend
      aria-label="Quick select a time range"
      id="htmlId"
    >
      <EuiI18n
        default="Quick select"
        token="euiQuickSelect.legend"
      />
    </legend>
  </EuiTitle>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="s"
    justifyContent="flexEnd"
    responsive={false}
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiToolTip
        content="Previous time window"
        delay="regular"
        position="top"
      >
        <EuiButtonIcon
          aria-label="Previous time window"
          iconType="arrowLeft"
          onClick={[Function]}
        />
      </EuiToolTip>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <EuiToolTip
        content="Next time window"
        delay="regular"
        position="top"
      >
        <EuiButtonIcon
          aria-label="Next time window"
          iconType="arrowRight"
          onClick={[Function]}
        />
      </EuiToolTip>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="s"
  />
  <EuiFlexGroup
    gutterSize="s"
    responsive={false}
  >
    <EuiFlexItem>
      <EuiSelect
        aria-describedby="htmlId htmlId"
        aria-label="Time tense"
        compressed={true}
        fullWidth={false}
        hasNoInitialSelection={false}
        isLoading={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "Last",
              "value": "last",
            },
            Object {
              "text": "Next",
              "value": "next",
            },
          ]
        }
        value="last"
      />
    </EuiFlexItem>
    <EuiFlexItem>
      <EuiFieldNumber
        aria-describedby="htmlId htmlId"
        aria-label="Time value"
        compressed={true}
        fullWidth={false}
        isLoading={false}
        onChange={[Function]}
        value={15}
      />
    </EuiFlexItem>
    <EuiFlexItem>
      <EuiSelect
        aria-describedby="htmlId htmlId"
        aria-label="Time unit"
        compressed={true}
        fullWidth={false}
        hasNoInitialSelection={false}
        isLoading={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "seconds",
              "value": "s",
            },
            Object {
              "text": "minutes",
              "value": "m",
            },
            Object {
              "text": "hours",
              "value": "h",
            },
            Object {
              "text": "days",
              "value": "d",
            },
            Object {
              "text": "weeks",
              "value": "w",
            },
            Object {
              "text": "months",
              "value": "M",
            },
            Object {
              "text": "years",
              "value": "y",
            },
          ]
        }
        value="m"
      />
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <EuiButton
        aria-describedby="htmlId htmlId"
        className="euiQuickSelect__applyButton"
        disabled={false}
        onClick={[Function]}
        size="s"
      >
        <EuiI18n
          default="Apply"
          token="euiQuickSelect.applyButton"
        />
      </EuiButton>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiHorizontalRule
    margin="s"
  />
  <EuiScreenReaderOnly
    id="htmlId"
  >
    <p>
      Currently set to 
      last
       
      15
       
      minutes
      .
    </p>
  </EuiScreenReaderOnly>
</fieldset>
`;

exports[`EuiQuickSelect prevQuickSelect 1`] = `
<fieldset>
  <EuiTitle
    className="euiQuickSelect__legend"
    size="xxxs"
  >
    <legend
      aria-label="Quick select a time range"
      id="htmlId"
    >
      <EuiI18n
        default="Quick select"
        token="euiQuickSelect.legend"
      />
    </legend>
  </EuiTitle>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="s"
    justifyContent="flexEnd"
    responsive={false}
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiToolTip
        content="Previous time window"
        delay="regular"
        position="top"
      >
        <EuiButtonIcon
          aria-label="Previous time window"
          iconType="arrowLeft"
          onClick={[Function]}
        />
      </EuiToolTip>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <EuiToolTip
        content="Next time window"
        delay="regular"
        position="top"
      >
        <EuiButtonIcon
          aria-label="Next time window"
          iconType="arrowRight"
          onClick={[Function]}
        />
      </EuiToolTip>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="s"
  />
  <EuiFlexGroup
    gutterSize="s"
    responsive={false}
  >
    <EuiFlexItem>
      <EuiSelect
        aria-describedby="htmlId htmlId"
        aria-label="Time tense"
        compressed={true}
        fullWidth={false}
        hasNoInitialSelection={false}
        isLoading={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "Last",
              "value": "last",
            },
            Object {
              "text": "Next",
              "value": "next",
            },
          ]
        }
        value="Next"
      />
    </EuiFlexItem>
    <EuiFlexItem>
      <EuiFieldNumber
        aria-describedby="htmlId htmlId"
        aria-label="Time value"
        compressed={true}
        fullWidth={false}
        isLoading={false}
        onChange={[Function]}
        value={32}
      />
    </EuiFlexItem>
    <EuiFlexItem>
      <EuiSelect
        aria-describedby="htmlId htmlId"
        aria-label="Time unit"
        compressed={true}
        fullWidth={false}
        hasNoInitialSelection={false}
        isLoading={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "seconds",
              "value": "s",
            },
            Object {
              "text": "minutes",
              "value": "m",
            },
            Object {
              "text": "hours",
              "value": "h",
            },
            Object {
              "text": "days",
              "value": "d",
            },
            Object {
              "text": "weeks",
              "value": "w",
            },
            Object {
              "text": "months",
              "value": "M",
            },
            Object {
              "text": "years",
              "value": "y",
            },
          ]
        }
        value="M"
      />
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <EuiButton
        aria-describedby="htmlId htmlId"
        className="euiQuickSelect__applyButton"
        disabled={false}
        onClick={[Function]}
        size="s"
      >
        <EuiI18n
          default="Apply"
          token="euiQuickSelect.applyButton"
        />
      </EuiButton>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiHorizontalRule
    margin="s"
  />
  <EuiScreenReaderOnly
    id="htmlId"
  >
    <p>
      Currently set to 
      Next
       
      32
       
      months
      .
    </p>
  </EuiScreenReaderOnly>
</fieldset>
`;
