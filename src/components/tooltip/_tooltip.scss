@mixin euiTooltipSize($multiplier){
  max-width: $euiSize * $multiplier;

  .euiTooltip__content {
    white-space: inherit;
  }
}

// Outer most element (contains both the triggering element and tooltip itself)
.euiTooltip {
  display: inline-block;
}

// The tooltip itself (for positioning, showing/hiding, sizing)
// 1. Hide the containing element by zero-ing out it's height, but let it keep it's width for positioning

.euiTooltip__container {
  position: absolute;
  height: 0; /* 1 */
  
  // VISIBILITY
  visibility: hidden;
  &.euiTooltip-isVisible {
    visibility: visible;
  }  

  // SIZING
  &.euiTooltip--small {
    @include euiTooltipSize(10);
  }

  &.euiTooltip--medium {
    @include euiTooltipSize(15);
  }

  &.euiTooltip--large {
    @include euiTooltipSize(30);
  }
}

  // The tooltip content (for styling)  
  
  .euiTooltip__content {

    // Scoped variables for component-only re-use
    $background-color: $euiColorDarkestShade;
    $text-color: $euiColorEmptyShade;
    $arrow-size: $euiSize;

    // Styling
    @include euiBottomShadow;
    @include euiFontSizeS();  
    background-color: $background-color;
    border-radius: $euiBorderRadius;
    padding: $euiSize;
    color: $text-color;
    white-space: nowrap;

    // Positioning
    display: block;
    position: relative;
    transform: translate(-25%, calc(-100% - #{$euiSizeXL})); // default is top centered

    /* ARROW */
    &:before {
      content: "";
      position: absolute;
      bottom: -$arrow-size/2;
      left: 50%;
      transform: translateX(-50%) rotateZ(45deg);
      transform-origin: center;
      background-color: $background-color;
      width: $arrow-size;
      height: $arrow-size;
    }

  }

  // The tooltip title if it exists
  .euiTooltip__title {
    @include euiFontSizeM;
    font-weight: $euiFontWeightLight;    
    margin-bottom: $euiSizeS;
  }