name: "Community contribution"
on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]

jobs:
  community-pr-message:
    env:
      EUI_REPO: ${{ github.event.pull_request.base.repo.url }}
      HEAD_REPO: ${{ github.event.pull_request.head.repo.url }}
      SUBMITTER_ASSOCIATION: ${{ github.event.pull_request.author_association }}
    runs-on: ubuntu-latest
    permissions:
      issues: write # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
    steps:
      - uses: actions/github-script@v6
        name: "Check community access and add comment"
        if: |
          ${{ env.EUI_REPO != env.HEAD_REPO }} &&
          ${{ env.SUBMITTER_ASSOCIATION != 'MEMBER' }}
          # ==================================================
          # TODO: Find a token that returns a list of org members
          # and add it as a secret to the EUI repo. Then use
          # that secret to check if the pull request submitter
          # is a member of the Elastic org. If they are NOT a 
          # member of the org, proceed to post up the comment.
          # ==================================================
        with:
          script: |
            echo "Not a MEMBER. Another association."
          # script: |
          #   const pr = context.payload.pull_request
          #   const comment = "Since this is a community submitted pull request, a Buildkite build has not been started automatically. Would an Elastic organization member please verify the contents of this pull request and then kick off a build manually?"

          #   github.rest.issues.createComment({
          #     issue_number: context.issue.number,
          #     owner: context.repo.owner,
          #     repo: context.repo.repo,
          #     body: comment,
          #   });
