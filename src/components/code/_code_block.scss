.euiCodeBlock {
  max-width: 100%;
  display: block;
  position: relative;
  background: $euiCodeBlockBackgroundColor;
  color: $euiCodeBlockColor;

  .euiCodeBlock__pre {
    @include euiScrollBar;
    height: 100%;
    overflow: auto;
    display: block;
  }

  .euiCodeBlock__pre--whiteSpacePre {
    white-space: pre;
  }

  .euiCodeBlock__pre--whiteSpacePreWrap {
    white-space: pre-wrap;
  }

  // Necessary for virtualized code blocks to have appropriate padding
  .euiCodeBlock__pre--isVirtualized {
    .euiCodeBlock__code {
      position: relative;
    }
  }

  .euiCodeBlock__line {
    display: block;
  }

  &--hasLineNumbers {
    .euiCodeBlock__line {
      position: relative;
      user-select: none;
    }
  }

  .euiCodeBlock__lineText,
  .euiCodeBlock__lineNumber {
    display: inline-block;
  }

  .euiCodeBlock__lineText {
    padding-left: $euiSizeS;
    margin-left: $euiSizeS;
    border-left: $euiBorderThin;
    user-select: text;
  }

  .euiCodeBlock__lineNumber {
    position: absolute;
    user-select: none;

    &:before {
      content: attr(data-line-number);
      color: $euiTextSubduedColor;
      text-align: right;
      display: block;
    }
  }

  .euiCodeBlock__code {
    @include euiCodeFont;
    display: block;
    line-height: $euiLineHeight;
    font-weight: $euiCodeFontWeightRegular;
    font-size: inherit;
  }

  .euiCodeBlock__controls {
    position: absolute;
    top: 0;
    right: 0;
  }

  .euiCodeBlock__fullScreenButton + .euiCodeBlock__copyButton {
    margin-top: $euiSizeXS;
  }

  &.euiCodeBlock-isFullScreen {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    .euiCodeBlock__pre {
      // sass-lint:disable-block no-important
      padding: $euiSizeXL !important;
    }

    .euiCodeBlock__controls {
      top: $euiSizeXS;
      right: $euiSizeXS;
    }
  }

  &.euiCodeBlock--fontSmall {
    font-size: $euiFontSizeXS;
  }

  &.euiCodeBlock--fontMedium {
    font-size: $euiFontSizeS;
  }

  &.euiCodeBlock--fontLarge {
    font-size: $euiFontSize;
  }

  // Storing for re-use the sizing of controls plus extra padding
  $controlsPadding: $euiSizeL + $euiSizeXS;
  $bothControlsHeight: ($euiSizeL * 2) + $euiSizeXS;

  &.euiCodeBlock--hasControl {
    min-height: $euiSizeL;
  }

  &.euiCodeBlock--hasBothControls {
    min-height: $bothControlsHeight;
  }

  &.euiCodeBlock--hasControl .euiCodeBlock__pre--whiteSpacePreWrap {
    padding-right: $controlsPadding;
  }

  &.euiCodeBlock--hasControl .euiCodeBlock__pre--whiteSpacePre {
    margin-right: $controlsPadding;
  }

  @each $modifier, $amount in $euiCodeBlockPaddingModifiers {
    &.euiCodeBlock--#{$modifier} {
      .euiCodeBlock__pre {
        padding: $amount;
      }

      &.euiCodeBlock--hasControl {
        min-height: $euiSizeL + ($amount * 2);
      }

      &.euiCodeBlock--hasBothControls {
        min-height: $bothControlsHeight + ($amount * 2);
      }

      .euiCodeBlock__controls {
        top: $amount;
        right: $amount;
      }

      &.euiCodeBlock--hasControl .euiCodeBlock__pre--whiteSpacePreWrap {
        padding-right: $amount + $controlsPadding;
      }

      &.euiCodeBlock--hasControl .euiCodeBlock__pre--whiteSpacePre {
        margin-right: $amount + $controlsPadding;
      }
    }
  }


  /*
   * 1. Size the code against the text its embedded within.
   */
  &.euiCodeBlock--inline {
    display: inline-block;
    white-space: pre;
    color: $euiTextColor;
    font-size: 90%; /* 1 */
    padding: 0 $euiSizeS;
    background: $euiCodeBlockBackgroundColor;

    .euiCodeBlock__pre {
      padding: 0 $euiSizeXS;
    }

    .euiCodeBlock__code {
      display: inline;
      white-space: normal;
    }
  }

  &.euiCodeBlock--transparentBackground {
    background: transparent;
  }

  .prismjs > *::selection {
    // Only change the color if the variable IS a color
    // or else no highlight color shows up at all
    @if type-of($euiCodeBlockSelectedBackgroundColor) == color {
      background-color: $euiCodeBlockSelectedBackgroundColor;
    }
  }

  .token.punctuation:not(.interpolation-punctuation):not([class*='attr-']) {
    opacity: .7;
  }

  .token.comment,
  .token.prolog,
  .token.doctype,
  .token.cdata,
  .token.coord,
  .token.blockquote {
    color: $euiCodeBlockCommentColor;
    font-style: italic;
  }

  .token.selector {
    color: $euiCodeBlockSelectorTagColor;
  }

  .token.string,
  .token.interpolation,
  .token.interpolation-punctuation,
  .token.doc-comment .token.keyword,
  .token.attr-value,
  .token.url .token.content {
    color: $euiCodeBlockStringColor;
  }

  .token.number,
  .token.boolean,
  .token.keyword.nil,
  .token.regex,
  .token.variable,
  .token.unit,
  .token.hexcode,
  .token.attr-name,
  .token.attr-equals {
    color: $euiCodeBlockNumberColor;
  }

  .token.atrule .token.rule,
  .token.keyword {
    color: $euiCodeBlockKeywordColor;
  }

  .token.function {
    color: $euiCodeBlockFunctionTitleColor;
  }

  .token.tag {
    color: $euiCodeBlockTagColor;
  }

  .token.class-name {
    color: $euiCodeBlockTypeColor;
  }

  .token.property {
    color: $euiCodeBlockAttributeColor;
  }

  .token.console,
  .token.list-punctuation,
  .token.url-reference,
  .token.url .token.url {
    color: $euiCodeBlockSymbolColor;
  }

  .token.paramater {
    color: $euiCodeBlockParamsColor;
  }

  .token.meta,
  .token.important {
    color: $euiCodeBlockMetaColor;
  }

  .token.title {
    color: $euiCodeBlockTitleColor;
  }

  .token.section {
    color: $euiCodeBlockSectionColor;
  }

  .token.prefix.inserted,
  .token.prefix.deleted {
    padding-left: $euiSizeXS;
    margin-left: -$euiSizeXS;
  }

  .token.prefix.inserted {
    box-shadow: -$euiSizeXS 0 $euiCodeBlockAdditionColor;
    color: $euiCodeBlockAdditionColor;
  }

  .token.prefix.deleted {
    box-shadow: -$euiSizeXS 0 $euiCodeBlockDeletionColor;
    color: $euiCodeBlockDeletionColor;
  }

  .token.selector .token.class {
    color: $euiCodeBlockSelectorClassColor;
  }

  .token.selector .token.id {
    color: $euiCodeBlockSelectorIdColor;
  }

  .token.italic {
    font-style: italic;
  }

  .token.important,
  .token.bold {
    font-weight: $euiCodeFontWeightBold;
  }

  .token.url-reference,
  .token.url .token.url {
    text-decoration: underline;
  }

  .token.entity {
    cursor: help;
  }
}
