// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EuiDataGridCell renders 1`] = `
<EuiDataGridCell
  colIndex={0}
  columnId="someColumn"
  interactiveCellId="someId"
  isExpandable={true}
  popoverContent={[Function]}
  renderCellValue={[Function]}
  rowHeightUtils={
    Object {
      "cacheStyles": [MockFunction],
      "calculateHeightForLineCount": [MockFunction],
      "getCalculatedHeight": [MockFunction],
      "getLineCount": [MockFunction],
      "getRowHeight": [MockFunction],
      "getRowHeightOption": [MockFunction] {
        "calls": Array [
          Array [
            0,
            undefined,
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "getStylesForCell": [MockFunction],
      "isAutoHeight": [MockFunction],
      "isRowHeightOverride": [MockFunction],
      "pruneHiddenColumnHeights": [MockFunction],
      "setGrid": [MockFunction],
      "setRerenderGridBody": [MockFunction],
      "setRowHeight": [MockFunction],
    }
  }
  rowIndex={0}
  visibleRowIndex={0}
>
  <div
    className="euiDataGridRowCell"
    data-gridcell-column-id="someColumn"
    data-gridcell-column-index={0}
    data-gridcell-id="0,0"
    data-gridcell-row-index={0}
    data-gridcell-visible-row-index={0}
    data-test-subj="dataGridRowCell"
    onBlur={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    role="gridcell"
    style={
      Object {
        "lineHeight": undefined,
        "width": undefined,
      }
    }
    tabIndex={-1}
  >
    <div
      className="euiDataGridRowCell__expandFlex"
    >
      <div
        className="euiDataGridRowCell__expandContent"
      >
        <Memo()
          colIndex={0}
          columnId="someColumn"
          isDefinedHeight={false}
          isDetails={false}
          isExpandable={true}
          isExpanded={false}
          renderCellValue={[Function]}
          rowHeightUtils={
            Object {
              "cacheStyles": [MockFunction],
              "calculateHeightForLineCount": [MockFunction],
              "getCalculatedHeight": [MockFunction],
              "getLineCount": [MockFunction],
              "getRowHeight": [MockFunction],
              "getRowHeightOption": [MockFunction] {
                "calls": Array [
                  Array [
                    0,
                    undefined,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "getStylesForCell": [MockFunction],
              "isAutoHeight": [MockFunction],
              "isRowHeightOverride": [MockFunction],
              "pruneHiddenColumnHeights": [MockFunction],
              "setGrid": [MockFunction],
              "setRerenderGridBody": [MockFunction],
              "setRowHeight": [MockFunction],
            }
          }
          rowIndex={0}
          setCellContentsRef={[Function]}
          setCellProps={[Function]}
          visibleRowIndex={0}
        >
          <div
            className="euiDataGridRowCell__truncate"
            data-datagrid-cellcontent={true}
            style={Object {}}
          >
            <renderCellValue
              columnId="someColumn"
              data-test-subj="cell-content"
              isDetails={false}
              isExpandable={true}
              isExpanded={false}
              rowIndex={0}
              setCellProps={[Function]}
              visibleRowIndex={0}
            >
              <div>
                <button
                  data-datagrid-interactable="true"
                >
                  hello
                </button>
                <button
                  data-datagrid-interactable="true"
                >
                  world
                </button>
              </div>
            </renderCellValue>
          </div>
          <EuiScreenReaderOnly>
            <p
              className="euiScreenReaderOnly"
            >
              Row: 1; Column: 1
            </p>
          </EuiScreenReaderOnly>
        </Memo()>
      </div>
    </div>
  </div>
</EuiDataGridCell>
`;
