// Font sizing extends, using rem mixin
// All line-heights are aligned to baseline grid
// sass-lint:disable no-vendor-prefixes

@function convertToRem($size) {
  @return #{$size / $euiFontSize}rem;
}

// Spit out rem and px
@mixin fontSize($size: $euiFontSize, $sizingMethod: 'rem') {
  @if ($sizingMethod == 'rem') {
    font-size: $size;
    font-size: convertToRemOrEm($size, 'rem');
  } @else if ($sizingMethod == 'em') {
    font-size: convertToRemOrEm($size, 'em');
  }
}

// Our base gridline is at 1/2 the font-size, ensure line-heights stay on that gridline.
// EX: A proper line-height for text is 1.5 times the font-size.
//     If our base font size (euiFontSize) is 16, our baseline is 8 (16*1.5 / 3). To ensure the
//     text stays on the baseline, we pass a multiplier to calculate a line-height in rems.
@function lineHeightFromBaseline($multiplier: 3) {
  @return convertToRem(($euiFontSize/2)*$multiplier);
}
@mixin lineHeightFromBaseline($multiplier: 3) {
  line-height: lineHeightFromBaseline($multiplier);
}

// Redoing this mixin mainly to remove the letter-spacing
@mixin euiFont {
  font-family: $euiFontFamily;
  font-weight: $euiFontWeightRegular;
  letter-spacing: normal;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  font-kerning: normal;
}

@mixin euiFontSizeXS {
  @include fontSize($euiFontSizeXS);
  @include lineHeightFromBaseline(2);
}

@mixin euiFontSizeS {
  @include fontSize($euiFontSizeS);
  @include lineHeightFromBaseline(3);
}

@mixin euiFontSize {
  @include fontSize($euiFontSize);
  @include lineHeightFromBaseline(3);
}

@mixin euiFontSizeM {
  @include fontSize($euiFontSizeM);
  @include lineHeightFromBaseline(3);
}

@mixin euiFontSizeL {
  @include fontSize($euiFontSizeL);
  @include lineHeightFromBaseline(4);
}

@mixin euiFontSizeXL {
  @include fontSize($euiFontSizeXL);
  @include lineHeightFromBaseline(4);
}

@mixin euiFontSizeXXL {
  @include fontSize($euiFontSizeXXL);
  @include lineHeightFromBaseline(5);
}
